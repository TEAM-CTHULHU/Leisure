#vararg macros
#@auto
defGroup 'concat[' ']'
#@auto
defGroup 'or[' ']'
#@auto
defGroup 'and[' ']'

concat[ list =M= ['concat' (cons '[' (tail list))]

or[ list =M= do
  args = (dropLast 1 (tail list))
  eq args nil
    ['true']
    eq (tail args) nil
      args
      foldr1 (\v el . ['or' v el]) args

# for debugging macros
lexAsCons l = eq l nil
  nil
  is l lexCons
    cons (lexAsCons (head l)) (lexAsCons (tail l))
    is l token
      tokenName l
      l

#defInfixToken tokenName precedence = do
#  defToken tokenName
#  setValue (concat[ 'infixToken.' 
