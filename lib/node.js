// Generated by CoffeeScript 1.6.2
(function() {
  var Nil, addStats, booleanFor, cons, consFrom, defaultEnv, fs, root, _ref;

  defaultEnv = (root = module.exports = require('./base')).defaultEnv;

  _ref = require('./ast'), consFrom = _ref.consFrom, Nil = _ref.Nil, cons = _ref.cons;

  booleanFor = require('./runtime').booleanFor;

  fs = require('fs');

  defaultEnv.readFile = function(fileName, cont) {
    return fs.readFile(fileName, {
      encoding: 'utf8'
    }, cont);
  };

  defaultEnv.writeFile = function(fileName, data, cont) {
    return fs.writeFile(fileName, data, {
      encoding: 'utf8'
    }, cont);
  };

  defaultEnv.readDir = function(fileName, cont) {
    return fs.readdir(fileName, function(err, files) {
      if (!err) {
        files = consFrom(files);
      }
      return cont(err, files);
    });
  };

  addStats = function(name, stats, result) {
    return cons(cons(name, booleanFor(stats[name])), result);
  };

  defaultEnv.statFile = function(fileName, cont) {
    return fs.stat(fileName, function(err, stats) {
      var res;

      if (!err) {
        res = Nil;
        res = addStats('isBlockDevice', stats, res);
        res = addStats('isCharacterDevice', stats, res);
        res = addStats('isFIFO', stats, res);
        res = addStats('isSocket', stats, res);
        res = addStats('isSymbolicLink', stats, res);
        res = addStats('isFile', stats, res);
        res = addStats('isDirectory', stats, res);
        return cont(err, res);
      } else {
        return cont(err, null);
      }
    });
  };

  defaultEnv.statDir = function(fileName, cont) {
    return fs.stat(fileName, cont);
  };

}).call(this);

/*
//@ sourceMappingURL=node.map
*/
