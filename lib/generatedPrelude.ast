[
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"true","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"true = \\a b . a","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"true","body":{"_type":"anno","name":"type","data":"true","body":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"ref","varName":"a","range":[1,14]},"range":[1,0]},"range":[1,0]}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"false","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"false = \\a b . b","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"false","body":{"_type":"anno","name":"type","data":"false","body":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"ref","varName":"b","range":[1,15]},"range":[1,0]},"range":[1,0]}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"not","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"not b = b false true","range":[1,0]}},"arg":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"b","range":[1,8]},"arg":{"_type":"ref","varName":"false","range":[1,10]}},"arg":{"_type":"ref","varName":"true","range":[1,16]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"and","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"and a b = a b false","range":[1,0]}},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"a","range":[1,10]},"arg":{"_type":"ref","varName":"b","range":[1,12]}},"arg":{"_type":"ref","varName":"false","range":[1,14]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"or","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"or a b = a true b","range":[1,0]}},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"a","range":[1,9]},"arg":{"_type":"ref","varName":"true","range":[1,11]}},"arg":{"_type":"ref","varName":"b","range":[1,16]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"some","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"some x = \\someCase noneCase . someCase x","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"some","body":{"_type":"lambda","varName":"x","body":{"_type":"anno","name":"type","data":"some","body":{"_type":"lambda","varName":"someCase","body":{"_type":"lambda","varName":"noneCase","body":{"_type":"apply","func":{"_type":"ref","varName":"someCase","range":[1,30]},"arg":{"_type":"ref","varName":"x","range":[1,39]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"some2","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"some2 a b = \\someCase noneCase . someCase a b","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"some2","body":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"anno","name":"type","data":"some2","body":{"_type":"lambda","varName":"someCase","body":{"_type":"lambda","varName":"noneCase","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"someCase","range":[1,33]},"arg":{"_type":"ref","varName":"a","range":[1,42]}},"arg":{"_type":"ref","varName":"b","range":[1,44]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"none","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"none = \\someCase noneCase . noneCase","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"none","body":{"_type":"anno","name":"type","data":"none","body":{"_type":"lambda","varName":"someCase","body":{"_type":"lambda","varName":"noneCase","body":{"_type":"ref","varName":"noneCase","range":[1,28]},"range":[1,0]},"range":[1,0]}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isNone","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isNone obj = hasType obj none","range":[1,0]}},"arg":{"_type":"lambda","varName":"obj","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,13]},"arg":{"_type":"ref","varName":"obj","range":[1,21]}},"arg":{"_type":"ref","varName":"none","range":[1,25]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isSome","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isSome obj = hasType obj some","range":[1,0]}},"arg":{"_type":"lambda","varName":"obj","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,13]},"arg":{"_type":"ref","varName":"obj","range":[1,21]}},"arg":{"_type":"ref","varName":"some","range":[1,25]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isSome2","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isSome2 obj = hasType obj some2","range":[1,0]}},"arg":{"_type":"lambda","varName":"obj","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,14]},"arg":{"_type":"ref","varName":"obj","range":[1,22]}},"arg":{"_type":"ref","varName":"some2","range":[1,26]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"neq","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"neq a b = not (eq a b)","range":[1,0]}},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"ref","varName":"not","range":[1,10]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,15]},"arg":{"_type":"ref","varName":"a","range":[1,18]}},"arg":{"_type":"ref","varName":"b","range":[1,20]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"left","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"left x = \\lCase rCase . lCase x","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"left","body":{"_type":"lambda","varName":"x","body":{"_type":"anno","name":"type","data":"left","body":{"_type":"lambda","varName":"lCase","body":{"_type":"lambda","varName":"rCase","body":{"_type":"apply","func":{"_type":"ref","varName":"lCase","range":[1,24]},"arg":{"_type":"ref","varName":"x","range":[1,30]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"right","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"right x = \\lCase rCase . rCase x","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"right","body":{"_type":"lambda","varName":"x","body":{"_type":"anno","name":"type","data":"right","body":{"_type":"lambda","varName":"lCase","body":{"_type":"lambda","varName":"rCase","body":{"_type":"apply","func":{"_type":"ref","varName":"rCase","range":[1,25]},"arg":{"_type":"ref","varName":"x","range":[1,31]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strAsc","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strAsc string = _strAsc (assertType 'strAsc string' '*string' string)","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"apply","func":{"_type":"ref","varName":"_strAsc","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,25]},"arg":{"_type":"lit","value":"strAsc string","range":[1,36]}},"arg":{"_type":"lit","value":"*string","range":[1,52]}},"arg":{"_type":"ref","varName":"string","range":[1,62]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strChr","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strChr ascii = _strChr (assertType 'strChr string' '*number' ascii)","range":[1,0]}},"arg":{"_type":"lambda","varName":"ascii","body":{"_type":"apply","func":{"_type":"ref","varName":"_strChr","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,24]},"arg":{"_type":"lit","value":"strChr string","range":[1,35]}},"arg":{"_type":"lit","value":"*number","range":[1,51]}},"arg":{"_type":"ref","varName":"ascii","range":[1,61]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strAt","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"strAt string index = _strAt\n  assertType 'strAt string' '*string' string\n  assertType 'strAt index' '*number' index","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"lambda","varName":"index","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strAt","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,30]},"arg":{"_type":"lit","value":"strAt string","range":[1,41]}},"arg":{"_type":"lit","value":"*string","range":[1,56]}},"arg":{"_type":"ref","varName":"string","range":[1,66]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,75]},"arg":{"_type":"lit","value":"strAt index","range":[1,86]}},"arg":{"_type":"lit","value":"*number","range":[1,100]}},"arg":{"_type":"ref","varName":"index","range":[1,110]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strStartsWith","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"strStartsWith string prefix = _strStartsWith\n  assertType 'strStartsWith string' '*string' string\n  assertType 'strStartsWith prefix' '*string' prefix","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"lambda","varName":"prefix","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strStartsWith","range":[1,30]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,47]},"arg":{"_type":"lit","value":"strStartsWith string","range":[1,58]}},"arg":{"_type":"lit","value":"*string","range":[1,81]}},"arg":{"_type":"ref","varName":"string","range":[1,91]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,100]},"arg":{"_type":"lit","value":"strStartsWith prefix","range":[1,111]}},"arg":{"_type":"lit","value":"*string","range":[1,134]}},"arg":{"_type":"ref","varName":"prefix","range":[1,144]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strLen","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strLen string = _strLen (assertType 'strLen string' '*string' string)","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"apply","func":{"_type":"ref","varName":"_strLen","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,25]},"arg":{"_type":"lit","value":"strLen string","range":[1,36]}},"arg":{"_type":"lit","value":"*string","range":[1,52]}},"arg":{"_type":"ref","varName":"string","range":[1,62]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strToLowerCase","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strToLowerCase string = _strToLowerCase (assertType 'strToLowerCase string' '*string' string)","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"apply","func":{"_type":"ref","varName":"_strToLowerCase","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,41]},"arg":{"_type":"lit","value":"strToLowerCase string","range":[1,52]}},"arg":{"_type":"lit","value":"*string","range":[1,76]}},"arg":{"_type":"ref","varName":"string","range":[1,86]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strToUpperCase","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strToUpperCase string = _strToUpperCase (assertType 'strToUpperCase string' '*string' string)","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"apply","func":{"_type":"ref","varName":"_strToUpperCase","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,41]},"arg":{"_type":"lit","value":"strToUpperCase string","range":[1,52]}},"arg":{"_type":"lit","value":"*string","range":[1,76]}},"arg":{"_type":"ref","varName":"string","range":[1,86]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strReplace","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"strReplace string pat repl = _strReplace\n  assertType 'strReplace string' '*string' string\n  assert (or (hasType pat '*string') (hasType pat '*RegExp')) (strCat (cons 'strStartsWith pat should be type string or RegExp but it is type ' (cons (getType pat) (cons ': ' (cons (show pat) nil))))) pat\n  assertType 'strReplace repl' '*string' repl","range":[1,0]}},"arg":{"_type":"lambda","varName":"string","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"repl","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strReplace","range":[1,29]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,43]},"arg":{"_type":"lit","value":"strReplace string","range":[1,54]}},"arg":{"_type":"lit","value":"*string","range":[1,74]}},"arg":{"_type":"ref","varName":"string","range":[1,84]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,93]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,101]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,105]},"arg":{"_type":"ref","varName":"pat","range":[1,113]}},"arg":{"_type":"lit","value":"*string","range":[1,117]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,129]},"arg":{"_type":"ref","varName":"pat","range":[1,137]}},"arg":{"_type":"lit","value":"*RegExp","range":[1,141]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,154]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,162]},"arg":{"_type":"lit","value":"strStartsWith pat should be type string or RegExp but it is type ","range":[1,167]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,236]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,242]},"arg":{"_type":"ref","varName":"pat","range":[1,250]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,256]},"arg":{"_type":"lit","value":": ","range":[1,261]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,267]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"show","range":[1,273]},"arg":{"_type":"ref","varName":"pat","range":[1,278]}}},"arg":{"_type":"ref","varName":"nil","range":[1,283]}}}}}}},"arg":{"_type":"ref","varName":"pat","range":[1,292]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,298]},"arg":{"_type":"lit","value":"strReplace repl","range":[1,309]}},"arg":{"_type":"lit","value":"*string","range":[1,327]}},"arg":{"_type":"ref","varName":"repl","range":[1,337]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strSubstring","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"strSubstring str start end = _strSubstring\n  assertType 'strSubstring str' '*string' str\n  assertType 'strSubstring start' '*number' start\n  assertType 'strSubstring end' '*number' end","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strSubstring","range":[1,29]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,45]},"arg":{"_type":"lit","value":"strSubstring str","range":[1,56]}},"arg":{"_type":"lit","value":"*string","range":[1,75]}},"arg":{"_type":"ref","varName":"str","range":[1,85]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,91]},"arg":{"_type":"lit","value":"strSubstring start","range":[1,102]}},"arg":{"_type":"lit","value":"*number","range":[1,123]}},"arg":{"_type":"ref","varName":"start","range":[1,133]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,141]},"arg":{"_type":"lit","value":"strSubstring end","range":[1,152]}},"arg":{"_type":"lit","value":"*number","range":[1,171]}},"arg":{"_type":"ref","varName":"end","range":[1,181]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strSplit","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"strSplit str pat = _strSplit\n  assertType 'strSplit str' '*string' str\n  assert (or (hasType pat '*string') (hasType pat '*RegExp')) (strCat (cons 'strSplit pat should be type string or RegExp but it is type ' (cons (getType pat) (cons ': ' (cons (show pat) nil))))) pat","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strSplit","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,31]},"arg":{"_type":"lit","value":"strSplit str","range":[1,42]}},"arg":{"_type":"lit","value":"*string","range":[1,57]}},"arg":{"_type":"ref","varName":"str","range":[1,67]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,73]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,81]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,85]},"arg":{"_type":"ref","varName":"pat","range":[1,93]}},"arg":{"_type":"lit","value":"*string","range":[1,97]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,109]},"arg":{"_type":"ref","varName":"pat","range":[1,117]}},"arg":{"_type":"lit","value":"*RegExp","range":[1,121]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,134]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,142]},"arg":{"_type":"lit","value":"strSplit pat should be type string or RegExp but it is type ","range":[1,147]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,211]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,217]},"arg":{"_type":"ref","varName":"pat","range":[1,225]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,231]},"arg":{"_type":"lit","value":": ","range":[1,236]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,242]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"show","range":[1,248]},"arg":{"_type":"ref","varName":"pat","range":[1,253]}}},"arg":{"_type":"ref","varName":"nil","range":[1,258]}}}}}}},"arg":{"_type":"ref","varName":"pat","range":[1,267]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strCat","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strCat list = _strCat\n  assert (isList list) (strCat (cons 'strCat list should be type cons or nil but it is type ' (cons (getType list) (cons ': ' (cons list))))) list","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"_strCat","range":[1,14]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isList","range":[1,32]},"arg":{"_type":"ref","varName":"list","range":[1,39]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,46]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,54]},"arg":{"_type":"lit","value":"strCat list should be type cons or nil but it is type ","range":[1,59]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,117]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,123]},"arg":{"_type":"ref","varName":"list","range":[1,131]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,138]},"arg":{"_type":"lit","value":": ","range":[1,143]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,149]},"arg":{"_type":"ref","varName":"list","range":[1,154]}}}}}}},"arg":{"_type":"ref","varName":"list","range":[1,164]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strAdd","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"strAdd str1 str2 = _strAdd (assertType 'strAdd str1' '*string' str1) (assertType 'strAdd str2' '*string' str2)","range":[1,0]}},"arg":{"_type":"lambda","varName":"str1","body":{"_type":"lambda","varName":"str2","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strAdd","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,28]},"arg":{"_type":"lit","value":"strAdd str1","range":[1,39]}},"arg":{"_type":"lit","value":"*string","range":[1,53]}},"arg":{"_type":"ref","varName":"str1","range":[1,63]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,70]},"arg":{"_type":"lit","value":"strAdd str2","range":[1,81]}},"arg":{"_type":"lit","value":"*string","range":[1,95]}},"arg":{"_type":"ref","varName":"str2","range":[1,105]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strMatch","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"strMatch str pat = _strMatch\n  assertType 'strMatch str' '*string' str\n  assert (or (hasType pat '*string') (hasType pat '*RegExp')) (strCat (cons 'strMatch pat should be type string or RegExp but it is type ' (cons (getType pat) (cons ': ' (cons (show pat) nil))))) pat","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_strMatch","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,31]},"arg":{"_type":"lit","value":"strMatch str","range":[1,42]}},"arg":{"_type":"lit","value":"*string","range":[1,57]}},"arg":{"_type":"ref","varName":"str","range":[1,67]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,73]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,81]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,85]},"arg":{"_type":"ref","varName":"pat","range":[1,93]}},"arg":{"_type":"lit","value":"*string","range":[1,97]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,109]},"arg":{"_type":"ref","varName":"pat","range":[1,117]}},"arg":{"_type":"lit","value":"*RegExp","range":[1,121]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,134]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,142]},"arg":{"_type":"lit","value":"strMatch pat should be type string or RegExp but it is type ","range":[1,147]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,211]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,217]},"arg":{"_type":"ref","varName":"pat","range":[1,225]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,231]},"arg":{"_type":"lit","value":": ","range":[1,236]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,242]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"show","range":[1,248]},"arg":{"_type":"ref","varName":"pat","range":[1,253]}}},"arg":{"_type":"ref","varName":"nil","range":[1,258]}}}}}}},"arg":{"_type":"ref","varName":"pat","range":[1,267]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strToList","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strToList str = _strToList (assertType 'strToList str' '*string' str)","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"ref","varName":"_strToList","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,28]},"arg":{"_type":"lit","value":"strToList str","range":[1,39]}},"arg":{"_type":"lit","value":"*string","range":[1,55]}},"arg":{"_type":"ref","varName":"str","range":[1,65]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strFromList","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strFromList list = _strFromList\n  assert (isList list) (strCat (cons 'strFromList list should be type cons or nil but it is type ' (cons (getType list) (cons ': ' (cons list))))) list","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"_strFromList","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,34]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isList","range":[1,42]},"arg":{"_type":"ref","varName":"list","range":[1,49]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,56]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,64]},"arg":{"_type":"lit","value":"strFromList list should be type cons or nil but it is type ","range":[1,69]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,132]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,138]},"arg":{"_type":"ref","varName":"list","range":[1,146]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,153]},"arg":{"_type":"lit","value":": ","range":[1,158]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,164]},"arg":{"_type":"ref","varName":"list","range":[1,169]}}}}}}},"arg":{"_type":"ref","varName":"list","range":[1,179]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"regexp","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"regexp str = _regexp (assertType 'regexp str' '*string' str)","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"ref","varName":"_regexp","range":[1,13]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,22]},"arg":{"_type":"lit","value":"regexp str","range":[1,33]}},"arg":{"_type":"lit","value":"*string","range":[1,46]}},"arg":{"_type":"ref","varName":"str","range":[1,56]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"regexpFlags","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"regexpFlags str flags = _regexpFlags\n  assertType 'regexp str' '*string' str\n  assertType 'regexp flags' '*string' flags","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"flags","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_regexpFlags","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,39]},"arg":{"_type":"lit","value":"regexp str","range":[1,50]}},"arg":{"_type":"lit","value":"*string","range":[1,63]}},"arg":{"_type":"ref","varName":"str","range":[1,73]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,79]},"arg":{"_type":"lit","value":"regexp flags","range":[1,90]}},"arg":{"_type":"lit","value":"*string","range":[1,105]}},"arg":{"_type":"ref","varName":"flags","range":[1,115]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"jsonParse","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"jsonParse str failure success = _jsonParse\n  assertType 'jsonParse str' '*string' str\n  failure\n  success","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"failure","body":{"_type":"lambda","varName":"success","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"_jsonParse","range":[1,32]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertType","range":[1,45]},"arg":{"_type":"lit","value":"jsonParse str","range":[1,56]}},"arg":{"_type":"lit","value":"*string","range":[1,72]}},"arg":{"_type":"ref","varName":"str","range":[1,82]}}},"arg":{"_type":"ref","varName":"failure","range":[1,88]}},"arg":{"_type":"ref","varName":"success","range":[1,98]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"show","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"show x = _show x","range":[1,0]}},"arg":{"_type":"lambda","varName":"x","body":{"_type":"apply","func":{"_type":"ref","varName":"_show","range":[1,9]},"arg":{"_type":"ref","varName":"x","range":[1,15]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"id","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"id x = x","range":[1,0]}},"arg":{"_type":"lambda","varName":"x","body":{"_type":"ref","varName":"x","range":[1,7]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"compose","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"compose f g = \\x . f (g x)","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"compose","body":{"_type":"lambda","varName":"f","body":{"_type":"lambda","varName":"g","body":{"_type":"anno","name":"type","data":"compose","body":{"_type":"lambda","varName":"x","body":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"g","range":[1,22]},"arg":{"_type":"ref","varName":"x","range":[1,24]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"flip","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"flip func = \\x y . func y x","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"flip","body":{"_type":"lambda","varName":"func","body":{"_type":"anno","name":"type","data":"flip","body":{"_type":"lambda","varName":"x","body":{"_type":"lambda","varName":"y","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,19]},"arg":{"_type":"ref","varName":"y","range":[1,24]}},"arg":{"_type":"ref","varName":"x","range":[1,26]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"cons","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"cons a b = \\f . f a b","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"cons","body":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"anno","name":"type","data":"cons","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,16]},"arg":{"_type":"ref","varName":"a","range":[1,18]}},"arg":{"_type":"ref","varName":"b","range":[1,20]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isCons","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isCons c = hasType c cons","range":[1,0]}},"arg":{"_type":"lambda","varName":"c","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,11]},"arg":{"_type":"ref","varName":"c","range":[1,19]}},"arg":{"_type":"ref","varName":"cons","range":[1,21]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isList","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isList l = or (hasType l cons) (hasType l nil)","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,11]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,15]},"arg":{"_type":"ref","varName":"l","range":[1,23]}},"arg":{"_type":"ref","varName":"cons","range":[1,25]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,32]},"arg":{"_type":"ref","varName":"l","range":[1,40]}},"arg":{"_type":"ref","varName":"nil","range":[1,42]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"assertType","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"assertType msg type value = assert (hasType value type) (strCat (cons msg (cons ' should be type ' (cons (getDataType type) (cons ', but its type is ' (cons (getType value) (cons ': ' (cons (show value) nil)))))))) value","range":[1,0]}},"arg":{"_type":"lambda","varName":"msg","body":{"_type":"lambda","varName":"type","body":{"_type":"lambda","varName":"value","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,28]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,36]},"arg":{"_type":"ref","varName":"value","range":[1,44]}},"arg":{"_type":"ref","varName":"type","range":[1,50]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,57]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,65]},"arg":{"_type":"ref","varName":"msg","range":[1,70]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,75]},"arg":{"_type":"lit","value":" should be type ","range":[1,80]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,100]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getDataType","range":[1,106]},"arg":{"_type":"ref","varName":"type","range":[1,118]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,125]},"arg":{"_type":"lit","value":", but its type is ","range":[1,130]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,152]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,158]},"arg":{"_type":"ref","varName":"value","range":[1,166]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,174]},"arg":{"_type":"lit","value":": ","range":[1,179]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,185]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"show","range":[1,191]},"arg":{"_type":"ref","varName":"value","range":[1,196]}}},"arg":{"_type":"ref","varName":"nil","range":[1,203]}}}}}}}}}},"arg":{"_type":"ref","varName":"value","range":[1,215]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"nil","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"nil = \\a b . b","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"nil","body":{"_type":"anno","name":"type","data":"nil","body":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"ref","varName":"b","range":[1,13]},"range":[1,0]},"range":[1,0]}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isNil","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isNil n = hasType n nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"n","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,10]},"arg":{"_type":"ref","varName":"n","range":[1,18]}},"arg":{"_type":"ref","varName":"nil","range":[1,20]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"head","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"head l = l \\h t . h","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"ref","varName":"l","range":[1,9]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"ref","varName":"h","range":[1,18]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tail","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"tail l = l \\h t . t","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"ref","varName":"l","range":[1,9]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"ref","varName":"t","range":[1,18]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"last","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"last l = isNil (tail l)\n  head l\n  last (tail l)","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,9]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,16]},"arg":{"_type":"ref","varName":"l","range":[1,21]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,26]},"arg":{"_type":"ref","varName":"l","range":[1,31]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"last","range":[1,35]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,41]},"arg":{"_type":"ref","varName":"l","range":[1,46]}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"removeLast","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"removeLast l = isNil (tail l)\n  nil\n  cons (head l) (removeLast (tail l))","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,22]},"arg":{"_type":"ref","varName":"l","range":[1,27]}}},"arg":{"_type":"ref","varName":"nil","range":[1,32]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,38]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,44]},"arg":{"_type":"ref","varName":"l","range":[1,49]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"removeLast","range":[1,53]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,65]},"arg":{"_type":"ref","varName":"l","range":[1,70]}}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"length","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"length list = isCons list\n  + 1 (length (tail list))\n  assert (== nil list) (strCat (cons \"length argument is not a proper list: \" (cons list nil))) 0","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,14]},"arg":{"_type":"ref","varName":"list","range":[1,21]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,28]},"arg":{"_type":"lit","value":1,"range":[1,30]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"length","range":[1,33]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,41]},"arg":{"_type":"ref","varName":"list","range":[1,46]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,55]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,63]},"arg":{"_type":"ref","varName":"nil","range":[1,66]}},"arg":{"_type":"ref","varName":"list","range":[1,70]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,77]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,85]},"arg":{"_type":"lit","value":"length argument is not a proper list: ","range":[1,90]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,132]},"arg":{"_type":"ref","varName":"list","range":[1,137]}},"arg":{"_type":"ref","varName":"nil","range":[1,142]}}}}},"arg":{"_type":"lit","value":0,"range":[1,149]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"append","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"append a b = isNil a\n  b\n  cons (head a) (append (tail a) b)","range":[1,0]}},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,13]},"arg":{"_type":"ref","varName":"a","range":[1,19]}},"arg":{"_type":"ref","varName":"b","range":[1,23]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,27]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,33]},"arg":{"_type":"ref","varName":"a","range":[1,38]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,42]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,50]},"arg":{"_type":"ref","varName":"a","range":[1,55]}}},"arg":{"_type":"ref","varName":"b","range":[1,58]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"flatten","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"flatten list = isCons list\n  subflatten list nil\n  list","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,15]},"arg":{"_type":"ref","varName":"list","range":[1,22]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"subflatten","range":[1,29]},"arg":{"_type":"ref","varName":"list","range":[1,40]}},"arg":{"_type":"ref","varName":"nil","range":[1,45]}}},"arg":{"_type":"ref","varName":"list","range":[1,51]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"subflatten","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"subflatten list result = isNil list\n  result\n  isCons list\n    subflatten (head list) (subflatten (tail list) result)\n    cons list result","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,25]},"arg":{"_type":"ref","varName":"list","range":[1,31]}},"arg":{"_type":"ref","varName":"result","range":[1,38]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,47]},"arg":{"_type":"ref","varName":"list","range":[1,54]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"subflatten","range":[1,63]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,75]},"arg":{"_type":"ref","varName":"list","range":[1,80]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"subflatten","range":[1,87]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,99]},"arg":{"_type":"ref","varName":"list","range":[1,104]}}},"arg":{"_type":"ref","varName":"result","range":[1,110]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,122]},"arg":{"_type":"ref","varName":"list","range":[1,127]}},"arg":{"_type":"ref","varName":"result","range":[1,132]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"reverse","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"reverse l = rev l nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"rev","range":[1,12]},"arg":{"_type":"ref","varName":"l","range":[1,16]}},"arg":{"_type":"ref","varName":"nil","range":[1,18]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"rev","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"rev l result = isNil l\n  result\n  rev (tail l) (cons (head l) result)","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,15]},"arg":{"_type":"ref","varName":"l","range":[1,21]}},"arg":{"_type":"ref","varName":"result","range":[1,25]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"rev","range":[1,34]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,39]},"arg":{"_type":"ref","varName":"l","range":[1,44]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,48]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,54]},"arg":{"_type":"ref","varName":"l","range":[1,59]}}},"arg":{"_type":"ref","varName":"result","range":[1,62]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filter","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filter func list = isNil list\n  nil\n  func (head list) (cons (head list)) id (filter func (tail list))","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,19]},"arg":{"_type":"ref","varName":"list","range":[1,25]}},"arg":{"_type":"ref","varName":"nil","range":[1,32]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,38]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,44]},"arg":{"_type":"ref","varName":"list","range":[1,49]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,56]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,62]},"arg":{"_type":"ref","varName":"list","range":[1,67]}}}},"arg":{"_type":"ref","varName":"id","range":[1,74]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filter","range":[1,78]},"arg":{"_type":"ref","varName":"func","range":[1,85]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,91]},"arg":{"_type":"ref","varName":"list","range":[1,96]}}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"find","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"find predicate list = isNil list\n  none\n  predicate (head list) (some (head list)) (find predicate (tail list))","range":[1,0]}},"arg":{"_type":"lambda","varName":"predicate","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,22]},"arg":{"_type":"ref","varName":"list","range":[1,28]}},"arg":{"_type":"ref","varName":"none","range":[1,35]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"predicate","range":[1,42]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,53]},"arg":{"_type":"ref","varName":"list","range":[1,58]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"some","range":[1,65]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,71]},"arg":{"_type":"ref","varName":"list","range":[1,76]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"find","range":[1,84]},"arg":{"_type":"ref","varName":"predicate","range":[1,89]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,100]},"arg":{"_type":"ref","varName":"list","range":[1,105]}}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"contains","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"contains list item = find (\\el . eq el item) list (\\x . true) false","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"find","range":[1,21]},"arg":{"_type":"lambda","varName":"el","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,33]},"arg":{"_type":"ref","varName":"el","range":[1,36]}},"arg":{"_type":"ref","varName":"item","range":[1,39]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"list","range":[1,45]}},"arg":{"_type":"lambda","varName":"x","body":{"_type":"ref","varName":"true","range":[1,56]},"range":[1,0]}},"arg":{"_type":"ref","varName":"false","range":[1,62]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"map","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"map func l = isNil l\n  nil\n  cons (func (head l)) (map func (tail l))","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,13]},"arg":{"_type":"ref","varName":"l","range":[1,19]}},"arg":{"_type":"ref","varName":"nil","range":[1,23]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,29]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,35]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,41]},"arg":{"_type":"ref","varName":"l","range":[1,46]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,51]},"arg":{"_type":"ref","varName":"func","range":[1,55]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,61]},"arg":{"_type":"ref","varName":"l","range":[1,66]}}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"mapSave","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"mapSave func l = isNil l\n  nil\n  \\\\\n    newH = func (head l)\n    newT = mapSave func (tail l)\n    .\n    and (eq newH (head l)) (eq newT (tail l))\n      l\n      cons newH newT","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,17]},"arg":{"_type":"ref","varName":"l","range":[1,23]}},"arg":{"_type":"ref","varName":"nil","range":[1,27]}},"arg":{"_type":"let","varName":"newH","value":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,47]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,53]},"arg":{"_type":"ref","varName":"l","range":[1,58]}}},"body":{"_type":"let","varName":"newT","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"mapSave","range":[1,72]},"arg":{"_type":"ref","varName":"func","range":[1,80]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,86]},"arg":{"_type":"ref","varName":"l","range":[1,91]}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,104]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,109]},"arg":{"_type":"ref","varName":"newH","range":[1,112]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,118]},"arg":{"_type":"ref","varName":"l","range":[1,123]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,128]},"arg":{"_type":"ref","varName":"newT","range":[1,131]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,137]},"arg":{"_type":"ref","varName":"l","range":[1,142]}}}},"arg":{"_type":"ref","varName":"l","range":[1,152]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,160]},"arg":{"_type":"ref","varName":"newH","range":[1,165]}},"arg":{"_type":"ref","varName":"newT","range":[1,170]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"foldl","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"foldl func initialValue l = l (\\h t D . foldl func (func initialValue h) t) initialValue","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"initialValue","body":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"l","range":[1,28]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldl","range":[1,40]},"arg":{"_type":"ref","varName":"func","range":[1,46]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,52]},"arg":{"_type":"ref","varName":"initialValue","range":[1,57]}},"arg":{"_type":"ref","varName":"h","range":[1,70]}}},"arg":{"_type":"ref","varName":"t","range":[1,73]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"initialValue","range":[1,76]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"foldl1","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"foldl1 func l = l \\h t . foldl func h t","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"ref","varName":"l","range":[1,16]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldl","range":[1,25]},"arg":{"_type":"ref","varName":"func","range":[1,31]}},"arg":{"_type":"ref","varName":"h","range":[1,36]}},"arg":{"_type":"ref","varName":"t","range":[1,38]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"foldr","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"foldr func initialValue list = list\n  \\h t D . func h (foldr func initialValue t)\n  initialValue","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"initialValue","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,31]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,47]},"arg":{"_type":"ref","varName":"h","range":[1,52]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldr","range":[1,55]},"arg":{"_type":"ref","varName":"func","range":[1,61]}},"arg":{"_type":"ref","varName":"initialValue","range":[1,66]}},"arg":{"_type":"ref","varName":"t","range":[1,79]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"initialValue","range":[1,84]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"foldr1","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"foldr1 func list = list \\h t . isNil t\n  h\n  func h (foldr1 func t)","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,19]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,31]},"arg":{"_type":"ref","varName":"t","range":[1,37]}},"arg":{"_type":"ref","varName":"h","range":[1,41]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,45]},"arg":{"_type":"ref","varName":"h","range":[1,50]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldr1","range":[1,53]},"arg":{"_type":"ref","varName":"func","range":[1,60]}},"arg":{"_type":"ref","varName":"t","range":[1,65]}}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"intersperse","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"intersperse list element = list (\\h t D .\n  isNil t\n    list\n    cons h (cons element (intersperse t element))) nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"element","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,27]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,44]},"arg":{"_type":"ref","varName":"t","range":[1,50]}},"arg":{"_type":"ref","varName":"list","range":[1,56]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,65]},"arg":{"_type":"ref","varName":"h","range":[1,70]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,73]},"arg":{"_type":"ref","varName":"element","range":[1,78]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"intersperse","range":[1,87]},"arg":{"_type":"ref","varName":"t","range":[1,99]}},"arg":{"_type":"ref","varName":"element","range":[1,101]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,112]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"join","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"join list el = strCat (intersperse list el)","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"el","body":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"intersperse","range":[1,23]},"arg":{"_type":"ref","varName":"list","range":[1,35]}},"arg":{"_type":"ref","varName":"el","range":[1,40]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"findIndex","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"findIndex func list = idx list func 0","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"idx","range":[1,22]},"arg":{"_type":"ref","varName":"list","range":[1,26]}},"arg":{"_type":"ref","varName":"func","range":[1,31]}},"arg":{"_type":"lit","value":0,"range":[1,36]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"idx","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"idx list func pos = list\n  \\h t D . func h\n    pos\n    idx t func (+ 1 pos)\n  -1","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,20]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,36]},"arg":{"_type":"ref","varName":"h","range":[1,41]}},"arg":{"_type":"ref","varName":"pos","range":[1,47]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"idx","range":[1,55]},"arg":{"_type":"ref","varName":"t","range":[1,59]}},"arg":{"_type":"ref","varName":"func","range":[1,61]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,67]},"arg":{"_type":"lit","value":1,"range":[1,69]}},"arg":{"_type":"ref","varName":"pos","range":[1,71]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"lit","value":-1,"range":[1,78]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"index","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"index list el = find (\\item . == el item) list","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"el","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"find","range":[1,16]},"arg":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,30]},"arg":{"_type":"ref","varName":"el","range":[1,33]}},"arg":{"_type":"ref","varName":"item","range":[1,36]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"list","range":[1,42]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"increasing","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"increasing x = cons x (increasing (+ x 1))","range":[1,0]}},"arg":{"_type":"lambda","varName":"x","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,15]},"arg":{"_type":"ref","varName":"x","range":[1,20]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"increasing","range":[1,23]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,35]},"arg":{"_type":"ref","varName":"x","range":[1,37]}},"arg":{"_type":"lit","value":1,"range":[1,39]}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"wholes","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"wholes = increasing 0","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"increasing","range":[1,9]},"arg":{"_type":"lit","value":0,"range":[1,20]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"naturals","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"naturals = tail wholes","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,11]},"arg":{"_type":"ref","varName":"wholes","range":[1,16]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"zip","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"zip a b = isNil a\n  nil\n  isNil b\n    nil\n    cons (cons (head a) (head b)) (zip (tail a) (tail b))","range":[1,0]}},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,10]},"arg":{"_type":"ref","varName":"a","range":[1,16]}},"arg":{"_type":"ref","varName":"nil","range":[1,20]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,26]},"arg":{"_type":"ref","varName":"b","range":[1,32]}},"arg":{"_type":"ref","varName":"nil","range":[1,38]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,46]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,52]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,58]},"arg":{"_type":"ref","varName":"a","range":[1,63]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,67]},"arg":{"_type":"ref","varName":"b","range":[1,72]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"zip","range":[1,77]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,82]},"arg":{"_type":"ref","varName":"a","range":[1,87]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,91]},"arg":{"_type":"ref","varName":"b","range":[1,96]}}}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"assertAlist","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"assertAlist msg value result = assert (isAlist value) (strCat (cons msg (cons ' should be a association list, but it is not; its type is ' (cons (getType value) (cons ': ' (cons (show value) nil)))))) result","range":[1,0]}},"arg":{"_type":"lambda","varName":"msg","body":{"_type":"lambda","varName":"value","body":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assert","range":[1,31]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isAlist","range":[1,39]},"arg":{"_type":"ref","varName":"value","range":[1,47]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,55]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,63]},"arg":{"_type":"ref","varName":"msg","range":[1,68]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,73]},"arg":{"_type":"lit","value":" should be a association list, but it is not; its type is ","range":[1,78]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,140]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,146]},"arg":{"_type":"ref","varName":"value","range":[1,154]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,162]},"arg":{"_type":"lit","value":": ","range":[1,167]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,173]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"show","range":[1,179]},"arg":{"_type":"ref","varName":"value","range":[1,184]}}},"arg":{"_type":"ref","varName":"nil","range":[1,191]}}}}}}}},"arg":{"_type":"ref","varName":"result","range":[1,201]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"acons","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"acons k v alist = assertAlist \"acons alist\" alist (\\@ type cons . \\f . \\@ assoc true . f (cons k v) alist)","range":[1,0]}},"arg":{"_type":"lambda","varName":"k","body":{"_type":"lambda","varName":"v","body":{"_type":"lambda","varName":"alist","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assertAlist","range":[1,18]},"arg":{"_type":"lit","value":"acons alist","range":[1,30]}},"arg":{"_type":"ref","varName":"alist","range":[1,44]}},"arg":{"_type":"anno","name":"type","data":"cons","body":{"_type":"lambda","varName":"f","body":{"_type":"anno","name":"assoc","data":"true","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,87]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,90]},"arg":{"_type":"ref","varName":"k","range":[1,95]}},"arg":{"_type":"ref","varName":"v","range":[1,97]}}},"arg":{"_type":"ref","varName":"alist","range":[1,100]}}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"assoc","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"assoc k alist  = find (\\el . eq k (head el)) alist (\\cell . cell \\head tail . some tail) none","range":[1,0]}},"arg":{"_type":"lambda","varName":"k","body":{"_type":"lambda","varName":"alist","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"find","range":[1,17]},"arg":{"_type":"lambda","varName":"el","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,29]},"arg":{"_type":"ref","varName":"k","range":[1,32]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,35]},"arg":{"_type":"ref","varName":"el","range":[1,40]}}},"range":[1,0]}},"arg":{"_type":"ref","varName":"alist","range":[1,45]}},"arg":{"_type":"lambda","varName":"cell","body":{"_type":"apply","func":{"_type":"ref","varName":"cell","range":[1,60]},"arg":{"_type":"lambda","varName":"head","body":{"_type":"lambda","varName":"tail","body":{"_type":"apply","func":{"_type":"ref","varName":"some","range":[1,78]},"arg":{"_type":"ref","varName":"tail","range":[1,83]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"none","range":[1,89]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"rassoc","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"rassoc v alist = find (\\el . eq v (tail el)) alist (\\cell . cell \\head tail . some head) none","range":[1,0]}},"arg":{"_type":"lambda","varName":"v","body":{"_type":"lambda","varName":"alist","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"find","range":[1,17]},"arg":{"_type":"lambda","varName":"el","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,29]},"arg":{"_type":"ref","varName":"v","range":[1,32]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,35]},"arg":{"_type":"ref","varName":"el","range":[1,40]}}},"range":[1,0]}},"arg":{"_type":"ref","varName":"alist","range":[1,45]}},"arg":{"_type":"lambda","varName":"cell","body":{"_type":"apply","func":{"_type":"ref","varName":"cell","range":[1,60]},"arg":{"_type":"lambda","varName":"head","body":{"_type":"lambda","varName":"tail","body":{"_type":"apply","func":{"_type":"ref","varName":"some","range":[1,78]},"arg":{"_type":"ref","varName":"head","range":[1,83]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"none","range":[1,89]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isAlist","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isAlist obj = or (isNil obj) (hasProperty obj 'assoc')","range":[1,0]}},"arg":{"_type":"lambda","varName":"obj","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,14]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,18]},"arg":{"_type":"ref","varName":"obj","range":[1,24]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasProperty","range":[1,30]},"arg":{"_type":"ref","varName":"obj","range":[1,42]}},"arg":{"_type":"lit","value":"assoc","range":[1,46]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"aconsPair","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"aconsPair keyValue list = \\@ type cons . \\f . \\@ assoc true . f keyValue list","range":[1,0]}},"arg":{"_type":"lambda","varName":"keyValue","body":{"_type":"lambda","varName":"list","body":{"_type":"anno","name":"type","data":"cons","body":{"_type":"lambda","varName":"f","body":{"_type":"anno","name":"assoc","data":"true","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,62]},"arg":{"_type":"ref","varName":"keyValue","range":[1,64]}},"arg":{"_type":"ref","varName":"list","range":[1,73]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"appendAlist","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"appendAlist a b = isNil a\n  b\n  aconsPair (head a) (appendAlist (tail a) b)","range":[1,0]}},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,18]},"arg":{"_type":"ref","varName":"a","range":[1,24]}},"arg":{"_type":"ref","varName":"b","range":[1,28]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,32]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,43]},"arg":{"_type":"ref","varName":"a","range":[1,48]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"appendAlist","range":[1,52]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,65]},"arg":{"_type":"ref","varName":"a","range":[1,70]}}},"arg":{"_type":"ref","varName":"b","range":[1,73]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"keys","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"keys list = map (\\l . head l) list","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,12]},"arg":{"_type":"lambda","varName":"l","body":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,22]},"arg":{"_type":"ref","varName":"l","range":[1,27]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"list","range":[1,30]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"getProperty","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"getProperty func prop = getProperties func\n  \\props . assoc prop props\n  none","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"prop","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getProperties","range":[1,24]},"arg":{"_type":"ref","varName":"func","range":[1,38]}},"arg":{"_type":"lambda","varName":"props","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assoc","range":[1,54]},"arg":{"_type":"ref","varName":"prop","range":[1,60]}},"arg":{"_type":"ref","varName":"props","range":[1,65]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"none","range":[1,73]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"hasProperty","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"hasProperty func prop = getProperty func prop\n  \\_ . true\n  false","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"prop","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getProperty","range":[1,24]},"arg":{"_type":"ref","varName":"func","range":[1,36]}},"arg":{"_type":"ref","varName":"prop","range":[1,41]}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"ref","varName":"true","range":[1,53]},"range":[1,0]}},"arg":{"_type":"ref","varName":"false","range":[1,60]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"quicksort","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"quicksort less list = (qs less list) nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"less","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"qs","range":[1,23]},"arg":{"_type":"ref","varName":"less","range":[1,26]}},"arg":{"_type":"ref","varName":"list","range":[1,31]}},"arg":{"_type":"ref","varName":"nil","range":[1,37]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"qs","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"qs sortedFunc list = list\n  \\h t D . \\\\\n    greater = filter (sortedFunc h) t\n    lesser = filter (compose not (sortedFunc h)) t\n    .\n    \\rest . (qs sortedFunc lesser) (cons h ((qs sortedFunc greater) rest))\n  id","range":[1,0]}},"arg":{"_type":"lambda","varName":"sortedFunc","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,21]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"let","varName":"greater","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filter","range":[1,54]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"sortedFunc","range":[1,62]},"arg":{"_type":"ref","varName":"h","range":[1,73]}}},"arg":{"_type":"ref","varName":"t","range":[1,76]}},"body":{"_type":"let","varName":"lesser","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filter","range":[1,91]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"compose","range":[1,99]},"arg":{"_type":"ref","varName":"not","range":[1,107]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"sortedFunc","range":[1,112]},"arg":{"_type":"ref","varName":"h","range":[1,123]}}}},"arg":{"_type":"ref","varName":"t","range":[1,127]}},"body":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"qs","range":[1,148]},"arg":{"_type":"ref","varName":"sortedFunc","range":[1,151]}},"arg":{"_type":"ref","varName":"lesser","range":[1,162]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,171]},"arg":{"_type":"ref","varName":"h","range":[1,176]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"qs","range":[1,180]},"arg":{"_type":"ref","varName":"sortedFunc","range":[1,183]}},"arg":{"_type":"ref","varName":"greater","range":[1,194]}},"arg":{"_type":"ref","varName":"rest","range":[1,203]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"id","range":[1,212]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"insertSorted","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"insertSorted sortFunc item list = list\n  \\h t D . sortFunc item h (cons item list) (cons h (insertSorted sortFunc item t))\n  cons item nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"sortFunc","body":{"_type":"lambda","varName":"item","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,34]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"sortFunc","range":[1,50]},"arg":{"_type":"ref","varName":"item","range":[1,59]}},"arg":{"_type":"ref","varName":"h","range":[1,64]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,67]},"arg":{"_type":"ref","varName":"item","range":[1,72]}},"arg":{"_type":"ref","varName":"list","range":[1,77]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,84]},"arg":{"_type":"ref","varName":"h","range":[1,89]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"insertSorted","range":[1,92]},"arg":{"_type":"ref","varName":"sortFunc","range":[1,105]}},"arg":{"_type":"ref","varName":"item","range":[1,114]}},"arg":{"_type":"ref","varName":"t","range":[1,119]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,125]},"arg":{"_type":"ref","varName":"item","range":[1,130]}},"arg":{"_type":"ref","varName":"nil","range":[1,135]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"token","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"token txt pos = \\f . f txt pos","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"token","body":{"_type":"lambda","varName":"txt","body":{"_type":"lambda","varName":"pos","body":{"_type":"anno","name":"type","data":"token","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,21]},"arg":{"_type":"ref","varName":"txt","range":[1,23]}},"arg":{"_type":"ref","varName":"pos","range":[1,27]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tokenString","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"tokenString tok = tok \\t p . t","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,18]},"arg":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"p","body":{"_type":"ref","varName":"t","range":[1,29]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tokenFilepos","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"tokenFilepos tok = tok \\t p . p","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,19]},"arg":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"p","body":{"_type":"ref","varName":"p","range":[1,30]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tokenPos","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"tokenPos tok = tok \\t p . isFilepos p\n  fileposOffset p\n  p","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,15]},"arg":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isFilepos","range":[1,26]},"arg":{"_type":"ref","varName":"p","range":[1,36]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposOffset","range":[1,40]},"arg":{"_type":"ref","varName":"p","range":[1,54]}}},"arg":{"_type":"ref","varName":"p","range":[1,58]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isToken","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isToken t = hasType t token","range":[1,0]}},"arg":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,12]},"arg":{"_type":"ref","varName":"t","range":[1,20]}},"arg":{"_type":"ref","varName":"token","range":[1,22]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"emptyLineStarts","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"emptyLineStarts = cons 'EMPTYFILE.lsr' (cons 1 nil)","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,18]},"arg":{"_type":"lit","value":"EMPTYFILE.lsr","range":[1,23]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,40]},"arg":{"_type":"lit","value":1,"range":[1,45]}},"arg":{"_type":"ref","varName":"nil","range":[1,47]}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filepos","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"filepos file line offset = \\f . f file line offset","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"filepos","body":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"anno","name":"type","data":"filepos","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,32]},"arg":{"_type":"ref","varName":"file","range":[1,34]}},"arg":{"_type":"ref","varName":"line","range":[1,39]}},"arg":{"_type":"ref","varName":"offset","range":[1,44]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"fileposFile","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"fileposFile p = p \\file line offset . file","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,16]},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"ref","varName":"file","range":[1,38]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"fileposLine","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"fileposLine p = p \\file line offset . line","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,16]},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"ref","varName":"line","range":[1,38]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"fileposOffset","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"fileposOffset p = p \\file line offset . offset","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,18]},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"ref","varName":"offset","range":[1,40]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isFilepos","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isFilepos p = hasType p filepos","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,14]},"arg":{"_type":"ref","varName":"p","range":[1,22]}},"arg":{"_type":"ref","varName":"filepos","range":[1,24]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"addFilepos","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"addFilepos pos change = isFilepos pos pos emptyFilePos\n  \\file line offset . filepos file line (+ offset change)","range":[1,0]}},"arg":{"_type":"lambda","varName":"pos","body":{"_type":"lambda","varName":"change","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isFilepos","range":[1,24]},"arg":{"_type":"ref","varName":"pos","range":[1,34]}},"arg":{"_type":"ref","varName":"pos","range":[1,38]}},"arg":{"_type":"ref","varName":"emptyFilePos","range":[1,42]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filepos","range":[1,77]},"arg":{"_type":"ref","varName":"file","range":[1,85]}},"arg":{"_type":"ref","varName":"line","range":[1,90]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,96]},"arg":{"_type":"ref","varName":"offset","range":[1,98]}},"arg":{"_type":"ref","varName":"change","range":[1,105]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"emptyFilePos","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"emptyFilePos = filepos 'NOTHING.lsr' 0 0","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filepos","range":[1,15]},"arg":{"_type":"lit","value":"NOTHING.lsr","range":[1,23]}},"arg":{"_type":"lit","value":0,"range":[1,37]}},"arg":{"_type":"lit","value":0,"range":[1,39]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isEmptyPos","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isEmptyPos pos = and (isFilepos pos) (and (eq 0 (fileposLine pos)) (eq 0 (fileposOffset pos)))","range":[1,0]}},"arg":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,17]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isFilepos","range":[1,22]},"arg":{"_type":"ref","varName":"pos","range":[1,32]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,38]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,43]},"arg":{"_type":"lit","value":0,"range":[1,46]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposLine","range":[1,49]},"arg":{"_type":"ref","varName":"pos","range":[1,61]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,68]},"arg":{"_type":"lit","value":0,"range":[1,71]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposOffset","range":[1,74]},"arg":{"_type":"ref","varName":"pos","range":[1,88]}}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"emptyFor","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"emptyFor thing = filepos (fileposFile (position thing)) 0 0","range":[1,0]}},"arg":{"_type":"lambda","varName":"thing","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filepos","range":[1,17]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposFile","range":[1,26]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,39]},"arg":{"_type":"ref","varName":"thing","range":[1,48]}}}},"arg":{"_type":"lit","value":0,"range":[1,56]}},"arg":{"_type":"lit","value":0,"range":[1,58]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"startFilePos","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"startFilePos = emptyFilePos","range":[1,0]}},"arg":{"_type":"ref","varName":"emptyFilePos","range":[1,15]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filePosFor","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filePosFor lineStarts offset = countFilePos (head (tail lineStarts)) 0 (tail (tail lineStarts)) offset\n  \\line offset . filepos (head lineStarts) line offset","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"offset","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countFilePos","range":[1,31]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,45]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,51]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,56]}}}},"arg":{"_type":"lit","value":0,"range":[1,69]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,72]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,78]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,83]}}}},"arg":{"_type":"ref","varName":"offset","range":[1,96]}},"arg":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filepos","range":[1,120]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,129]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,134]}}},"arg":{"_type":"ref","varName":"line","range":[1,146]}},"arg":{"_type":"ref","varName":"offset","range":[1,151]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countFilePos","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"countFilePos line lineOffset starts offset = or (isNil starts) (> (head starts) offset)\n  \\f . f line (- offset lineOffset)\n  countFilePos (+ line 1) (head starts) (tail starts) offset","range":[1,0]}},"arg":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"lineOffset","body":{"_type":"lambda","varName":"starts","body":{"_type":"lambda","varName":"offset","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,45]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,49]},"arg":{"_type":"ref","varName":"starts","range":[1,55]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,64]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,67]},"arg":{"_type":"ref","varName":"starts","range":[1,72]}}},"arg":{"_type":"ref","varName":"offset","range":[1,80]}}},"arg":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,95]},"arg":{"_type":"ref","varName":"line","range":[1,97]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"-","range":[1,103]},"arg":{"_type":"ref","varName":"offset","range":[1,105]}},"arg":{"_type":"ref","varName":"lineOffset","range":[1,112]}}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countFilePos","range":[1,126]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,140]},"arg":{"_type":"ref","varName":"line","range":[1,142]}},"arg":{"_type":"lit","value":1,"range":[1,147]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,151]},"arg":{"_type":"ref","varName":"starts","range":[1,156]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,165]},"arg":{"_type":"ref","varName":"starts","range":[1,170]}}},"arg":{"_type":"ref","varName":"offset","range":[1,178]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"fileposList","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"fileposList pos = pos \\file line offset . cons line (cons offset nil)","range":[1,0]}},"arg":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"ref","varName":"pos","range":[1,18]},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"offset","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,42]},"arg":{"_type":"ref","varName":"line","range":[1,47]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,53]},"arg":{"_type":"ref","varName":"offset","range":[1,58]}},"arg":{"_type":"ref","varName":"nil","range":[1,65]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"parens start end content = \\f . f start end content","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"parens","body":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"content","body":{"_type":"anno","name":"type","data":"parens","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,32]},"arg":{"_type":"ref","varName":"start","range":[1,34]}},"arg":{"_type":"ref","varName":"end","range":[1,40]}},"arg":{"_type":"ref","varName":"content","range":[1,44]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parensStart","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parensStart p = p \\s e c . s","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,16]},"arg":{"_type":"lambda","varName":"s","body":{"_type":"lambda","varName":"e","body":{"_type":"lambda","varName":"c","body":{"_type":"ref","varName":"s","range":[1,27]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parensEnd","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parensEnd p = p \\s e c . e","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,14]},"arg":{"_type":"lambda","varName":"s","body":{"_type":"lambda","varName":"e","body":{"_type":"lambda","varName":"c","body":{"_type":"ref","varName":"e","range":[1,25]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parensContent","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parensContent p = p \\s e c . c","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,18]},"arg":{"_type":"lambda","varName":"s","body":{"_type":"lambda","varName":"e","body":{"_type":"lambda","varName":"c","body":{"_type":"ref","varName":"c","range":[1,29]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isParens","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isParens p = hasType p parens","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,13]},"arg":{"_type":"ref","varName":"p","range":[1,21]}},"arg":{"_type":"ref","varName":"parens","range":[1,23]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"makeParens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"makeParens start end content =\n  and (isCons content) (isNil (tail content))\n    makeParens start end (head content)\n    or (isToken content) (isParens content)\n      content\n      parens start end content","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"content","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,33]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,38]},"arg":{"_type":"ref","varName":"content","range":[1,45]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,55]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,62]},"arg":{"_type":"ref","varName":"content","range":[1,67]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeParens","range":[1,81]},"arg":{"_type":"ref","varName":"start","range":[1,92]}},"arg":{"_type":"ref","varName":"end","range":[1,98]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,103]},"arg":{"_type":"ref","varName":"content","range":[1,108]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,121]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,125]},"arg":{"_type":"ref","varName":"content","range":[1,133]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,143]},"arg":{"_type":"ref","varName":"content","range":[1,152]}}},"arg":{"_type":"ref","varName":"content","range":[1,167]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parens","range":[1,181]},"arg":{"_type":"ref","varName":"start","range":[1,188]}},"arg":{"_type":"ref","varName":"end","range":[1,194]}},"arg":{"_type":"ref","varName":"content","range":[1,198]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parensFromToks","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"parensFromToks left right content = \\\\\n  start = tokenFilepos left\n  end = addFilepos (tokenFilepos right) (strLen (tokenString right))\n  .\n  parens start end content","range":[1,0]}},"arg":{"_type":"lambda","varName":"left","body":{"_type":"lambda","varName":"right","body":{"_type":"lambda","varName":"content","body":{"_type":"let","varName":"start","value":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,49]},"arg":{"_type":"ref","varName":"left","range":[1,62]}},"body":{"_type":"let","varName":"end","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addFilepos","range":[1,75]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,87]},"arg":{"_type":"ref","varName":"right","range":[1,100]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,108]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,116]},"arg":{"_type":"ref","varName":"right","range":[1,128]}}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parens","range":[1,142]},"arg":{"_type":"ref","varName":"start","range":[1,149]}},"arg":{"_type":"ref","varName":"end","range":[1,155]}},"arg":{"_type":"ref","varName":"content","range":[1,159]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"stripParens","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"stripParens p = isParens p (parensContent p) p","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,16]},"arg":{"_type":"ref","varName":"p","range":[1,25]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parensContent","range":[1,28]},"arg":{"_type":"ref","varName":"p","range":[1,42]}}},"arg":{"_type":"ref","varName":"p","range":[1,45]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseErr","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parseErr msg1 msg2 = \\f . f (strCat (cons msg1 (cons msg2 nil)))","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"parseErr","body":{"_type":"lambda","varName":"msg1","body":{"_type":"lambda","varName":"msg2","body":{"_type":"anno","name":"type","data":"parseErr","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,26]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,29]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,37]},"arg":{"_type":"ref","varName":"msg1","range":[1,42]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,48]},"arg":{"_type":"ref","varName":"msg2","range":[1,53]}},"arg":{"_type":"ref","varName":"nil","range":[1,58]}}}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseErrMsg","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parseErrMsg err = err \\m . m","range":[1,0]}},"arg":{"_type":"lambda","varName":"err","body":{"_type":"apply","func":{"_type":"ref","varName":"err","range":[1,18]},"arg":{"_type":"lambda","varName":"m","body":{"_type":"ref","varName":"m","range":[1,27]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isParseErr","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isParseErr thing = hasType thing parseErr","range":[1,0]}},"arg":{"_type":"lambda","varName":"thing","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,19]},"arg":{"_type":"ref","varName":"thing","range":[1,27]}},"arg":{"_type":"ref","varName":"parseErr","range":[1,33]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"emptyToken","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"emptyToken = regexp '^\\\\r?\\\\n[ \\\\i]*(#|$)'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,13]},"arg":{"_type":"lit","value":"^\\r?\\n[ \\i]*(#|$)","range":[1,20]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"makeTokens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"makeTokens lineStarts strings start = strings (\\h t D . makeMoreTokens lineStarts h t start) nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"strings","body":{"_type":"lambda","varName":"start","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strings","range":[1,38]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeMoreTokens","range":[1,56]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,71]}},"arg":{"_type":"ref","varName":"h","range":[1,82]}},"arg":{"_type":"ref","varName":"t","range":[1,84]}},"arg":{"_type":"ref","varName":"start","range":[1,86]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,93]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"makeMoreTokens","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"makeMoreTokens lineStarts h t start = \\\\\n  next = makeTokens lineStarts t (+ start (strLen h))\n  .\n  and (strMatches h emptyToken) (or (isNil t) (or (strStartsWith (head t) '\\n') (strStartsWith (head t) '\\r\\n')))\n    makeTokens lineStarts t (+ start (strLen h))\n    or (strStartsWith h ' ') (strStartsWith h '#')\n      next\n      and (or (strStartsWith h '\\n') (strStartsWith h '\\r\\n')) (strStartsWith (head t) '#')\n        makeTokens lineStarts (tail t) (+ start (+ (strLen h) (strLen (head t))))\n        #cons (token h start) next\n        cons (makeTokenAt lineStarts h start) next","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"start","body":{"_type":"let","varName":"next","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeTokens","range":[1,50]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,61]}},"arg":{"_type":"ref","varName":"t","range":[1,72]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,75]},"arg":{"_type":"ref","varName":"start","range":[1,77]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,84]},"arg":{"_type":"ref","varName":"h","range":[1,91]}}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,101]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatches","range":[1,106]},"arg":{"_type":"ref","varName":"h","range":[1,117]}},"arg":{"_type":"ref","varName":"emptyToken","range":[1,119]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,132]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,136]},"arg":{"_type":"ref","varName":"t","range":[1,142]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,146]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,150]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,165]},"arg":{"_type":"ref","varName":"t","range":[1,170]}}},"arg":{"_type":"lit","value":"\n","range":[1,173]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,180]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,195]},"arg":{"_type":"ref","varName":"t","range":[1,200]}}},"arg":{"_type":"lit","value":"\r\n","range":[1,203]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeTokens","range":[1,217]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,228]}},"arg":{"_type":"ref","varName":"t","range":[1,239]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,242]},"arg":{"_type":"ref","varName":"start","range":[1,244]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,251]},"arg":{"_type":"ref","varName":"h","range":[1,258]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,266]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,270]},"arg":{"_type":"ref","varName":"h","range":[1,284]}},"arg":{"_type":"lit","value":" ","range":[1,286]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,292]},"arg":{"_type":"ref","varName":"h","range":[1,306]}},"arg":{"_type":"lit","value":"#","range":[1,308]}}},"arg":{"_type":"ref","varName":"next","range":[1,319]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,330]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,335]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,339]},"arg":{"_type":"ref","varName":"h","range":[1,353]}},"arg":{"_type":"lit","value":"\n","range":[1,355]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,362]},"arg":{"_type":"ref","varName":"h","range":[1,376]}},"arg":{"_type":"lit","value":"\r\n","range":[1,378]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,388]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,403]},"arg":{"_type":"ref","varName":"t","range":[1,408]}}},"arg":{"_type":"lit","value":"#","range":[1,411]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeTokens","range":[1,424]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,435]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,447]},"arg":{"_type":"ref","varName":"t","range":[1,452]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,456]},"arg":{"_type":"ref","varName":"start","range":[1,458]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,465]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,468]},"arg":{"_type":"ref","varName":"h","range":[1,475]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,479]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,487]},"arg":{"_type":"ref","varName":"t","range":[1,492]}}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,541]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeTokenAt","range":[1,547]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,559]}},"arg":{"_type":"ref","varName":"h","range":[1,570]}},"arg":{"_type":"ref","varName":"start","range":[1,572]}}},"arg":{"_type":"ref","varName":"next","range":[1,579]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"makeTokenAt","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"makeTokenAt lineStarts txt offset = token txt (filePosFor lineStarts offset)","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"txt","body":{"_type":"lambda","varName":"offset","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,36]},"arg":{"_type":"ref","varName":"txt","range":[1,42]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filePosFor","range":[1,47]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,58]}},"arg":{"_type":"ref","varName":"offset","range":[1,69]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"showToken","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"showToken tok = log (strCat (cons 'token: ' (cons (tokenString tok) (cons ', ' (cons (showPos (tokenPos tok)) nil))))) tok","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"log","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,29]},"arg":{"_type":"lit","value":"token: ","range":[1,34]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,45]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,51]},"arg":{"_type":"ref","varName":"tok","range":[1,63]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,69]},"arg":{"_type":"lit","value":", ","range":[1,74]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,80]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"showPos","range":[1,86]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenPos","range":[1,95]},"arg":{"_type":"ref","varName":"tok","range":[1,104]}}}},"arg":{"_type":"ref","varName":"nil","range":[1,110]}}}}}}},"arg":{"_type":"ref","varName":"tok","range":[1,119]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"showPos","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"showPos pos = isFilepos pos\n  strCat (cons 'position: ' (cons (fileposFile pos) (cons ', ' (cons (fileposLine pos) (cons '.' (cons (fileposOffset pos) nil))))))\n  pos","range":[1,0]}},"arg":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isFilepos","range":[1,14]},"arg":{"_type":"ref","varName":"pos","range":[1,24]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,30]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,38]},"arg":{"_type":"lit","value":"position: ","range":[1,43]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,57]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposFile","range":[1,63]},"arg":{"_type":"ref","varName":"pos","range":[1,75]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,81]},"arg":{"_type":"lit","value":", ","range":[1,86]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,92]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposLine","range":[1,98]},"arg":{"_type":"ref","varName":"pos","range":[1,110]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,116]},"arg":{"_type":"lit","value":".","range":[1,121]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,126]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"fileposOffset","range":[1,132]},"arg":{"_type":"ref","varName":"pos","range":[1,146]}}},"arg":{"_type":"ref","varName":"nil","range":[1,151]}}}}}}}}},"arg":{"_type":"ref","varName":"pos","range":[1,163]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"splitTokens","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"splitTokens str pat = filter (\\s . not (eq s '')) (basicSplitTokens str pat true)","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filter","range":[1,22]},"arg":{"_type":"lambda","varName":"s","body":{"_type":"apply","func":{"_type":"ref","varName":"not","range":[1,35]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,40]},"arg":{"_type":"ref","varName":"s","range":[1,43]}},"arg":{"_type":"lit","value":"","range":[1,45]}}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"basicSplitTokens","range":[1,51]},"arg":{"_type":"ref","varName":"str","range":[1,68]}},"arg":{"_type":"ref","varName":"pat","range":[1,72]}},"arg":{"_type":"ref","varName":"true","range":[1,76]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"numberPat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"numberPat = regexp '-?([0-9]+(\\\\.[0-9]+)?|\\\\.[0-9]+)'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,12]},"arg":{"_type":"lit","value":"-?([0-9]+(\\.[0-9]+)?|\\.[0-9]+)","range":[1,19]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"matchOffset","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"matchOffset str match = isNil match\n  strLen str\n  head (tail (tail match))","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"match","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,24]},"arg":{"_type":"ref","varName":"match","range":[1,30]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,38]},"arg":{"_type":"ref","varName":"str","range":[1,45]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,51]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,57]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,63]},"arg":{"_type":"ref","varName":"match","range":[1,68]}}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"basicSplitTokens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"basicSplitTokens str pat prevIsDel = == str ''\n  nil\n  \\\\\n    num = strMatch str numberPat\n    del = strMatch str pat\n    numOffset = matchOffset str num\n    delOffset = matchOffset str del\n    select = and (== numOffset 0) prevIsDel\n      \\del num first . num\n      == delOffset 0\n        \\del num first . del\n        \\del num first . first\n    first = select (head del) (head num) (strSubstring str 0 delOffset)\n    .\n    cons\n      first\n      basicSplitTokens\n        strSubstring str (strLen first) 0\n        pat\n        select true false false","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"prevIsDel","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,37]},"arg":{"_type":"ref","varName":"str","range":[1,40]}},"arg":{"_type":"lit","value":"","range":[1,44]}},"arg":{"_type":"ref","varName":"nil","range":[1,49]}},"arg":{"_type":"let","varName":"num","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,68]},"arg":{"_type":"ref","varName":"str","range":[1,77]}},"arg":{"_type":"ref","varName":"numberPat","range":[1,81]}},"body":{"_type":"let","varName":"del","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,101]},"arg":{"_type":"ref","varName":"str","range":[1,110]}},"arg":{"_type":"ref","varName":"pat","range":[1,114]}},"body":{"_type":"let","varName":"numOffset","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"matchOffset","range":[1,134]},"arg":{"_type":"ref","varName":"str","range":[1,146]}},"arg":{"_type":"ref","varName":"num","range":[1,150]}},"body":{"_type":"let","varName":"delOffset","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"matchOffset","range":[1,170]},"arg":{"_type":"ref","varName":"str","range":[1,182]}},"arg":{"_type":"ref","varName":"del","range":[1,186]}},"body":{"_type":"let","varName":"select","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,203]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,208]},"arg":{"_type":"ref","varName":"numOffset","range":[1,211]}},"arg":{"_type":"lit","value":0,"range":[1,221]}}},"arg":{"_type":"ref","varName":"prevIsDel","range":[1,224]}},"arg":{"_type":"lambda","varName":"del","body":{"_type":"lambda","varName":"num","body":{"_type":"lambda","varName":"first","body":{"_type":"ref","varName":"num","range":[1,257]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,267]},"arg":{"_type":"ref","varName":"delOffset","range":[1,270]}},"arg":{"_type":"lit","value":0,"range":[1,280]}},"arg":{"_type":"lambda","varName":"del","body":{"_type":"lambda","varName":"num","body":{"_type":"lambda","varName":"first","body":{"_type":"ref","varName":"del","range":[1,307]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"lambda","varName":"del","body":{"_type":"lambda","varName":"num","body":{"_type":"lambda","varName":"first","body":{"_type":"ref","varName":"first","range":[1,336]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"body":{"_type":"let","varName":"first","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"select","range":[1,354]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,362]},"arg":{"_type":"ref","varName":"del","range":[1,367]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,373]},"arg":{"_type":"ref","varName":"num","range":[1,378]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,384]},"arg":{"_type":"ref","varName":"str","range":[1,397]}},"arg":{"_type":"lit","value":0,"range":[1,401]}},"arg":{"_type":"ref","varName":"delOffset","range":[1,403]}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,424]},"arg":{"_type":"ref","varName":"first","range":[1,435]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"basicSplitTokens","range":[1,447]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,472]},"arg":{"_type":"ref","varName":"str","range":[1,485]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,490]},"arg":{"_type":"ref","varName":"first","range":[1,497]}}},"arg":{"_type":"lit","value":0,"range":[1,504]}}},"arg":{"_type":"ref","varName":"pat","range":[1,514]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"select","range":[1,526]},"arg":{"_type":"ref","varName":"true","range":[1,533]}},"arg":{"_type":"ref","varName":"false","range":[1,538]}},"arg":{"_type":"ref","varName":"false","range":[1,544]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tokens","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"tokens str pat = countedTokens emptyLineStarts str pat","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedTokens","range":[1,17]},"arg":{"_type":"ref","varName":"emptyLineStarts","range":[1,31]}},"arg":{"_type":"ref","varName":"str","range":[1,47]}},"arg":{"_type":"ref","varName":"pat","range":[1,51]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedTokens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"countedTokens lineStarts str pat = makeTokens lineStarts (splitTokens str pat) 0","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeTokens","range":[1,35]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,46]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"splitTokens","range":[1,58]},"arg":{"_type":"ref","varName":"str","range":[1,70]}},"arg":{"_type":"ref","varName":"pat","range":[1,74]}}},"arg":{"_type":"lit","value":0,"range":[1,79]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isString","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isString s = == (getType s) '*string'","range":[1,0]}},"arg":{"_type":"lambda","varName":"s","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,13]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,17]},"arg":{"_type":"ref","varName":"s","range":[1,25]}}},"arg":{"_type":"lit","value":"*string","range":[1,28]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isNumber","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isNumber s = == (getType s) '*number'","range":[1,0]}},"arg":{"_type":"lambda","varName":"s","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,13]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getType","range":[1,17]},"arg":{"_type":"ref","varName":"s","range":[1,25]}}},"arg":{"_type":"lit","value":"*number","range":[1,28]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isTokenString","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"isTokenString tok str = or\n  and (isToken tok) (eq (tokenString tok) str)\n  and (isString tok) (eq tok str)","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,29]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,34]},"arg":{"_type":"ref","varName":"tok","range":[1,42]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,48]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,52]},"arg":{"_type":"ref","varName":"tok","range":[1,64]}}},"arg":{"_type":"ref","varName":"str","range":[1,69]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,76]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isString","range":[1,81]},"arg":{"_type":"ref","varName":"tok","range":[1,90]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,96]},"arg":{"_type":"ref","varName":"tok","range":[1,99]}},"arg":{"_type":"ref","varName":"str","range":[1,103]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isTokenStart","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"isTokenStart tok str = or\n  and (isToken tok) (strStartsWith (tokenString tok) str)\n  and (isString tok) (strStartsWith tok str)","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,23]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,28]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,33]},"arg":{"_type":"ref","varName":"tok","range":[1,41]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,47]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,62]},"arg":{"_type":"ref","varName":"tok","range":[1,74]}}},"arg":{"_type":"ref","varName":"str","range":[1,79]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,86]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isString","range":[1,91]},"arg":{"_type":"ref","varName":"tok","range":[1,100]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,106]},"arg":{"_type":"ref","varName":"tok","range":[1,120]}},"arg":{"_type":"ref","varName":"str","range":[1,124]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strTokenString","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"strTokenString tok = withToken tok nil \\str pos . str","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,21]},"arg":{"_type":"ref","varName":"tok","range":[1,31]}},"arg":{"_type":"ref","varName":"nil","range":[1,35]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pos","body":{"_type":"ref","varName":"str","range":[1,50]},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"withToken","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"withToken tok nonTokCase tokCase = isToken tok\n  tokCase (tokenString tok) (tokenPos tok)\n  isString tok\n    tokCase tok emptyFilePos\n    nonTokCase","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"lambda","varName":"nonTokCase","body":{"_type":"lambda","varName":"tokCase","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,35]},"arg":{"_type":"ref","varName":"tok","range":[1,43]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"tokCase","range":[1,49]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,58]},"arg":{"_type":"ref","varName":"tok","range":[1,70]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenPos","range":[1,76]},"arg":{"_type":"ref","varName":"tok","range":[1,85]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isString","range":[1,92]},"arg":{"_type":"ref","varName":"tok","range":[1,101]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"tokCase","range":[1,109]},"arg":{"_type":"ref","varName":"tok","range":[1,117]}},"arg":{"_type":"ref","varName":"emptyFilePos","range":[1,121]}}},"arg":{"_type":"ref","varName":"nonTokCase","range":[1,138]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"withCons","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"withCons l nilCase cont = isCons l (l (\\h t D . cont h t) nilCase) nilCase","range":[1,0]}},"arg":{"_type":"lambda","varName":"l","body":{"_type":"lambda","varName":"nilCase","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,26]},"arg":{"_type":"ref","varName":"l","range":[1,33]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"l","range":[1,36]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,48]},"arg":{"_type":"ref","varName":"h","range":[1,53]}},"arg":{"_type":"ref","varName":"t","range":[1,55]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nilCase","range":[1,58]}}},"arg":{"_type":"ref","varName":"nilCase","range":[1,67]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"ifNotErr","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"ifNotErr thing cont = hasType thing parseErr thing (cont thing)","range":[1,0]}},"arg":{"_type":"lambda","varName":"thing","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hasType","range":[1,22]},"arg":{"_type":"ref","varName":"thing","range":[1,30]}},"arg":{"_type":"ref","varName":"parseErr","range":[1,36]}},"arg":{"_type":"ref","varName":"thing","range":[1,45]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,52]},"arg":{"_type":"ref","varName":"thing","range":[1,57]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseToks","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parseToks toks groups =\n  isNil toks nil\n    ifNotErr (parseTok toks groups) \\list . list \\h t .\n      ifNotErr (parseToks t groups) \\res .\n        cons h\n          and (isCons res) (isBlockStart (head res))\n            cons res nil\n            res","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,26]},"arg":{"_type":"ref","varName":"toks","range":[1,32]}},"arg":{"_type":"ref","varName":"nil","range":[1,37]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,45]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseTok","range":[1,55]},"arg":{"_type":"ref","varName":"toks","range":[1,64]}},"arg":{"_type":"ref","varName":"groups","range":[1,69]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,85]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,103]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseToks","range":[1,113]},"arg":{"_type":"ref","varName":"t","range":[1,123]}},"arg":{"_type":"ref","varName":"groups","range":[1,125]}}},"arg":{"_type":"lambda","varName":"res","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,148]},"arg":{"_type":"ref","varName":"h","range":[1,153]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,165]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,170]},"arg":{"_type":"ref","varName":"res","range":[1,177]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isBlockStart","range":[1,183]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,197]},"arg":{"_type":"ref","varName":"res","range":[1,202]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,220]},"arg":{"_type":"ref","varName":"res","range":[1,225]}},"arg":{"_type":"ref","varName":"nil","range":[1,229]}}},"arg":{"_type":"ref","varName":"res","range":[1,245]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseTok","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parseTok toks groups = withCons toks nil \\h t .\n  withToken h toks \\txt pos .\n    assoc txt groups\n      \\close . parseGroup h t nil close groups\n      (or (isTokenStart h '\\n') (isTokenStart h '\\r\\n')) (parseIndent h t nil groups)\n        toks","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,23]},"arg":{"_type":"ref","varName":"toks","range":[1,32]}},"arg":{"_type":"ref","varName":"nil","range":[1,37]}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,50]},"arg":{"_type":"ref","varName":"h","range":[1,60]}},"arg":{"_type":"ref","varName":"toks","range":[1,62]}},"arg":{"_type":"lambda","varName":"txt","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assoc","range":[1,82]},"arg":{"_type":"ref","varName":"txt","range":[1,88]}},"arg":{"_type":"ref","varName":"groups","range":[1,92]}},"arg":{"_type":"lambda","varName":"close","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseGroup","range":[1,114]},"arg":{"_type":"ref","varName":"h","range":[1,125]}},"arg":{"_type":"ref","varName":"t","range":[1,127]}},"arg":{"_type":"ref","varName":"nil","range":[1,129]}},"arg":{"_type":"ref","varName":"close","range":[1,133]}},"arg":{"_type":"ref","varName":"groups","range":[1,139]}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,153]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenStart","range":[1,157]},"arg":{"_type":"ref","varName":"h","range":[1,170]}},"arg":{"_type":"lit","value":"\n","range":[1,172]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenStart","range":[1,179]},"arg":{"_type":"ref","varName":"h","range":[1,192]}},"arg":{"_type":"lit","value":"\r\n","range":[1,194]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseIndent","range":[1,204]},"arg":{"_type":"ref","varName":"h","range":[1,216]}},"arg":{"_type":"ref","varName":"t","range":[1,218]}},"arg":{"_type":"ref","varName":"nil","range":[1,220]}},"arg":{"_type":"ref","varName":"groups","range":[1,224]}}},"arg":{"_type":"ref","varName":"toks","range":[1,240]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseGroup","range":[1,0]}},"arg":{"_type":"lit","value":5,"range":[1,0]}},"arg":{"_type":"lit","value":"parseGroup left toks gr close groups = withCons toks (parseErr 'Unterminated group starting ' (loc left))\n  \\h t . isTokenString h close\n    eq close ')'\n      cons (parensFromToks left h (reverse gr)) t\n      cons (cons left (cons (reverse gr) (cons h nil))) t\n    withToken h\n      ifNotErr (parseTok toks groups) \\list . list \\restH restT .\n        parseGroup left restT (cons restH gr) close groups\n      \\txt pos .\n        rassoc txt groups\n          \\open . parseErr (strCat (cons 'Mismatched group: ' (cons (tokenString left) (cons txt (cons ' ' nil))))) (loc left)\n          ifNotErr (parseTok toks groups) \\list . list \\restH restT . parseGroup left restT (cons restH gr) close groups","range":[1,0]}},"arg":{"_type":"lambda","varName":"left","body":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"gr","body":{"_type":"lambda","varName":"close","body":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,39]},"arg":{"_type":"ref","varName":"toks","range":[1,48]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,54]},"arg":{"_type":"lit","value":"Unterminated group starting ","range":[1,63]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,95]},"arg":{"_type":"ref","varName":"left","range":[1,99]}}}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,115]},"arg":{"_type":"ref","varName":"h","range":[1,129]}},"arg":{"_type":"ref","varName":"close","range":[1,131]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,141]},"arg":{"_type":"ref","varName":"close","range":[1,144]}},"arg":{"_type":"lit","value":")","range":[1,150]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,160]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parensFromToks","range":[1,166]},"arg":{"_type":"ref","varName":"left","range":[1,181]}},"arg":{"_type":"ref","varName":"h","range":[1,186]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"reverse","range":[1,189]},"arg":{"_type":"ref","varName":"gr","range":[1,197]}}}},"arg":{"_type":"ref","varName":"t","range":[1,202]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,210]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,216]},"arg":{"_type":"ref","varName":"left","range":[1,221]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,227]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"reverse","range":[1,233]},"arg":{"_type":"ref","varName":"gr","range":[1,241]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,246]},"arg":{"_type":"ref","varName":"h","range":[1,251]}},"arg":{"_type":"ref","varName":"nil","range":[1,253]}}}}},"arg":{"_type":"ref","varName":"t","range":[1,260]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,266]},"arg":{"_type":"ref","varName":"h","range":[1,276]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,284]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseTok","range":[1,294]},"arg":{"_type":"ref","varName":"toks","range":[1,303]}},"arg":{"_type":"ref","varName":"groups","range":[1,308]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,324]},"arg":{"_type":"lambda","varName":"restH","body":{"_type":"lambda","varName":"restT","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseGroup","range":[1,352]},"arg":{"_type":"ref","varName":"left","range":[1,363]}},"arg":{"_type":"ref","varName":"restT","range":[1,368]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,375]},"arg":{"_type":"ref","varName":"restH","range":[1,380]}},"arg":{"_type":"ref","varName":"gr","range":[1,386]}}},"arg":{"_type":"ref","varName":"close","range":[1,390]}},"arg":{"_type":"ref","varName":"groups","range":[1,396]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},"arg":{"_type":"lambda","varName":"txt","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"rassoc","range":[1,428]},"arg":{"_type":"ref","varName":"txt","range":[1,435]}},"arg":{"_type":"ref","varName":"groups","range":[1,439]}},"arg":{"_type":"lambda","varName":"open","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,464]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,474]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,482]},"arg":{"_type":"lit","value":"Mismatched group: ","range":[1,487]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,509]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,515]},"arg":{"_type":"ref","varName":"left","range":[1,527]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,534]},"arg":{"_type":"ref","varName":"txt","range":[1,539]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,544]},"arg":{"_type":"lit","value":" ","range":[1,549]}},"arg":{"_type":"ref","varName":"nil","range":[1,553]}}}}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,563]},"arg":{"_type":"ref","varName":"left","range":[1,567]}}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,583]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseTok","range":[1,593]},"arg":{"_type":"ref","varName":"toks","range":[1,602]}},"arg":{"_type":"ref","varName":"groups","range":[1,607]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,623]},"arg":{"_type":"lambda","varName":"restH","body":{"_type":"lambda","varName":"restT","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseGroup","range":[1,643]},"arg":{"_type":"ref","varName":"left","range":[1,654]}},"arg":{"_type":"ref","varName":"restT","range":[1,659]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,666]},"arg":{"_type":"ref","varName":"restH","range":[1,671]}},"arg":{"_type":"ref","varName":"gr","range":[1,677]}}},"arg":{"_type":"ref","varName":"close","range":[1,681]}},"arg":{"_type":"ref","varName":"groups","range":[1,687]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseIndent","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"parseIndent indent toks gr groups =\n  withCons toks (cons (makeParens (tokenFilepos indent) (lexEnd (head gr)) (reverse gr)) nil)\n    \\h t . or (withToken h false (\\txt pos . rassoc txt groups (\\open . true) false))\n      and (or (isTokenStart h '\\n') (isTokenStart h '\\r\\n')) (<= (strLen (tokenString h)) (strLen (tokenString indent)))\n      cons (makeParens (tokenFilepos indent) (tokenFilepos h) (reverse gr)) toks\n      ifNotErr (parseTok toks groups) \\list . list \\restH restT . parseIndent indent restT (cons restH gr) groups","range":[1,0]}},"arg":{"_type":"lambda","varName":"indent","body":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"gr","body":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,38]},"arg":{"_type":"ref","varName":"toks","range":[1,47]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,53]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeParens","range":[1,59]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,71]},"arg":{"_type":"ref","varName":"indent","range":[1,84]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"lexEnd","range":[1,93]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,101]},"arg":{"_type":"ref","varName":"gr","range":[1,106]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"reverse","range":[1,112]},"arg":{"_type":"ref","varName":"gr","range":[1,120]}}}},"arg":{"_type":"ref","varName":"nil","range":[1,125]}}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,141]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,145]},"arg":{"_type":"ref","varName":"h","range":[1,155]}},"arg":{"_type":"ref","varName":"false","range":[1,157]}},"arg":{"_type":"lambda","varName":"txt","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"rassoc","range":[1,175]},"arg":{"_type":"ref","varName":"txt","range":[1,182]}},"arg":{"_type":"ref","varName":"groups","range":[1,186]}},"arg":{"_type":"lambda","varName":"open","body":{"_type":"ref","varName":"true","range":[1,202]},"range":[1,0]}},"arg":{"_type":"ref","varName":"false","range":[1,208]}},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,222]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,227]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenStart","range":[1,231]},"arg":{"_type":"ref","varName":"h","range":[1,244]}},"arg":{"_type":"lit","value":"\n","range":[1,246]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenStart","range":[1,253]},"arg":{"_type":"ref","varName":"h","range":[1,266]}},"arg":{"_type":"lit","value":"\r\n","range":[1,268]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"<=","range":[1,278]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,282]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,290]},"arg":{"_type":"ref","varName":"h","range":[1,302]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,307]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,315]},"arg":{"_type":"ref","varName":"indent","range":[1,327]}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,343]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeParens","range":[1,349]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,361]},"arg":{"_type":"ref","varName":"indent","range":[1,374]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,383]},"arg":{"_type":"ref","varName":"h","range":[1,396]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"reverse","range":[1,400]},"arg":{"_type":"ref","varName":"gr","range":[1,408]}}}},"arg":{"_type":"ref","varName":"toks","range":[1,413]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,424]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseTok","range":[1,434]},"arg":{"_type":"ref","varName":"toks","range":[1,443]}},"arg":{"_type":"ref","varName":"groups","range":[1,448]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,464]},"arg":{"_type":"lambda","varName":"restH","body":{"_type":"lambda","varName":"restT","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseIndent","range":[1,484]},"arg":{"_type":"ref","varName":"indent","range":[1,496]}},"arg":{"_type":"ref","varName":"restT","range":[1,503]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,510]},"arg":{"_type":"ref","varName":"restH","range":[1,515]}},"arg":{"_type":"ref","varName":"gr","range":[1,521]}}},"arg":{"_type":"ref","varName":"groups","range":[1,525]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"nilRange","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"nilRange = cons 1 (cons 0 nil)","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,11]},"arg":{"_type":"lit","value":1,"range":[1,16]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,19]},"arg":{"_type":"lit","value":0,"range":[1,24]}},"arg":{"_type":"ref","varName":"nil","range":[1,26]}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"lit","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"lit value range = \\f . f value range","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"lit","body":{"_type":"lambda","varName":"value","body":{"_type":"lambda","varName":"range","body":{"_type":"anno","name":"type","data":"lit","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,23]},"arg":{"_type":"ref","varName":"value","range":[1,25]}},"arg":{"_type":"ref","varName":"range","range":[1,31]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"ref","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"ref name range = \\f . f name range","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"ref","body":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"range","body":{"_type":"anno","name":"type","data":"ref","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,22]},"arg":{"_type":"ref","varName":"name","range":[1,24]}},"arg":{"_type":"ref","varName":"range","range":[1,29]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"lambda","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"lambda name body range = \\f . f name body range","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"lambda","body":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"body","body":{"_type":"lambda","varName":"range","body":{"_type":"anno","name":"type","data":"lambda","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,30]},"arg":{"_type":"ref","varName":"name","range":[1,32]}},"arg":{"_type":"ref","varName":"body","range":[1,37]}},"arg":{"_type":"ref","varName":"range","range":[1,42]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"apply","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"apply func arg = \\f . f func arg","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"apply","body":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"arg","body":{"_type":"anno","name":"type","data":"apply","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,22]},"arg":{"_type":"ref","varName":"func","range":[1,24]}},"arg":{"_type":"ref","varName":"arg","range":[1,29]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"let","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"let name value body range = \\f . f name value body range","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"let","body":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"value","body":{"_type":"lambda","varName":"body","body":{"_type":"lambda","varName":"range","body":{"_type":"anno","name":"type","data":"let","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,33]},"arg":{"_type":"ref","varName":"name","range":[1,35]}},"arg":{"_type":"ref","varName":"value","range":[1,40]}},"arg":{"_type":"ref","varName":"body","range":[1,46]}},"arg":{"_type":"ref","varName":"range","range":[1,51]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"anno","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"anno name data body = \\f . f name data body","range":[1,0]}},"arg":{"_type":"anno","name":"dataType","data":"anno","body":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"data","body":{"_type":"lambda","varName":"body","body":{"_type":"anno","name":"type","data":"anno","body":{"_type":"lambda","varName":"f","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"f","range":[1,27]},"arg":{"_type":"ref","varName":"name","range":[1,29]}},"arg":{"_type":"ref","varName":"data","range":[1,34]}},"arg":{"_type":"ref","varName":"body","range":[1,39]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"withParens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"withParens p err cont = isParens p (p cont) err","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"lambda","varName":"err","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,24]},"arg":{"_type":"ref","varName":"p","range":[1,33]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,36]},"arg":{"_type":"ref","varName":"cont","range":[1,38]}}},"arg":{"_type":"ref","varName":"err","range":[1,44]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"setParens","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"setParens p func = isParens p\n  p \\start end content . parens start end (func content)\n  func p","range":[1,0]}},"arg":{"_type":"lambda","varName":"p","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,19]},"arg":{"_type":"ref","varName":"p","range":[1,28]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"p","range":[1,32]},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"content","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parens","range":[1,55]},"arg":{"_type":"ref","varName":"start","range":[1,62]}},"arg":{"_type":"ref","varName":"end","range":[1,68]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,73]},"arg":{"_type":"ref","varName":"content","range":[1,78]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,89]},"arg":{"_type":"ref","varName":"p","range":[1,94]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"withStripped","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"withStripped list cont = withParens list (cont list) \\start end content . withStripped content cont","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withParens","range":[1,25]},"arg":{"_type":"ref","varName":"list","range":[1,36]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,42]},"arg":{"_type":"ref","varName":"list","range":[1,47]}}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"content","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withStripped","range":[1,74]},"arg":{"_type":"ref","varName":"content","range":[1,87]}},"arg":{"_type":"ref","varName":"cont","range":[1,95]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"position","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"position thing = isToken thing (tokenFilepos thing)\n  isParens thing (parensStart thing)\n    isCons thing\n      \\\\\n        pos = position (head thing)\n        .\n        isEmptyPos pos (position (tail thing)) pos\n      isFilepos thing thing\n        emptyFilePos","range":[1,0]}},"arg":{"_type":"lambda","varName":"thing","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,17]},"arg":{"_type":"ref","varName":"thing","range":[1,25]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,32]},"arg":{"_type":"ref","varName":"thing","range":[1,45]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,54]},"arg":{"_type":"ref","varName":"thing","range":[1,63]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parensStart","range":[1,70]},"arg":{"_type":"ref","varName":"thing","range":[1,82]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,93]},"arg":{"_type":"ref","varName":"thing","range":[1,100]}},"arg":{"_type":"let","varName":"pos","value":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,129]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,139]},"arg":{"_type":"ref","varName":"thing","range":[1,144]}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isEmptyPos","range":[1,169]},"arg":{"_type":"ref","varName":"pos","range":[1,180]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,185]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,195]},"arg":{"_type":"ref","varName":"thing","range":[1,200]}}}},"arg":{"_type":"ref","varName":"pos","range":[1,208]}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isFilepos","range":[1,218]},"arg":{"_type":"ref","varName":"thing","range":[1,228]}},"arg":{"_type":"ref","varName":"thing","range":[1,234]}},"arg":{"_type":"ref","varName":"emptyFilePos","range":[1,248]}}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"lexEnd","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"lexEnd thing = isToken thing (addFilepos (tokenFilepos thing) (strLen (tokenString thing)))\n  isParens thing (parensEnd thing)\n    isCons thing (lexEnd (last thing))\n      emptyFilePos","range":[1,0]}},"arg":{"_type":"lambda","varName":"thing","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,15]},"arg":{"_type":"ref","varName":"thing","range":[1,23]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addFilepos","range":[1,30]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,42]},"arg":{"_type":"ref","varName":"thing","range":[1,55]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,63]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,71]},"arg":{"_type":"ref","varName":"thing","range":[1,83]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,94]},"arg":{"_type":"ref","varName":"thing","range":[1,103]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parensEnd","range":[1,110]},"arg":{"_type":"ref","varName":"thing","range":[1,120]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,131]},"arg":{"_type":"ref","varName":"thing","range":[1,138]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"lexEnd","range":[1,145]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"last","range":[1,153]},"arg":{"_type":"ref","varName":"thing","range":[1,158]}}}},"arg":{"_type":"ref","varName":"emptyFilePos","range":[1,172]}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"loc","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"loc thing = \\\\\n  p = position thing\n  l = isEmptyPos p 'an unknown location' (showPos p)\n  .\n  strCat (cons 'at ' (cons l nil))","range":[1,0]}},"arg":{"_type":"lambda","varName":"thing","body":{"_type":"let","varName":"p","value":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,21]},"arg":{"_type":"ref","varName":"thing","range":[1,30]}},"body":{"_type":"let","varName":"l","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isEmptyPos","range":[1,42]},"arg":{"_type":"ref","varName":"p","range":[1,53]}},"arg":{"_type":"lit","value":"an unknown location","range":[1,55]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"showPos","range":[1,78]},"arg":{"_type":"ref","varName":"p","range":[1,86]}}},"body":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,95]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,103]},"arg":{"_type":"lit","value":"at ","range":[1,108]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,115]},"arg":{"_type":"ref","varName":"l","range":[1,120]}},"arg":{"_type":"ref","varName":"nil","range":[1,122]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"scrub","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"scrub str = strFromList (scrubList (strToList str))","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"ref","varName":"strFromList","range":[1,12]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"scrubList","range":[1,25]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strToList","range":[1,36]},"arg":{"_type":"ref","varName":"str","range":[1,46]}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"scrubList","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"scrubList list = list\n  \\h t D . \\\\\n    next = scrubList t\n    .\n    eq h '\\\\' (cons h (cons (head t) (scrubList (tail t))))\n      eq h '\\\"' (cons '\\\\' (cons '\\\"' next))\n        cons h next\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,17]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"let","varName":"next","value":{"_type":"apply","func":{"_type":"ref","varName":"scrubList","range":[1,47]},"arg":{"_type":"ref","varName":"t","range":[1,57]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,69]},"arg":{"_type":"ref","varName":"h","range":[1,72]}},"arg":{"_type":"lit","value":"\\","range":[1,74]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,80]},"arg":{"_type":"ref","varName":"h","range":[1,85]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,88]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,94]},"arg":{"_type":"ref","varName":"t","range":[1,99]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"scrubList","range":[1,103]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,114]},"arg":{"_type":"ref","varName":"t","range":[1,119]}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,131]},"arg":{"_type":"ref","varName":"h","range":[1,134]}},"arg":{"_type":"lit","value":"\"","range":[1,136]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,142]},"arg":{"_type":"lit","value":"\\","range":[1,147]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,153]},"arg":{"_type":"lit","value":"\"","range":[1,158]}},"arg":{"_type":"ref","varName":"next","range":[1,163]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,178]},"arg":{"_type":"ref","varName":"h","range":[1,183]}},"arg":{"_type":"ref","varName":"next","range":[1,185]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,192]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createAst","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"createAst lineStarts inList names = withStripped inList \\list .\n  isToken list (createLitOrRef list names)\n    list\n      \\h t D .\n        isTokenString h '\\\\\\\\' (createLet h t names)\n          isTokenString h '\\\\@' (createAnno h t names)\n            isTokenString h '\\\\' (createLambda h t names)\n              createApply list names\n      nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"inList","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withStripped","range":[1,36]},"arg":{"_type":"ref","varName":"inList","range":[1,49]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,66]},"arg":{"_type":"ref","varName":"list","range":[1,74]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createLitOrRef","range":[1,80]},"arg":{"_type":"ref","varName":"list","range":[1,95]}},"arg":{"_type":"ref","varName":"names","range":[1,100]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,111]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,139]},"arg":{"_type":"ref","varName":"h","range":[1,153]}},"arg":{"_type":"lit","value":"\\\\","range":[1,155]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createLet","range":[1,163]},"arg":{"_type":"ref","varName":"h","range":[1,173]}},"arg":{"_type":"ref","varName":"t","range":[1,175]}},"arg":{"_type":"ref","varName":"names","range":[1,177]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,194]},"arg":{"_type":"ref","varName":"h","range":[1,208]}},"arg":{"_type":"lit","value":"\\@","range":[1,210]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAnno","range":[1,217]},"arg":{"_type":"ref","varName":"h","range":[1,228]}},"arg":{"_type":"ref","varName":"t","range":[1,230]}},"arg":{"_type":"ref","varName":"names","range":[1,232]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,251]},"arg":{"_type":"ref","varName":"h","range":[1,265]}},"arg":{"_type":"lit","value":"\\","range":[1,267]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createLambda","range":[1,273]},"arg":{"_type":"ref","varName":"h","range":[1,286]}},"arg":{"_type":"ref","varName":"t","range":[1,288]}},"arg":{"_type":"ref","varName":"names","range":[1,290]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createApply","range":[1,311]},"arg":{"_type":"ref","varName":"list","range":[1,323]}},"arg":{"_type":"ref","varName":"names","range":[1,328]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,340]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"strMatches","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"strMatches str pat = isCons (strMatch str pat)","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,29]},"arg":{"_type":"ref","varName":"str","range":[1,38]}},"arg":{"_type":"ref","varName":"pat","range":[1,42]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"digit","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"digit = regexp '^[0-9]+$'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,8]},"arg":{"_type":"lit","value":"^[0-9]+$","range":[1,15]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"backslashCodes","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"backslashCodes = 'bfnrt'","range":[1,0]}},"arg":{"_type":"lit","value":"bfnrt","range":[1,17]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"backslashValues","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"backslashValues = '\\b\\f\\n\\r\\t'","range":[1,0]}},"arg":{"_type":"lit","value":"\b\f\n\r\t","range":[1,18]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"convertStringEscape","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"convertStringEscape char codes values =\n  eq codes ''\n    char\n    eq char (strAt codes 0)\n      strAt values 0\n      convertStringEscape char (strSubstring codes 1 0) (strSubstring values 1 0)","range":[1,0]}},"arg":{"_type":"lambda","varName":"char","body":{"_type":"lambda","varName":"codes","body":{"_type":"lambda","varName":"values","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,42]},"arg":{"_type":"ref","varName":"codes","range":[1,45]}},"arg":{"_type":"lit","value":"","range":[1,51]}},"arg":{"_type":"ref","varName":"char","range":[1,58]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,67]},"arg":{"_type":"ref","varName":"char","range":[1,70]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,76]},"arg":{"_type":"ref","varName":"codes","range":[1,82]}},"arg":{"_type":"lit","value":0,"range":[1,88]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,97]},"arg":{"_type":"ref","varName":"values","range":[1,103]}},"arg":{"_type":"lit","value":0,"range":[1,110]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"convertStringEscape","range":[1,118]},"arg":{"_type":"ref","varName":"char","range":[1,138]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,144]},"arg":{"_type":"ref","varName":"codes","range":[1,157]}},"arg":{"_type":"lit","value":1,"range":[1,163]}},"arg":{"_type":"lit","value":0,"range":[1,165]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,169]},"arg":{"_type":"ref","varName":"values","range":[1,182]}},"arg":{"_type":"lit","value":1,"range":[1,189]}},"arg":{"_type":"lit","value":0,"range":[1,191]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"convertStringEscapes","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"convertStringEscapes orig str cont =\n  eq str ''\n    cont str\n    eq (strAt str 0) '\\\\'\n      eq (strLen str) 1 (parseErr \"Error, backslash without character in string: \" orig)\n        convertStringEscapes orig (strSubstring str 2 0) \\rest . cont\n          strAdd\n            convertStringEscape (strAt str 1) backslashCodes backslashValues\n            rest\n      convertStringEscapes orig (strSubstring str 1 0) \\rest . cont\n        strAdd\n          strAt str 0\n          rest","range":[1,0]}},"arg":{"_type":"lambda","varName":"orig","body":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,39]},"arg":{"_type":"ref","varName":"str","range":[1,42]}},"arg":{"_type":"lit","value":"","range":[1,46]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,53]},"arg":{"_type":"ref","varName":"str","range":[1,58]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,66]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,70]},"arg":{"_type":"ref","varName":"str","range":[1,76]}},"arg":{"_type":"lit","value":0,"range":[1,80]}}},"arg":{"_type":"lit","value":"\\","range":[1,83]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,94]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,98]},"arg":{"_type":"ref","varName":"str","range":[1,105]}}},"arg":{"_type":"lit","value":1,"range":[1,110]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,113]},"arg":{"_type":"lit","value":"Error, backslash without character in string: ","range":[1,122]}},"arg":{"_type":"ref","varName":"orig","range":[1,171]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"convertStringEscapes","range":[1,185]},"arg":{"_type":"ref","varName":"orig","range":[1,206]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,212]},"arg":{"_type":"ref","varName":"str","range":[1,225]}},"arg":{"_type":"lit","value":2,"range":[1,229]}},"arg":{"_type":"lit","value":0,"range":[1,231]}}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,242]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAdd","range":[1,257]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"convertStringEscape","range":[1,276]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,297]},"arg":{"_type":"ref","varName":"str","range":[1,303]}},"arg":{"_type":"lit","value":1,"range":[1,307]}}},"arg":{"_type":"ref","varName":"backslashCodes","range":[1,310]}},"arg":{"_type":"ref","varName":"backslashValues","range":[1,325]}}},"arg":{"_type":"ref","varName":"rest","range":[1,353]}}},"range":[1,0]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"convertStringEscapes","range":[1,364]},"arg":{"_type":"ref","varName":"orig","range":[1,385]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,391]},"arg":{"_type":"ref","varName":"str","range":[1,404]}},"arg":{"_type":"lit","value":1,"range":[1,408]}},"arg":{"_type":"lit","value":0,"range":[1,410]}}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,421]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAdd","range":[1,434]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,451]},"arg":{"_type":"ref","varName":"str","range":[1,457]}},"arg":{"_type":"lit","value":0,"range":[1,461]}}},"arg":{"_type":"ref","varName":"rest","range":[1,473]}}},"range":[1,0]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseString","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parseString str cont =\n  neq (strAt str 0) (strAt str -1) (parseErr \"Badly terminated string: \" str)\n    convertStringEscapes str (strSubstring str 1 -1) cont","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"neq","range":[1,25]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,30]},"arg":{"_type":"ref","varName":"str","range":[1,36]}},"arg":{"_type":"lit","value":0,"range":[1,40]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,44]},"arg":{"_type":"ref","varName":"str","range":[1,50]}},"arg":{"_type":"lit","value":-1,"range":[1,54]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,59]},"arg":{"_type":"lit","value":"Badly terminated string: ","range":[1,68]}},"arg":{"_type":"ref","varName":"str","range":[1,96]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"convertStringEscapes","range":[1,105]},"arg":{"_type":"ref","varName":"str","range":[1,126]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,131]},"arg":{"_type":"ref","varName":"str","range":[1,144]}},"arg":{"_type":"lit","value":1,"range":[1,148]}},"arg":{"_type":"lit","value":-1,"range":[1,150]}}},"arg":{"_type":"ref","varName":"cont","range":[1,154]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createLitOrRef","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"createLitOrRef token names = \\\\\n  tok = tokenString token\n  tokRange = (fileposList (position token))\n  #tokRange = nilRange\n  .\n  contains names tok\n    ref tok tokRange\n    or (strStartsWith tok '\\\"') (strStartsWith tok \"'\")\n      parseString tok \\str . lit str tokRange\n      strStartsWith tok '.'\n        jsonParse (strCat (cons '0' (cons tok nil))) (\\err . ref tok tokRange) (\\item . lit item tokRange)\n        or (and (>= (strAt tok 0) '0') (<= (strAt tok 0) '9')) (strStartsWith tok '-')\n          jsonParse tok (\\err . ref tok tokRange) (\\item . lit item tokRange)\n          ref tok tokRange","range":[1,0]}},"arg":{"_type":"lambda","varName":"token","body":{"_type":"lambda","varName":"names","body":{"_type":"let","varName":"tok","value":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,40]},"arg":{"_type":"ref","varName":"token","range":[1,52]}},"body":{"_type":"let","varName":"tokRange","value":{"_type":"apply","func":{"_type":"ref","varName":"fileposList","range":[1,72]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,85]},"arg":{"_type":"ref","varName":"token","range":[1,94]}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,131]},"arg":{"_type":"ref","varName":"names","range":[1,140]}},"arg":{"_type":"ref","varName":"tok","range":[1,146]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ref","range":[1,154]},"arg":{"_type":"ref","varName":"tok","range":[1,158]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,162]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,175]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,179]},"arg":{"_type":"ref","varName":"tok","range":[1,193]}},"arg":{"_type":"lit","value":"\"","range":[1,197]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,204]},"arg":{"_type":"ref","varName":"tok","range":[1,218]}},"arg":{"_type":"lit","value":"'","range":[1,222]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseString","range":[1,233]},"arg":{"_type":"ref","varName":"tok","range":[1,245]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lit","range":[1,256]},"arg":{"_type":"ref","varName":"str","range":[1,260]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,264]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,279]},"arg":{"_type":"ref","varName":"tok","range":[1,293]}},"arg":{"_type":"lit","value":".","range":[1,297]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"jsonParse","range":[1,309]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,320]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,328]},"arg":{"_type":"lit","value":"0","range":[1,333]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,338]},"arg":{"_type":"ref","varName":"tok","range":[1,343]}},"arg":{"_type":"ref","varName":"nil","range":[1,347]}}}}},"arg":{"_type":"lambda","varName":"err","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ref","range":[1,362]},"arg":{"_type":"ref","varName":"tok","range":[1,366]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,370]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lit","range":[1,389]},"arg":{"_type":"ref","varName":"item","range":[1,393]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,398]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,416]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,420]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">=","range":[1,425]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,429]},"arg":{"_type":"ref","varName":"tok","range":[1,435]}},"arg":{"_type":"lit","value":0,"range":[1,439]}}},"arg":{"_type":"lit","value":"0","range":[1,442]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"<=","range":[1,448]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strAt","range":[1,452]},"arg":{"_type":"ref","varName":"tok","range":[1,458]}},"arg":{"_type":"lit","value":0,"range":[1,462]}}},"arg":{"_type":"lit","value":"9","range":[1,465]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strStartsWith","range":[1,472]},"arg":{"_type":"ref","varName":"tok","range":[1,486]}},"arg":{"_type":"lit","value":"-","range":[1,490]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"jsonParse","range":[1,505]},"arg":{"_type":"ref","varName":"tok","range":[1,515]}},"arg":{"_type":"lambda","varName":"err","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ref","range":[1,527]},"arg":{"_type":"ref","varName":"tok","range":[1,531]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,535]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lit","range":[1,554]},"arg":{"_type":"ref","varName":"item","range":[1,558]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,563]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ref","range":[1,583]},"arg":{"_type":"ref","varName":"tok","range":[1,587]}},"arg":{"_type":"ref","varName":"tokRange","range":[1,591]}}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createLambda","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"createLambda start list names = \\\\\n  err = parseErr \"Lambda needs a variable name, a dot, and a body \" (loc start)\n  .\n  withCons list err \\name rest .\n    withToken name err \\n p .\n      withCons rest err \\dot body .\n        # are these partial applications too hard to read?\n        isTokenString dot '.'\n          ifNotErr (createAst nil body (cons n names)) \\bodyAst . lambda n bodyAst nilRange\n          ifNotErr (createLambda start rest (cons n names)) \\bodyAst . lambda n bodyAst nilRange","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"names","body":{"_type":"let","varName":"err","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,43]},"arg":{"_type":"lit","value":"Lambda needs a variable name, a dot, and a body ","range":[1,52]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,104]},"arg":{"_type":"ref","varName":"start","range":[1,108]}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,121]},"arg":{"_type":"ref","varName":"list","range":[1,130]}},"arg":{"_type":"ref","varName":"err","range":[1,135]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,156]},"arg":{"_type":"ref","varName":"name","range":[1,166]}},"arg":{"_type":"ref","varName":"err","range":[1,171]}},"arg":{"_type":"lambda","varName":"n","body":{"_type":"lambda","varName":"p","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,188]},"arg":{"_type":"ref","varName":"rest","range":[1,197]}},"arg":{"_type":"ref","varName":"err","range":[1,202]}},"arg":{"_type":"lambda","varName":"dot","body":{"_type":"lambda","varName":"body","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,285]},"arg":{"_type":"ref","varName":"dot","range":[1,299]}},"arg":{"_type":"lit","value":".","range":[1,303]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,317]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,327]},"arg":{"_type":"ref","varName":"nil","range":[1,337]}},"arg":{"_type":"ref","varName":"body","range":[1,341]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,347]},"arg":{"_type":"ref","varName":"n","range":[1,352]}},"arg":{"_type":"ref","varName":"names","range":[1,354]}}}},"arg":{"_type":"lambda","varName":"bodyAst","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lambda","range":[1,373]},"arg":{"_type":"ref","varName":"n","range":[1,380]}},"arg":{"_type":"ref","varName":"bodyAst","range":[1,382]}},"arg":{"_type":"ref","varName":"nilRange","range":[1,390]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,409]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createLambda","range":[1,419]},"arg":{"_type":"ref","varName":"start","range":[1,432]}},"arg":{"_type":"ref","varName":"rest","range":[1,438]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,444]},"arg":{"_type":"ref","varName":"n","range":[1,449]}},"arg":{"_type":"ref","varName":"names","range":[1,451]}}}},"arg":{"_type":"lambda","varName":"bodyAst","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lambda","range":[1,470]},"arg":{"_type":"ref","varName":"n","range":[1,477]}},"arg":{"_type":"ref","varName":"bodyAst","range":[1,479]}},"arg":{"_type":"ref","varName":"nilRange","range":[1,487]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createAnno","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"createAnno start list names =\n  withCons list (parseErr \"No annotation name or data in annotation \" (loc start)) \\name rest .\n    withCons rest (parseErr \"No data for annotation \" (loc start)) \\data rest . \\\\\n      finish data body = ifNotErr (createAst nil body names) \\bodyAst .\n        cleanTokens start name \\name .\n          cleanTokens start data \\data .\n            anno name data bodyAst\n      .\n      isTokenString data '.'\n        finish nil rest\n        withStripped data \\data .\n          withCons rest (parseErr \"No body for annotation \" (loc start)) \\dot body .\n            isTokenString dot '.'\n              finish data body\n              parseErr \"Annotation expects dot after name and data \" (loc start)","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,32]},"arg":{"_type":"ref","varName":"list","range":[1,41]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,47]},"arg":{"_type":"lit","value":"No annotation name or data in annotation ","range":[1,56]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,101]},"arg":{"_type":"ref","varName":"start","range":[1,105]}}}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,130]},"arg":{"_type":"ref","varName":"rest","range":[1,139]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,145]},"arg":{"_type":"lit","value":"No data for annotation ","range":[1,154]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,181]},"arg":{"_type":"ref","varName":"start","range":[1,185]}}}},"arg":{"_type":"lambda","varName":"data","body":{"_type":"lambda","varName":"rest","body":{"_type":"let","varName":"finish","value":{"_type":"lambda","varName":"data","body":{"_type":"lambda","varName":"body","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,234]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,244]},"arg":{"_type":"ref","varName":"nil","range":[1,254]}},"arg":{"_type":"ref","varName":"body","range":[1,258]}},"arg":{"_type":"ref","varName":"names","range":[1,263]}}},"arg":{"_type":"lambda","varName":"bodyAst","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cleanTokens","range":[1,289]},"arg":{"_type":"ref","varName":"start","range":[1,301]}},"arg":{"_type":"ref","varName":"name","range":[1,307]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cleanTokens","range":[1,330]},"arg":{"_type":"ref","varName":"start","range":[1,342]}},"arg":{"_type":"ref","varName":"data","range":[1,348]}},"arg":{"_type":"lambda","varName":"data","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"anno","range":[1,373]},"arg":{"_type":"ref","varName":"name","range":[1,378]}},"arg":{"_type":"ref","varName":"data","range":[1,383]}},"arg":{"_type":"ref","varName":"bodyAst","range":[1,388]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,410]},"arg":{"_type":"ref","varName":"data","range":[1,424]}},"arg":{"_type":"lit","value":".","range":[1,429]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"finish","range":[1,441]},"arg":{"_type":"ref","varName":"nil","range":[1,448]}},"arg":{"_type":"ref","varName":"rest","range":[1,452]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withStripped","range":[1,465]},"arg":{"_type":"ref","varName":"data","range":[1,478]}},"arg":{"_type":"lambda","varName":"data","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,501]},"arg":{"_type":"ref","varName":"rest","range":[1,510]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,516]},"arg":{"_type":"lit","value":"No body for annotation ","range":[1,525]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,552]},"arg":{"_type":"ref","varName":"start","range":[1,556]}}}},"arg":{"_type":"lambda","varName":"dot","body":{"_type":"lambda","varName":"body","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,588]},"arg":{"_type":"ref","varName":"dot","range":[1,602]}},"arg":{"_type":"lit","value":".","range":[1,606]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"finish","range":[1,624]},"arg":{"_type":"ref","varName":"data","range":[1,631]}},"arg":{"_type":"ref","varName":"body","range":[1,636]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,655]},"arg":{"_type":"lit","value":"Annotation expects dot after name and data ","range":[1,664]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,711]},"arg":{"_type":"ref","varName":"start","range":[1,715]}}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"bodyStructPat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"bodyStructPat = regexp '\\\\|\\\\\\\\|\\\\@'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,16]},"arg":{"_type":"lit","value":"\\|\\\\|\\@","range":[1,23]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createApply","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"createApply inList names = withStripped inList \\list .\n  withCons list (parseErr \"Funcion apply expecting a non-empty list \" (loc inList)) \\h t .\n    ifNotErr (createAst nil h names) \\func . chainApply func t names","range":[1,0]}},"arg":{"_type":"lambda","varName":"inList","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withStripped","range":[1,27]},"arg":{"_type":"ref","varName":"inList","range":[1,40]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,57]},"arg":{"_type":"ref","varName":"list","range":[1,66]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,72]},"arg":{"_type":"lit","value":"Funcion apply expecting a non-empty list ","range":[1,81]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,126]},"arg":{"_type":"ref","varName":"inList","range":[1,130]}}}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,150]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,160]},"arg":{"_type":"ref","varName":"nil","range":[1,170]}},"arg":{"_type":"ref","varName":"h","range":[1,174]}},"arg":{"_type":"ref","varName":"names","range":[1,176]}}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"chainApply","range":[1,191]},"arg":{"_type":"ref","varName":"func","range":[1,202]}},"arg":{"_type":"ref","varName":"t","range":[1,207]}},"arg":{"_type":"ref","varName":"names","range":[1,209]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"blockStarts","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"blockStarts = cons '\\\\' (cons '\\\\\\\\' (cons '\\\\@' nil))","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,14]},"arg":{"_type":"lit","value":"\\","range":[1,19]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,25]},"arg":{"_type":"lit","value":"\\\\","range":[1,30]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,38]},"arg":{"_type":"lit","value":"\\@","range":[1,43]}},"arg":{"_type":"ref","varName":"nil","range":[1,49]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"chainApply","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"chainApply func list names = withCons list func \\argItem rest .\n  and (isToken argItem) (contains blockStarts (tokenString argItem))\n    ifNotErr (createAst nil list names) \\arg . apply func arg\n    ifNotErr (createAst nil argItem names) \\arg . chainApply (apply func arg) rest names","range":[1,0]}},"arg":{"_type":"lambda","varName":"func","body":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,29]},"arg":{"_type":"ref","varName":"list","range":[1,38]}},"arg":{"_type":"ref","varName":"func","range":[1,43]}},"arg":{"_type":"lambda","varName":"argItem","body":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,66]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,71]},"arg":{"_type":"ref","varName":"argItem","range":[1,79]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,89]},"arg":{"_type":"ref","varName":"blockStarts","range":[1,98]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,111]},"arg":{"_type":"ref","varName":"argItem","range":[1,123]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,137]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,147]},"arg":{"_type":"ref","varName":"nil","range":[1,157]}},"arg":{"_type":"ref","varName":"list","range":[1,161]}},"arg":{"_type":"ref","varName":"names","range":[1,166]}}},"arg":{"_type":"lambda","varName":"arg","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"apply","range":[1,180]},"arg":{"_type":"ref","varName":"func","range":[1,186]}},"arg":{"_type":"ref","varName":"arg","range":[1,191]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,199]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,209]},"arg":{"_type":"ref","varName":"nil","range":[1,219]}},"arg":{"_type":"ref","varName":"argItem","range":[1,223]}},"arg":{"_type":"ref","varName":"names","range":[1,231]}}},"arg":{"_type":"lambda","varName":"arg","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"chainApply","range":[1,245]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"apply","range":[1,257]},"arg":{"_type":"ref","varName":"func","range":[1,263]}},"arg":{"_type":"ref","varName":"arg","range":[1,268]}}},"arg":{"_type":"ref","varName":"rest","range":[1,273]}},"arg":{"_type":"ref","varName":"names","range":[1,278]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"cleanTokens","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"cleanTokens start toks cont = isToken toks\n  cont (tokenString toks)\n  withCons toks (cont toks) \\head tail .\n    cleanTokens start head \\head .\n      cleanTokens start tail \\tail .\n        cont (cons head tail)","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,30]},"arg":{"_type":"ref","varName":"toks","range":[1,38]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,45]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,51]},"arg":{"_type":"ref","varName":"toks","range":[1,63]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,71]},"arg":{"_type":"ref","varName":"toks","range":[1,80]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,86]},"arg":{"_type":"ref","varName":"toks","range":[1,91]}}},"arg":{"_type":"lambda","varName":"head","body":{"_type":"lambda","varName":"tail","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cleanTokens","range":[1,114]},"arg":{"_type":"ref","varName":"start","range":[1,126]}},"arg":{"_type":"ref","varName":"head","range":[1,132]}},"arg":{"_type":"lambda","varName":"head","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cleanTokens","range":[1,151]},"arg":{"_type":"ref","varName":"start","range":[1,163]}},"arg":{"_type":"ref","varName":"tail","range":[1,169]}},"arg":{"_type":"lambda","varName":"tail","body":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,190]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,196]},"arg":{"_type":"ref","varName":"head","range":[1,201]}},"arg":{"_type":"ref","varName":"tail","range":[1,206]}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createLet","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"createLet start list names = withCons list\n  parseErr \"No variable or body for let \" (loc start)\n  \\binding body . eq body nil (createAst nil binding name)\n    ifNotErr (getLetNames start list names) \\newNames .\n      createSublets start binding body newNames","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,29]},"arg":{"_type":"ref","varName":"list","range":[1,38]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,45]},"arg":{"_type":"lit","value":"No variable or body for let ","range":[1,54]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,86]},"arg":{"_type":"ref","varName":"start","range":[1,90]}}}},"arg":{"_type":"lambda","varName":"binding","body":{"_type":"lambda","varName":"body","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,115]},"arg":{"_type":"ref","varName":"body","range":[1,118]}},"arg":{"_type":"ref","varName":"nil","range":[1,123]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,128]},"arg":{"_type":"ref","varName":"nil","range":[1,138]}},"arg":{"_type":"ref","varName":"binding","range":[1,142]}},"arg":{"_type":"ref","varName":"name","range":[1,150]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,160]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getLetNames","range":[1,170]},"arg":{"_type":"ref","varName":"start","range":[1,182]}},"arg":{"_type":"ref","varName":"list","range":[1,188]}},"arg":{"_type":"ref","varName":"names","range":[1,193]}}},"arg":{"_type":"lambda","varName":"newNames","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createSublets","range":[1,218]},"arg":{"_type":"ref","varName":"start","range":[1,232]}},"arg":{"_type":"ref","varName":"binding","range":[1,238]}},"arg":{"_type":"ref","varName":"body","range":[1,246]}},"arg":{"_type":"ref","varName":"newNames","range":[1,251]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"getLetNames","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"getLetNames start list names = \\\\\n  err = parseErr \"Let expected binding \" (loc start)\n  .\n  withCons list names \\binding body .\n    isTokenString binding '.' names\n      withParens binding err \\start end def .\n        withCons def err \\name rest .\n          withToken name err \\str pos .\n            getLetNames start body (cons str names)","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"names","body":{"_type":"let","varName":"err","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,42]},"arg":{"_type":"lit","value":"Let expected binding ","range":[1,51]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,76]},"arg":{"_type":"ref","varName":"start","range":[1,80]}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,93]},"arg":{"_type":"ref","varName":"list","range":[1,102]}},"arg":{"_type":"ref","varName":"names","range":[1,107]}},"arg":{"_type":"lambda","varName":"binding","body":{"_type":"lambda","varName":"body","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,133]},"arg":{"_type":"ref","varName":"binding","range":[1,147]}},"arg":{"_type":"lit","value":".","range":[1,155]}},"arg":{"_type":"ref","varName":"names","range":[1,159]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withParens","range":[1,171]},"arg":{"_type":"ref","varName":"binding","range":[1,182]}},"arg":{"_type":"ref","varName":"err","range":[1,190]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"def","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,219]},"arg":{"_type":"ref","varName":"def","range":[1,228]}},"arg":{"_type":"ref","varName":"err","range":[1,232]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,259]},"arg":{"_type":"ref","varName":"name","range":[1,269]}},"arg":{"_type":"ref","varName":"err","range":[1,274]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getLetNames","range":[1,301]},"arg":{"_type":"ref","varName":"start","range":[1,313]}},"arg":{"_type":"ref","varName":"body","range":[1,319]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,325]},"arg":{"_type":"ref","varName":"str","range":[1,330]}},"arg":{"_type":"ref","varName":"names","range":[1,334]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createSublets","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"createSublets start binding body names =\n  isTokenString binding '.' (createAst nil body names)\n    withCons body (parseErr \"Let expected a body \" (loc start)) \\bodyH bodyT .\n      ifNotErr (getNameAndDef (parensStart binding) (parensContent binding) names) \\res . res \\name def .\n        ifNotErr (createSublets start bodyH bodyT names) \\bodyAst .\n          let (tokenString name) def bodyAst nilRange","range":[1,0]}},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"binding","body":{"_type":"lambda","varName":"body","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,43]},"arg":{"_type":"ref","varName":"binding","range":[1,57]}},"arg":{"_type":"lit","value":".","range":[1,65]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,70]},"arg":{"_type":"ref","varName":"nil","range":[1,80]}},"arg":{"_type":"ref","varName":"body","range":[1,84]}},"arg":{"_type":"ref","varName":"names","range":[1,89]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,100]},"arg":{"_type":"ref","varName":"body","range":[1,109]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,115]},"arg":{"_type":"lit","value":"Let expected a body ","range":[1,124]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,148]},"arg":{"_type":"ref","varName":"start","range":[1,152]}}}},"arg":{"_type":"lambda","varName":"bodyH","body":{"_type":"lambda","varName":"bodyT","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,181]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getNameAndDef","range":[1,191]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parensStart","range":[1,206]},"arg":{"_type":"ref","varName":"binding","range":[1,218]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parensContent","range":[1,228]},"arg":{"_type":"ref","varName":"binding","range":[1,242]}}},"arg":{"_type":"ref","varName":"names","range":[1,251]}}},"arg":{"_type":"lambda","varName":"res","body":{"_type":"apply","func":{"_type":"ref","varName":"res","range":[1,265]},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"def","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,289]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createSublets","range":[1,299]},"arg":{"_type":"ref","varName":"start","range":[1,313]}},"arg":{"_type":"ref","varName":"bodyH","range":[1,319]}},"arg":{"_type":"ref","varName":"bodyT","range":[1,325]}},"arg":{"_type":"ref","varName":"names","range":[1,331]}}},"arg":{"_type":"lambda","varName":"bodyAst","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"let","range":[1,359]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,364]},"arg":{"_type":"ref","varName":"name","range":[1,376]}}},"arg":{"_type":"ref","varName":"def","range":[1,382]}},"arg":{"_type":"ref","varName":"bodyAst","range":[1,386]}},"arg":{"_type":"ref","varName":"nilRange","range":[1,394]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"getNameAndDef","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"getNameAndDef pos binding names =\n  withCons (tail binding) (parseErr \"Let expected binding at \" pos) \\snd sndT .\n    isTokenString snd '=' (ifNotErr (createAst nil sndT names) \\def . cons (head binding) def)\n      ifNotErr (getLetLambda pos (tail binding) nil names) \\lamb . cons (head binding) lamb","range":[1,0]}},"arg":{"_type":"lambda","varName":"pos","body":{"_type":"lambda","varName":"binding","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,36]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,46]},"arg":{"_type":"ref","varName":"binding","range":[1,51]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,61]},"arg":{"_type":"lit","value":"Let expected binding at ","range":[1,70]}},"arg":{"_type":"ref","varName":"pos","range":[1,97]}}},"arg":{"_type":"lambda","varName":"snd","body":{"_type":"lambda","varName":"sndT","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,118]},"arg":{"_type":"ref","varName":"snd","range":[1,132]}},"arg":{"_type":"lit","value":"=","range":[1,136]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,141]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,151]},"arg":{"_type":"ref","varName":"nil","range":[1,161]}},"arg":{"_type":"ref","varName":"sndT","range":[1,165]}},"arg":{"_type":"ref","varName":"names","range":[1,170]}}},"arg":{"_type":"lambda","varName":"def","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,184]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,190]},"arg":{"_type":"ref","varName":"binding","range":[1,195]}}},"arg":{"_type":"ref","varName":"def","range":[1,204]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,215]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getLetLambda","range":[1,225]},"arg":{"_type":"ref","varName":"pos","range":[1,238]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,243]},"arg":{"_type":"ref","varName":"binding","range":[1,248]}}},"arg":{"_type":"ref","varName":"nil","range":[1,257]}},"arg":{"_type":"ref","varName":"names","range":[1,261]}}},"arg":{"_type":"lambda","varName":"lamb","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,276]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,282]},"arg":{"_type":"ref","varName":"binding","range":[1,287]}}},"arg":{"_type":"ref","varName":"lamb","range":[1,296]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"getLetLambda","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"getLetLambda pos def args names =\n  withCons def (parseErr \"Let expected binding at \" pos) \\arg rest .\n    not (isToken arg) (parseErr \"Let expected binding at \" pos)\n      isTokenString arg '='\n        createAst nil (cons (token '\\\\' pos) (append (reverse args) (cons (token '.' (position arg)) rest))) names\n        getLetLambda pos rest (cons arg args) names","range":[1,0]}},"arg":{"_type":"lambda","varName":"pos","body":{"_type":"lambda","varName":"def","body":{"_type":"lambda","varName":"args","body":{"_type":"lambda","varName":"names","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,36]},"arg":{"_type":"ref","varName":"def","range":[1,45]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,50]},"arg":{"_type":"lit","value":"Let expected binding at ","range":[1,59]}},"arg":{"_type":"ref","varName":"pos","range":[1,86]}}},"arg":{"_type":"lambda","varName":"arg","body":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"not","range":[1,107]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,112]},"arg":{"_type":"ref","varName":"arg","range":[1,120]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,126]},"arg":{"_type":"lit","value":"Let expected binding at ","range":[1,135]}},"arg":{"_type":"ref","varName":"pos","range":[1,162]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,173]},"arg":{"_type":"ref","varName":"arg","range":[1,187]}},"arg":{"_type":"lit","value":"=","range":[1,191]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,203]},"arg":{"_type":"ref","varName":"nil","range":[1,213]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,218]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,224]},"arg":{"_type":"lit","value":"\\","range":[1,230]}},"arg":{"_type":"ref","varName":"pos","range":[1,235]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,241]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"reverse","range":[1,249]},"arg":{"_type":"ref","varName":"args","range":[1,257]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,264]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,270]},"arg":{"_type":"lit","value":".","range":[1,276]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,281]},"arg":{"_type":"ref","varName":"arg","range":[1,290]}}}},"arg":{"_type":"ref","varName":"rest","range":[1,296]}}}}},"arg":{"_type":"ref","varName":"names","range":[1,304]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getLetLambda","range":[1,318]},"arg":{"_type":"ref","varName":"pos","range":[1,331]}},"arg":{"_type":"ref","varName":"rest","range":[1,335]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,341]},"arg":{"_type":"ref","varName":"arg","range":[1,346]}},"arg":{"_type":"ref","varName":"args","range":[1,350]}}},"arg":{"_type":"ref","varName":"names","range":[1,356]}}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"scanLineG","range":[1,0]}},"arg":{"_type":"lit","value":5,"range":[1,0]}},"arg":{"_type":"lit","value":"scanLineG str pat groups onDef onExpr = countedScanLineG emptyLineStarts str pat groups onDef onExpr","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"groups","body":{"_type":"lambda","varName":"onDef","body":{"_type":"lambda","varName":"onExpr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedScanLineG","range":[1,40]},"arg":{"_type":"ref","varName":"emptyLineStarts","range":[1,57]}},"arg":{"_type":"ref","varName":"str","range":[1,73]}},"arg":{"_type":"ref","varName":"pat","range":[1,77]}},"arg":{"_type":"ref","varName":"groups","range":[1,81]}},"arg":{"_type":"ref","varName":"onDef","range":[1,88]}},"arg":{"_type":"ref","varName":"onExpr","range":[1,94]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedScanLineG","range":[1,0]}},"arg":{"_type":"lit","value":6,"range":[1,0]}},"arg":{"_type":"lit","value":"countedScanLineG lineStarts str pat groups onDef onExpr = \\\\\n  toks = countedTokens lineStarts str pat\n  groupToks = foldr (\\el value . el \\h t . cons h (cons t value)) (cons '=' blockStarts) groups\n  .\n  # check if it's a definition\n  find (\\tok . or (contains groupToks (tokenString tok)) (isCons (strMatch (tokenString tok) '^\\r?\\n'))) toks (\\item . isTokenString item '=') false\n    toks \\name rest . \\\\\n      parseIt func = \\\\\n        parsed = parseToks (checkSetDataType func rest name) groups\n        .\n        onDef (ifNotErr parsed \\list . createDef list name (arity rest 0) str)\n      .\n      isTokenString (head rest) '='\n        isTokenString (head (tail rest)) '\\\\'\n          parseIt (setTypeAnno (tail rest) (tokenString name))\n          parseIt (tail rest)\n        ifNotErr (transformDef name rest) \\def .\n          parseIt (cons (token '\\\\' (- (position (head rest)) 1)) def)\n    ifNotErr (parseToks toks groups) \\list . onExpr list","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"groups","body":{"_type":"lambda","varName":"onDef","body":{"_type":"lambda","varName":"onExpr","body":{"_type":"let","varName":"toks","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedTokens","range":[1,70]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,84]}},"arg":{"_type":"ref","varName":"str","range":[1,95]}},"arg":{"_type":"ref","varName":"pat","range":[1,99]}},"body":{"_type":"let","varName":"groupToks","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldr","range":[1,117]},"arg":{"_type":"lambda","varName":"el","body":{"_type":"lambda","varName":"value","body":{"_type":"apply","func":{"_type":"ref","varName":"el","range":[1,136]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,146]},"arg":{"_type":"ref","varName":"h","range":[1,151]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,154]},"arg":{"_type":"ref","varName":"t","range":[1,159]}},"arg":{"_type":"ref","varName":"value","range":[1,161]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,170]},"arg":{"_type":"lit","value":"=","range":[1,175]}},"arg":{"_type":"ref","varName":"blockStarts","range":[1,179]}}},"arg":{"_type":"ref","varName":"groups","range":[1,192]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"find","range":[1,236]},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,249]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,253]},"arg":{"_type":"ref","varName":"groupToks","range":[1,262]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,273]},"arg":{"_type":"ref","varName":"tok","range":[1,285]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,292]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,300]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,310]},"arg":{"_type":"ref","varName":"tok","range":[1,322]}}},"arg":{"_type":"lit","value":"^\r?\n","range":[1,327]}}}},"range":[1,0]}},"arg":{"_type":"ref","varName":"toks","range":[1,339]}},"arg":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,353]},"arg":{"_type":"ref","varName":"item","range":[1,367]}},"arg":{"_type":"lit","value":"=","range":[1,372]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"false","range":[1,377]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"toks","range":[1,387]},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"rest","body":{"_type":"let","varName":"parseIt","value":{"_type":"lambda","varName":"func","body":{"_type":"let","varName":"parsed","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseToks","range":[1,449]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"checkSetDataType","range":[1,460]},"arg":{"_type":"ref","varName":"func","range":[1,477]}},"arg":{"_type":"ref","varName":"rest","range":[1,482]}},"arg":{"_type":"ref","varName":"name","range":[1,487]}}},"arg":{"_type":"ref","varName":"groups","range":[1,493]}},"body":{"_type":"apply","func":{"_type":"ref","varName":"onDef","range":[1,518]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,525]},"arg":{"_type":"ref","varName":"parsed","range":[1,534]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createDef","range":[1,549]},"arg":{"_type":"ref","varName":"list","range":[1,559]}},"arg":{"_type":"ref","varName":"name","range":[1,564]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"arity","range":[1,570]},"arg":{"_type":"ref","varName":"rest","range":[1,576]}},"arg":{"_type":"lit","value":0,"range":[1,581]}}},"arg":{"_type":"ref","varName":"str","range":[1,584]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,603]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,618]},"arg":{"_type":"ref","varName":"rest","range":[1,623]}}},"arg":{"_type":"lit","value":"=","range":[1,629]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,641]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,656]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,662]},"arg":{"_type":"ref","varName":"rest","range":[1,667]}}}},"arg":{"_type":"lit","value":"\\","range":[1,674]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parseIt","range":[1,689]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setTypeAnno","range":[1,698]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,711]},"arg":{"_type":"ref","varName":"rest","range":[1,716]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,723]},"arg":{"_type":"ref","varName":"name","range":[1,735]}}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parseIt","range":[1,752]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,761]},"arg":{"_type":"ref","varName":"rest","range":[1,766]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,780]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"transformDef","range":[1,790]},"arg":{"_type":"ref","varName":"name","range":[1,803]}},"arg":{"_type":"ref","varName":"rest","range":[1,808]}}},"arg":{"_type":"lambda","varName":"def","body":{"_type":"apply","func":{"_type":"ref","varName":"parseIt","range":[1,831]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,840]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,846]},"arg":{"_type":"lit","value":"\\","range":[1,852]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"-","range":[1,858]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,861]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,871]},"arg":{"_type":"ref","varName":"rest","range":[1,876]}}}},"arg":{"_type":"lit","value":1,"range":[1,883]}}}},"arg":{"_type":"ref","varName":"def","range":[1,887]}}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,896]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseToks","range":[1,906]},"arg":{"_type":"ref","varName":"toks","range":[1,916]}},"arg":{"_type":"ref","varName":"groups","range":[1,921]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"onExpr","range":[1,937]},"arg":{"_type":"ref","varName":"list","range":[1,944]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseLineG","range":[1,0]}},"arg":{"_type":"lit","value":6,"range":[1,0]}},"arg":{"_type":"lit","value":"parseLineG str pat names groups onDef onExpr = \\\\\n  astCallback cb = \\list . ifNotErr (createAst nil list names) \\ast . cb ast\n  .\n  scanLineG str pat groups (astCallback onDef) (astCallback onExpr)","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"groups","body":{"_type":"lambda","varName":"onDef","body":{"_type":"lambda","varName":"onExpr","body":{"_type":"let","varName":"astCallback","value":{"_type":"lambda","varName":"cb","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,77]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,87]},"arg":{"_type":"ref","varName":"nil","range":[1,97]}},"arg":{"_type":"ref","varName":"list","range":[1,101]}},"arg":{"_type":"ref","varName":"names","range":[1,106]}}},"arg":{"_type":"lambda","varName":"ast","body":{"_type":"apply","func":{"_type":"ref","varName":"cb","range":[1,120]},"arg":{"_type":"ref","varName":"ast","range":[1,123]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"scanLineG","range":[1,133]},"arg":{"_type":"ref","varName":"str","range":[1,143]}},"arg":{"_type":"ref","varName":"pat","range":[1,147]}},"arg":{"_type":"ref","varName":"groups","range":[1,151]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"astCallback","range":[1,159]},"arg":{"_type":"ref","varName":"onDef","range":[1,171]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"astCallback","range":[1,179]},"arg":{"_type":"ref","varName":"onExpr","range":[1,191]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"transformDef","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"transformDef name toks = withCons toks (parseErr \"Bad definition, expecting tokens\" (loc name)) \\h t .\n  isTokenString h '='\n    isTokenString (head t) '\\\\'\n      cons (token '.' (position h)) (setTypeAnno t (tokenString name))\n      cons (token '.' (position h)) t\n    ifNotErr (transformDef name t) \\list . cons h list","range":[1,0]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"toks","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,25]},"arg":{"_type":"ref","varName":"toks","range":[1,34]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,40]},"arg":{"_type":"lit","value":"Bad definition, expecting tokens","range":[1,49]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,85]},"arg":{"_type":"ref","varName":"name","range":[1,89]}}}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,105]},"arg":{"_type":"ref","varName":"h","range":[1,119]}},"arg":{"_type":"lit","value":"=","range":[1,121]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,129]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,144]},"arg":{"_type":"ref","varName":"t","range":[1,149]}}},"arg":{"_type":"lit","value":"\\","range":[1,152]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,163]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,169]},"arg":{"_type":"lit","value":".","range":[1,175]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,180]},"arg":{"_type":"ref","varName":"h","range":[1,189]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setTypeAnno","range":[1,194]},"arg":{"_type":"ref","varName":"t","range":[1,206]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,209]},"arg":{"_type":"ref","varName":"name","range":[1,221]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,234]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,240]},"arg":{"_type":"lit","value":".","range":[1,246]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,251]},"arg":{"_type":"ref","varName":"h","range":[1,260]}}}},"arg":{"_type":"ref","varName":"t","range":[1,264]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,270]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"transformDef","range":[1,280]},"arg":{"_type":"ref","varName":"name","range":[1,293]}},"arg":{"_type":"ref","varName":"t","range":[1,298]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,309]},"arg":{"_type":"ref","varName":"h","range":[1,314]}},"arg":{"_type":"ref","varName":"list","range":[1,316]}},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"setTypeAnno","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"setTypeAnno toks name = \\\\\n  tok = \\str . token str (position toks)\n  .\n  cons (tok '\\\\@') (cons (tok 'type') (cons (tok name) (cons (tok '.') toks)))","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"name","body":{"_type":"let","varName":"tok","value":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,42]},"arg":{"_type":"ref","varName":"str","range":[1,48]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,53]},"arg":{"_type":"ref","varName":"toks","range":[1,62]}}},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,74]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,80]},"arg":{"_type":"lit","value":"\\@","range":[1,84]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,92]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,98]},"arg":{"_type":"lit","value":"type","range":[1,102]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,111]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,117]},"arg":{"_type":"ref","varName":"name","range":[1,121]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,128]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,134]},"arg":{"_type":"lit","value":".","range":[1,138]}}},"arg":{"_type":"ref","varName":"toks","range":[1,143]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"setDataTypeAnno","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"setDataTypeAnno toks name = \\\\\n  tok = \\str . token str (position toks)\n  .\n  cons (tok '\\\\@') (cons (tok 'dataType') (cons (tok (tokenString name)) (cons (tok '.') toks)))","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"name","body":{"_type":"let","varName":"tok","value":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,46]},"arg":{"_type":"ref","varName":"str","range":[1,52]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,57]},"arg":{"_type":"ref","varName":"toks","range":[1,66]}}},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,78]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,84]},"arg":{"_type":"lit","value":"\\@","range":[1,88]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,96]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,102]},"arg":{"_type":"lit","value":"dataType","range":[1,106]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,119]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,125]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,130]},"arg":{"_type":"ref","varName":"name","range":[1,142]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,150]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,156]},"arg":{"_type":"lit","value":".","range":[1,160]}}},"arg":{"_type":"ref","varName":"toks","range":[1,165]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"createDef","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"createDef def name arity src = \\\\\n  #tok str = token str (position def)\n  tok str = token str (position name)\n  .\n  jsonStringify (tokenString name) (\\err . parseErr (strCat (cons \"Bad function name \" (cons (loc name) nil))) err) \\nameStr .\n    jsonStringify src (\\err . parseErr (strCat (cons \"Bad source \" (cons (loc name) nil))) err) \\srcStr .\n      cons (tok 'define') (cons (tok nameStr) (cons (tok (strString arity)) (cons (tok srcStr) (cons def nil))))\n      #cons (tok '\\\\@') (cons (cons (tok 'definition') (cons (tok name) nil)) (cons (tok '.') (cons (tok 'define') (cons (tok nameStr) (cons (tok (strString arity)) (cons (tok srcStr) (cons def nil)))))))","range":[1,0]}},"arg":{"_type":"lambda","varName":"def","body":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"arity","body":{"_type":"lambda","varName":"src","body":{"_type":"let","varName":"tok","value":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,84]},"arg":{"_type":"ref","varName":"str","range":[1,90]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,95]},"arg":{"_type":"ref","varName":"name","range":[1,104]}}},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"jsonStringify","range":[1,116]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,131]},"arg":{"_type":"ref","varName":"name","range":[1,143]}}},"arg":{"_type":"lambda","varName":"err","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,157]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,167]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,175]},"arg":{"_type":"lit","value":"Bad function name ","range":[1,180]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,202]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,208]},"arg":{"_type":"ref","varName":"name","range":[1,212]}}},"arg":{"_type":"ref","varName":"nil","range":[1,218]}}}}},"arg":{"_type":"ref","varName":"err","range":[1,225]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"nameStr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"jsonStringify","range":[1,245]},"arg":{"_type":"ref","varName":"src","range":[1,259]}},"arg":{"_type":"lambda","varName":"err","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,271]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,281]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,289]},"arg":{"_type":"lit","value":"Bad source ","range":[1,294]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,309]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"loc","range":[1,315]},"arg":{"_type":"ref","varName":"name","range":[1,319]}}},"arg":{"_type":"ref","varName":"nil","range":[1,325]}}}}},"arg":{"_type":"ref","varName":"err","range":[1,332]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"srcStr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,353]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,359]},"arg":{"_type":"lit","value":"define","range":[1,363]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,374]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,380]},"arg":{"_type":"ref","varName":"nameStr","range":[1,384]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,394]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,400]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strString","range":[1,405]},"arg":{"_type":"ref","varName":"arity","range":[1,415]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,424]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tok","range":[1,430]},"arg":{"_type":"ref","varName":"srcStr","range":[1,434]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,443]},"arg":{"_type":"ref","varName":"def","range":[1,448]}},"arg":{"_type":"ref","varName":"nil","range":[1,452]}}}}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"checkSetDataType","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"checkSetDataType toks curToks name = withCons curToks toks \\h t .\n  isTokenString h '='\n    isTokenString (head t) '\\\\'\n      setDataTypeAnno toks name\n      toks\n    checkSetDataType toks t name","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"curToks","body":{"_type":"lambda","varName":"name","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,37]},"arg":{"_type":"ref","varName":"curToks","range":[1,46]}},"arg":{"_type":"ref","varName":"toks","range":[1,54]}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,68]},"arg":{"_type":"ref","varName":"h","range":[1,82]}},"arg":{"_type":"lit","value":"=","range":[1,84]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,92]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,107]},"arg":{"_type":"ref","varName":"t","range":[1,112]}}},"arg":{"_type":"lit","value":"\\","range":[1,115]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setDataTypeAnno","range":[1,126]},"arg":{"_type":"ref","varName":"toks","range":[1,142]}},"arg":{"_type":"ref","varName":"name","range":[1,147]}}},"arg":{"_type":"ref","varName":"toks","range":[1,158]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"checkSetDataType","range":[1,167]},"arg":{"_type":"ref","varName":"toks","range":[1,184]}},"arg":{"_type":"ref","varName":"t","range":[1,189]}},"arg":{"_type":"ref","varName":"name","range":[1,191]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"arity","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"arity toks n = isTokenString (head toks) '=' n (arity (tail toks) (+ n 1))","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"lambda","varName":"n","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,30]},"arg":{"_type":"ref","varName":"toks","range":[1,35]}}},"arg":{"_type":"lit","value":"=","range":[1,41]}},"arg":{"_type":"ref","varName":"n","range":[1,45]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"arity","range":[1,48]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,55]},"arg":{"_type":"ref","varName":"toks","range":[1,60]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,67]},"arg":{"_type":"ref","varName":"n","range":[1,69]}},"arg":{"_type":"lit","value":1,"range":[1,71]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tokListStr","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"tokListStr toks = jsonStringify (join (map (\\t . tokenString t) toks) ' ')","range":[1,0]}},"arg":{"_type":"lambda","varName":"toks","body":{"_type":"apply","func":{"_type":"ref","varName":"jsonStringify","range":[1,18]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"join","range":[1,33]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,39]},"arg":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,49]},"arg":{"_type":"ref","varName":"t","range":[1,61]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"toks","range":[1,64]}}},"arg":{"_type":"lit","value":" ","range":[1,70]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"linePat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"linePat = regexp '\\\\r?\\\\n(?=[^ ]|$)'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,10]},"arg":{"_type":"lit","value":"\\r?\\n(?=[^ ]|$)","range":[1,17]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"emptyLinePat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"emptyLinePat = regexp '(^[ \\\\i]*\\\\#.*|^[ \\\\i]*$|^\\\\r?\\\\n[ \\\\i]*$)'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,15]},"arg":{"_type":"lit","value":"(^[ \\i]*\\#.*|^[ \\i]*$|^\\r?\\n[ \\i]*$)","range":[1,22]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"lineScrub","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"lineScrub = regexpFlags '\\\\r\\\\n' 'g'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"regexpFlags","range":[1,12]},"arg":{"_type":"lit","value":"\\r\\n","range":[1,24]}},"arg":{"_type":"lit","value":"g","range":[1,33]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"linesForFile","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"linesForFile text = map tail (countedLinesForFile \"NOTHING.lsr\" text)","range":[1,0]}},"arg":{"_type":"lambda","varName":"text","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,20]},"arg":{"_type":"ref","varName":"tail","range":[1,24]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedLinesForFile","range":[1,30]},"arg":{"_type":"lit","value":"NOTHING.lsr","range":[1,50]}},"arg":{"_type":"ref","varName":"text","range":[1,64]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedLinesForFile","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"countedLinesForFile name text = filter\n  \\line . isNil (strMatch (tail line) emptyLinePat)\n  countedLines name 1 text","range":[1,0]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"text","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filter","range":[1,32]},"arg":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,49]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,56]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,66]},"arg":{"_type":"ref","varName":"line","range":[1,71]}}},"arg":{"_type":"ref","varName":"emptyLinePat","range":[1,77]}}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedLines","range":[1,93]},"arg":{"_type":"ref","varName":"name","range":[1,106]}},"arg":{"_type":"lit","value":1,"range":[1,111]}},"arg":{"_type":"ref","varName":"text","range":[1,113]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedLines","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"countedLines filename lineOffset str = \\\\\n  m = strMatch str linePat\n  idx = head (tail (tail m))\n  chunk = strSubstring str 0 idx\n  next = + idx (strLen (head m))\n  chunkLines = findLines 0 chunk\n  .\n  eq str ''\n    nil\n    isNil m\n      cons (cons (cons filename (cons lineOffset (tail (findLines 0 str)))) str) nil\n      cons (cons (cons filename (cons lineOffset (tail chunkLines))) chunk)\n        countedLines filename (+ lineOffset (length chunkLines)) (strSubstring str next 0)","range":[1,0]}},"arg":{"_type":"lambda","varName":"filename","body":{"_type":"lambda","varName":"lineOffset","body":{"_type":"lambda","varName":"str","body":{"_type":"let","varName":"m","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,48]},"arg":{"_type":"ref","varName":"str","range":[1,57]}},"arg":{"_type":"ref","varName":"linePat","range":[1,61]}},"body":{"_type":"let","varName":"idx","value":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,77]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,83]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,89]},"arg":{"_type":"ref","varName":"m","range":[1,94]}}}},"body":{"_type":"let","varName":"chunk","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,108]},"arg":{"_type":"ref","varName":"str","range":[1,121]}},"arg":{"_type":"lit","value":0,"range":[1,125]}},"arg":{"_type":"ref","varName":"idx","range":[1,127]}},"body":{"_type":"let","varName":"next","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,140]},"arg":{"_type":"ref","varName":"idx","range":[1,142]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,147]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,155]},"arg":{"_type":"ref","varName":"m","range":[1,160]}}}},"body":{"_type":"let","varName":"chunkLines","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"findLines","range":[1,179]},"arg":{"_type":"lit","value":0,"range":[1,189]}},"arg":{"_type":"ref","varName":"chunk","range":[1,191]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,203]},"arg":{"_type":"ref","varName":"str","range":[1,206]}},"arg":{"_type":"lit","value":"","range":[1,210]}},"arg":{"_type":"ref","varName":"nil","range":[1,217]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,225]},"arg":{"_type":"ref","varName":"m","range":[1,231]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,239]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,245]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,251]},"arg":{"_type":"ref","varName":"filename","range":[1,256]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,266]},"arg":{"_type":"ref","varName":"lineOffset","range":[1,271]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,283]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"findLines","range":[1,289]},"arg":{"_type":"lit","value":0,"range":[1,299]}},"arg":{"_type":"ref","varName":"str","range":[1,301]}}}}}},"arg":{"_type":"ref","varName":"str","range":[1,309]}}},"arg":{"_type":"ref","varName":"nil","range":[1,314]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,324]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,330]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,336]},"arg":{"_type":"ref","varName":"filename","range":[1,341]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,351]},"arg":{"_type":"ref","varName":"lineOffset","range":[1,356]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,368]},"arg":{"_type":"ref","varName":"chunkLines","range":[1,373]}}}}},"arg":{"_type":"ref","varName":"chunk","range":[1,387]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedLines","range":[1,402]},"arg":{"_type":"ref","varName":"filename","range":[1,415]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,425]},"arg":{"_type":"ref","varName":"lineOffset","range":[1,427]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"length","range":[1,439]},"arg":{"_type":"ref","varName":"chunkLines","range":[1,446]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,460]},"arg":{"_type":"ref","varName":"str","range":[1,473]}},"arg":{"_type":"ref","varName":"next","range":[1,477]}},"arg":{"_type":"lit","value":0,"range":[1,482]}}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"defPat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"defPat = regexp '^[^ =]+.* =( |$)'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,9]},"arg":{"_type":"lit","value":"^[^ =]+.* =( |$)","range":[1,16]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"unanchoredDefPat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"unanchoredDefPat = regexp '^((?:\\\\s*\\\\n|#[^\\\\n]*\\\\n)*)([^=\\\\n]*)(=\\\\([^=]+=|=)?'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,19]},"arg":{"_type":"lit","value":"^((?:\\s*\\n|#[^\\n]*\\n)*)([^=\\n]*)(=\\([^=]+=|=)?","range":[1,26]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"namesForLines","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"namesForLines lines = foldl\n  \\result line . \\\\\n    m = strMatch line defPat\n    .\n    isNil m result (cons (head (tail m)) result)\n  nil\n  lines","range":[1,0]}},"arg":{"_type":"lambda","varName":"lines","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldl","range":[1,22]},"arg":{"_type":"lambda","varName":"result","body":{"_type":"lambda","varName":"line","body":{"_type":"let","varName":"m","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,56]},"arg":{"_type":"ref","varName":"line","range":[1,65]}},"arg":{"_type":"ref","varName":"defPat","range":[1,70]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,87]},"arg":{"_type":"ref","varName":"m","range":[1,93]}},"arg":{"_type":"ref","varName":"result","range":[1,95]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,103]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,109]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,115]},"arg":{"_type":"ref","varName":"m","range":[1,120]}}}},"arg":{"_type":"ref","varName":"result","range":[1,124]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,134]}},"arg":{"_type":"ref","varName":"lines","range":[1,140]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"runParseFilters","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"runParseFilters filters line = filters\n  \\h t D . bind (h line) \\filtered . runParseFilters t filtered\n  line","range":[1,0]}},"arg":{"_type":"lambda","varName":"filters","body":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filters","range":[1,31]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,50]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"h","range":[1,56]},"arg":{"_type":"ref","varName":"line","range":[1,58]}}},"arg":{"_type":"lambda","varName":"filtered","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"runParseFilters","range":[1,76]},"arg":{"_type":"ref","varName":"t","range":[1,92]}},"arg":{"_type":"ref","varName":"filtered","range":[1,94]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"line","range":[1,105]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isBlockStart","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"isBlockStart tok = and\n  or (isToken tok) (isString tok)\n  contains blockStarts (strTokenString tok)","range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,25]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,29]},"arg":{"_type":"ref","varName":"tok","range":[1,37]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isString","range":[1,43]},"arg":{"_type":"ref","varName":"tok","range":[1,52]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,59]},"arg":{"_type":"ref","varName":"blockStarts","range":[1,68]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strTokenString","range":[1,81]},"arg":{"_type":"ref","varName":"tok","range":[1,96]}}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"macroSub","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"macroSub macs expr = postProcessMacro (emptyFor expr) (emptyFor expr) (baseMacroSub macs expr)","range":[1,0]}},"arg":{"_type":"lambda","varName":"macs","body":{"_type":"lambda","varName":"expr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"emptyFor","range":[1,39]},"arg":{"_type":"ref","varName":"expr","range":[1,48]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"emptyFor","range":[1,55]},"arg":{"_type":"ref","varName":"expr","range":[1,64]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,71]},"arg":{"_type":"ref","varName":"macs","range":[1,84]}},"arg":{"_type":"ref","varName":"expr","range":[1,89]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"consifyMacroValue","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"consifyMacroValue value = isCons value value (cons value nil)","range":[1,0]}},"arg":{"_type":"lambda","varName":"value","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,26]},"arg":{"_type":"ref","varName":"value","range":[1,33]}},"arg":{"_type":"ref","varName":"value","range":[1,39]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,46]},"arg":{"_type":"ref","varName":"value","range":[1,51]}},"arg":{"_type":"ref","varName":"nil","range":[1,57]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"baseMacroSub","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"baseMacroSub macs expr = isToken expr\n  expr\n  isParens expr\n    expr \\start end content . \\\\\n      result = baseMacroSub macs content\n      .\n      isToken result result (parens start end result)\n    withCons expr expr \\h t .\n      isBlockStart h\n        cons h\n          isTokenString h '\\\\\\\\'\n            macroSubLet macs t\n            macroSubBody '.' macs t\n        withToken h\n          \\\\\n            subH = baseMacroSub macs h\n            .\n            withToken subH\n              cons subH (map (baseMacroSub macs) t)\n              \\tok pos . baseMacroSub macs (cons subH t)\n          \\tok pos . assoc tok macs\n            \\def . baseMacroSub macs (def t)\n            cons h (map (baseMacroSub macs) t)","range":[1,0]}},"arg":{"_type":"lambda","varName":"macs","body":{"_type":"lambda","varName":"expr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,25]},"arg":{"_type":"ref","varName":"expr","range":[1,33]}},"arg":{"_type":"ref","varName":"expr","range":[1,40]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,47]},"arg":{"_type":"ref","varName":"expr","range":[1,56]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"expr","range":[1,65]},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"content","body":{"_type":"let","varName":"result","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,109]},"arg":{"_type":"ref","varName":"macs","range":[1,122]}},"arg":{"_type":"ref","varName":"content","range":[1,127]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,149]},"arg":{"_type":"ref","varName":"result","range":[1,157]}},"arg":{"_type":"ref","varName":"result","range":[1,164]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parens","range":[1,172]},"arg":{"_type":"ref","varName":"start","range":[1,179]}},"arg":{"_type":"ref","varName":"end","range":[1,185]}},"arg":{"_type":"ref","varName":"result","range":[1,189]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withCons","range":[1,201]},"arg":{"_type":"ref","varName":"expr","range":[1,210]}},"arg":{"_type":"ref","varName":"expr","range":[1,215]}},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isBlockStart","range":[1,233]},"arg":{"_type":"ref","varName":"h","range":[1,246]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,256]},"arg":{"_type":"ref","varName":"h","range":[1,261]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,273]},"arg":{"_type":"ref","varName":"h","range":[1,287]}},"arg":{"_type":"lit","value":"\\\\","range":[1,289]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"macroSubLet","range":[1,308]},"arg":{"_type":"ref","varName":"macs","range":[1,320]}},"arg":{"_type":"ref","varName":"t","range":[1,325]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"macroSubBody","range":[1,339]},"arg":{"_type":"lit","value":".","range":[1,352]}},"arg":{"_type":"ref","varName":"macs","range":[1,356]}},"arg":{"_type":"ref","varName":"t","range":[1,361]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,371]},"arg":{"_type":"ref","varName":"h","range":[1,381]}},"arg":{"_type":"let","varName":"subH","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,415]},"arg":{"_type":"ref","varName":"macs","range":[1,428]}},"arg":{"_type":"ref","varName":"h","range":[1,433]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"withToken","range":[1,461]},"arg":{"_type":"ref","varName":"subH","range":[1,471]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,490]},"arg":{"_type":"ref","varName":"subH","range":[1,495]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,501]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,506]},"arg":{"_type":"ref","varName":"macs","range":[1,519]}}},"arg":{"_type":"ref","varName":"t","range":[1,525]}}}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,553]},"arg":{"_type":"ref","varName":"macs","range":[1,566]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,572]},"arg":{"_type":"ref","varName":"subH","range":[1,577]}},"arg":{"_type":"ref","varName":"t","range":[1,582]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"tok","body":{"_type":"lambda","varName":"pos","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assoc","range":[1,606]},"arg":{"_type":"ref","varName":"tok","range":[1,612]}},"arg":{"_type":"ref","varName":"macs","range":[1,616]}},"arg":{"_type":"lambda","varName":"def","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,640]},"arg":{"_type":"ref","varName":"macs","range":[1,653]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"def","range":[1,659]},"arg":{"_type":"ref","varName":"t","range":[1,663]}}},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,678]},"arg":{"_type":"ref","varName":"h","range":[1,683]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,686]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,691]},"arg":{"_type":"ref","varName":"macs","range":[1,704]}}},"arg":{"_type":"ref","varName":"t","range":[1,710]}}}},"range":[1,0]},"range":[1,0]}}},"range":[1,0]},"range":[1,0]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"macroSubLet","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"macroSubLet macs list = list\n  \\h t D . isTokenString h '.'\n    cons h (baseMacroSub macs t)\n    cons (setParens h \\content . macroSubBody '=' macs content) (macroSubLet macs t)\n  # Don't bother with parse errors at this point -- ast generator will detect them\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"macs","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,24]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,40]},"arg":{"_type":"ref","varName":"h","range":[1,54]}},"arg":{"_type":"lit","value":".","range":[1,56]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,64]},"arg":{"_type":"ref","varName":"h","range":[1,69]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"baseMacroSub","range":[1,72]},"arg":{"_type":"ref","varName":"macs","range":[1,85]}},"arg":{"_type":"ref","varName":"t","range":[1,90]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,97]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setParens","range":[1,103]},"arg":{"_type":"ref","varName":"h","range":[1,113]}},"arg":{"_type":"lambda","varName":"content","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"macroSubBody","range":[1,126]},"arg":{"_type":"lit","value":"=","range":[1,139]}},"arg":{"_type":"ref","varName":"macs","range":[1,143]}},"arg":{"_type":"ref","varName":"content","range":[1,148]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"macroSubLet","range":[1,158]},"arg":{"_type":"ref","varName":"macs","range":[1,170]}},"arg":{"_type":"ref","varName":"t","range":[1,175]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,263]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"macroSubBody","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"macroSubBody char macs list = list\n  \\h t D . cons h\n    isTokenString h char baseMacroSub (macroSubBody char)\n      macs\n      t\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"char","body":{"_type":"lambda","varName":"macs","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,30]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,46]},"arg":{"_type":"ref","varName":"h","range":[1,51]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,57]},"arg":{"_type":"ref","varName":"h","range":[1,71]}},"arg":{"_type":"ref","varName":"char","range":[1,73]}},"arg":{"_type":"ref","varName":"baseMacroSub","range":[1,78]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"macroSubBody","range":[1,92]},"arg":{"_type":"ref","varName":"char","range":[1,105]}}},"arg":{"_type":"ref","varName":"macs","range":[1,117]}},"arg":{"_type":"ref","varName":"t","range":[1,128]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,132]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"postProcessMacro","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"postProcessMacro before after expr = isString expr\n  token expr (isEmptyPos after before after)\n  isParens expr\n    expr \\start end contents . parens start end (postProcessMacro start end contents)\n    isCons expr\n      expr \\h t .\n        isToken h\n          cons h (postProcessMacro (addFilepos (addFilepos (tokenFilepos h) (strLen (tokenString h))) 1) (emptyFor h) t)\n          \\\\\n            posStart = position h\n            posEnd = position t\n            t2 = postProcessMacro (emptyFor posStart) after t\n            h2 = postProcessMacro before (emptyFor posStart) h\n            .\n            isEmptyPos posStart\n              cons (postProcessMacro before (position t2) h) t2\n              cons h2 (postProcessMacro (addFilepos (lexEnd h2) 1) after t)\n      isNumber expr\n        token (strString expr) (isEmptyPos after before after)\n        expr","range":[1,0]}},"arg":{"_type":"lambda","varName":"before","body":{"_type":"lambda","varName":"after","body":{"_type":"lambda","varName":"expr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isString","range":[1,37]},"arg":{"_type":"ref","varName":"expr","range":[1,46]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,53]},"arg":{"_type":"ref","varName":"expr","range":[1,59]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isEmptyPos","range":[1,65]},"arg":{"_type":"ref","varName":"after","range":[1,76]}},"arg":{"_type":"ref","varName":"before","range":[1,82]}},"arg":{"_type":"ref","varName":"after","range":[1,89]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,98]},"arg":{"_type":"ref","varName":"expr","range":[1,107]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"expr","range":[1,116]},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"contents","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parens","range":[1,143]},"arg":{"_type":"ref","varName":"start","range":[1,150]}},"arg":{"_type":"ref","varName":"end","range":[1,156]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,161]},"arg":{"_type":"ref","varName":"start","range":[1,178]}},"arg":{"_type":"ref","varName":"end","range":[1,184]}},"arg":{"_type":"ref","varName":"contents","range":[1,188]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,202]},"arg":{"_type":"ref","varName":"expr","range":[1,209]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"expr","range":[1,220]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,240]},"arg":{"_type":"ref","varName":"h","range":[1,248]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,260]},"arg":{"_type":"ref","varName":"h","range":[1,265]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,268]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addFilepos","range":[1,286]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addFilepos","range":[1,298]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenFilepos","range":[1,310]},"arg":{"_type":"ref","varName":"h","range":[1,323]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,327]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,335]},"arg":{"_type":"ref","varName":"h","range":[1,347]}}}}},"arg":{"_type":"lit","value":1,"range":[1,352]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"emptyFor","range":[1,356]},"arg":{"_type":"ref","varName":"h","range":[1,365]}}},"arg":{"_type":"ref","varName":"t","range":[1,368]}}}},"arg":{"_type":"let","varName":"posStart","value":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,407]},"arg":{"_type":"ref","varName":"h","range":[1,416]}},"body":{"_type":"let","varName":"posEnd","value":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,439]},"arg":{"_type":"ref","varName":"t","range":[1,448]}},"body":{"_type":"let","varName":"t2","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,467]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"emptyFor","range":[1,485]},"arg":{"_type":"ref","varName":"posStart","range":[1,494]}}},"arg":{"_type":"ref","varName":"after","range":[1,504]}},"arg":{"_type":"ref","varName":"t","range":[1,510]}},"body":{"_type":"let","varName":"h2","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,529]},"arg":{"_type":"ref","varName":"before","range":[1,546]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"emptyFor","range":[1,554]},"arg":{"_type":"ref","varName":"posStart","range":[1,563]}}},"arg":{"_type":"ref","varName":"h","range":[1,573]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isEmptyPos","range":[1,601]},"arg":{"_type":"ref","varName":"posStart","range":[1,612]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,635]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,641]},"arg":{"_type":"ref","varName":"before","range":[1,658]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"position","range":[1,666]},"arg":{"_type":"ref","varName":"t2","range":[1,675]}}},"arg":{"_type":"ref","varName":"h","range":[1,679]}}},"arg":{"_type":"ref","varName":"t2","range":[1,682]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,699]},"arg":{"_type":"ref","varName":"h2","range":[1,704]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"postProcessMacro","range":[1,708]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addFilepos","range":[1,726]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"lexEnd","range":[1,738]},"arg":{"_type":"ref","varName":"h2","range":[1,745]}}},"arg":{"_type":"lit","value":1,"range":[1,749]}}},"arg":{"_type":"ref","varName":"after","range":[1,752]}},"arg":{"_type":"ref","varName":"t","range":[1,758]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNumber","range":[1,767]},"arg":{"_type":"ref","varName":"expr","range":[1,776]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,789]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strString","range":[1,796]},"arg":{"_type":"ref","varName":"expr","range":[1,806]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isEmptyPos","range":[1,813]},"arg":{"_type":"ref","varName":"after","range":[1,824]}},"arg":{"_type":"ref","varName":"before","range":[1,830]}},"arg":{"_type":"ref","varName":"after","range":[1,837]}}}},"arg":{"_type":"ref","varName":"expr","range":[1,852]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"defMacro","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"defMacro name def = bind (getValue 'macroDefs') \\macs . setValue 'macroDefs' (acons name def macs)","range":[1,0]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"def","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,20]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,26]},"arg":{"_type":"lit","value":"macroDefs","range":[1,35]}}},"arg":{"_type":"lambda","varName":"macs","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,56]},"arg":{"_type":"lit","value":"macroDefs","range":[1,65]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"acons","range":[1,78]},"arg":{"_type":"ref","varName":"name","range":[1,84]}},"arg":{"_type":"ref","varName":"def","range":[1,89]}},"arg":{"_type":"ref","varName":"macs","range":[1,93]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"delimiterListPrefix","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"delimiterListPrefix = \"\\\"(?:\\\\\\\\.|[^\\\"])*\\\"|'(?:\\\\\\\\.|[^'])*'|\\\\r?\\\\n *|#.*| +\"","range":[1,0]}},"arg":{"_type":"lit","value":"\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\r?\\n *|#.*| +","range":[1,22]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"regexpEscapePat","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"regexpEscapePat = regexpFlags '[\\\\-\\\\[\\\\]/\\\\{\\\\}\\\\(\\\\)\\\\*\\\\+\\\\?\\\\.\\\\\\\\\\\\^\\\\$\\\\|]' 'g'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"regexpFlags","range":[1,18]},"arg":{"_type":"lit","value":"[\\-\\[\\]/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]","range":[1,30]}},"arg":{"_type":"lit","value":"g","range":[1,82]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"addToken","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"addToken del = bind (getValue 'tokenList')\n  \\dels . contains dels del\n    false\n    \\\\\n      newDels = insertSorted (\\a b . > (strLen a) (strLen b)) del dels\n      .\n      bind (setValue 'tokenList' newDels)\n        \\_ . computeTokenPat newDels","range":[1,0]}},"arg":{"_type":"lambda","varName":"del","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,21]},"arg":{"_type":"lit","value":"tokenList","range":[1,30]}}},"arg":{"_type":"lambda","varName":"dels","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,53]},"arg":{"_type":"ref","varName":"dels","range":[1,62]}},"arg":{"_type":"ref","varName":"del","range":[1,67]}},"arg":{"_type":"ref","varName":"false","range":[1,75]}},"arg":{"_type":"let","varName":"newDels","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"insertSorted","range":[1,104]},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,125]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,128]},"arg":{"_type":"ref","varName":"a","range":[1,135]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,139]},"arg":{"_type":"ref","varName":"b","range":[1,146]}}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"del","range":[1,150]}},"arg":{"_type":"ref","varName":"dels","range":[1,154]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,173]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,179]},"arg":{"_type":"lit","value":"tokenList","range":[1,188]}},"arg":{"_type":"ref","varName":"newDels","range":[1,200]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"ref","varName":"computeTokenPat","range":[1,222]},"arg":{"_type":"ref","varName":"newDels","range":[1,238]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"computeTokenPat","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"computeTokenPat dels = \\\\\n  delPats = map (\\item . strReplace item regexpEscapePat \"\\\\$&\") dels\n  newPat = strCat (cons '(' (cons (join (cons delimiterListPrefix delPats) '|') (cons ')' nil)))\n  .\n  setValue 'tokenPat' newPat","range":[1,0]}},"arg":{"_type":"lambda","varName":"dels","body":{"_type":"let","varName":"delPats","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,38]},"arg":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strReplace","range":[1,51]},"arg":{"_type":"ref","varName":"item","range":[1,62]}},"arg":{"_type":"ref","varName":"regexpEscapePat","range":[1,67]}},"arg":{"_type":"lit","value":"\\$&","range":[1,83]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"dels","range":[1,91]}},"body":{"_type":"let","varName":"newPat","value":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,107]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,115]},"arg":{"_type":"lit","value":"(","range":[1,120]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,125]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"join","range":[1,131]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,137]},"arg":{"_type":"ref","varName":"delimiterListPrefix","range":[1,142]}},"arg":{"_type":"ref","varName":"delPats","range":[1,162]}}},"arg":{"_type":"lit","value":"|","range":[1,171]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,177]},"arg":{"_type":"lit","value":")","range":[1,182]}},"arg":{"_type":"ref","varName":"nil","range":[1,186]}}}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,199]},"arg":{"_type":"lit","value":"tokenPat","range":[1,208]}},"arg":{"_type":"ref","varName":"newPat","range":[1,219]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"addTokenGroup","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"addTokenGroup open close = bind (addToken open)\n  \\_ . bind (addToken close)\n    \\_ . bind (getValue 'tokenGroups')\n      \\gr . setValue 'tokenGroups' (acons open close gr)","range":[1,0]}},"arg":{"_type":"lambda","varName":"open","body":{"_type":"lambda","varName":"close","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,27]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"addToken","range":[1,33]},"arg":{"_type":"ref","varName":"open","range":[1,42]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,55]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"addToken","range":[1,61]},"arg":{"_type":"ref","varName":"close","range":[1,70]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,86]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,92]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,101]}}},"arg":{"_type":"lambda","varName":"gr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,128]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,137]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"acons","range":[1,152]},"arg":{"_type":"ref","varName":"open","range":[1,158]}},"arg":{"_type":"ref","varName":"close","range":[1,163]}},"arg":{"_type":"ref","varName":"gr","range":[1,169]}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parenGroups","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"parenGroups = acons '(' ')' nil","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"acons","range":[1,14]},"arg":{"_type":"lit","value":"(","range":[1,20]}},"arg":{"_type":"lit","value":")","range":[1,24]}},"arg":{"_type":"ref","varName":"nil","range":[1,28]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parse","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parse str pat = ifNotErr (parseIndent (token '\\n' startFilePos) (tokens str pat) nil parenGroups) \\list . list \\h t . stripParens h","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseIndent","range":[1,26]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,39]},"arg":{"_type":"lit","value":"\n","range":[1,45]}},"arg":{"_type":"ref","varName":"startFilePos","range":[1,50]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"tokens","range":[1,65]},"arg":{"_type":"ref","varName":"str","range":[1,72]}},"arg":{"_type":"ref","varName":"pat","range":[1,76]}}},"arg":{"_type":"ref","varName":"nil","range":[1,81]}},"arg":{"_type":"ref","varName":"parenGroups","range":[1,85]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,106]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"ref","varName":"stripParens","range":[1,118]},"arg":{"_type":"ref","varName":"h","range":[1,130]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseG","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"parseG str pat groups = ifNotErr (parseIndent (token '\\n' startFilePos) (tokens str pat) nil groups) \\list . list \\h t . stripParens h","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseIndent","range":[1,34]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"token","range":[1,47]},"arg":{"_type":"lit","value":"\n","range":[1,53]}},"arg":{"_type":"ref","varName":"startFilePos","range":[1,58]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"tokens","range":[1,73]},"arg":{"_type":"ref","varName":"str","range":[1,80]}},"arg":{"_type":"ref","varName":"pat","range":[1,84]}}},"arg":{"_type":"ref","varName":"nil","range":[1,89]}},"arg":{"_type":"ref","varName":"groups","range":[1,93]}}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,109]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"ref","varName":"stripParens","range":[1,121]},"arg":{"_type":"ref","varName":"h","range":[1,133]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseToAst","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parseToAst str pat = createAst nil (parse str pat) nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,21]},"arg":{"_type":"ref","varName":"nil","range":[1,31]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parse","range":[1,36]},"arg":{"_type":"ref","varName":"str","range":[1,42]}},"arg":{"_type":"ref","varName":"pat","range":[1,46]}}},"arg":{"_type":"ref","varName":"nil","range":[1,51]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseM","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parseM str =\n  bind (getValue 'tokenPat')\n    \\tokPat . bind (getValue 'tokenGroups')\n      \\groups . parseG str tokPat groups","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,21]},"arg":{"_type":"lit","value":"tokenPat","range":[1,30]}}},"arg":{"_type":"lambda","varName":"tokPat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,56]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,62]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,71]}}},"arg":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseG","range":[1,102]},"arg":{"_type":"ref","varName":"str","range":[1,109]}},"arg":{"_type":"ref","varName":"tokPat","range":[1,113]}},"arg":{"_type":"ref","varName":"groups","range":[1,120]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"scanLine","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"scanLine str pat onDef onExpr = scanLineG str pat parenGroups onDef onExpr","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"onDef","body":{"_type":"lambda","varName":"onExpr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"scanLineG","range":[1,32]},"arg":{"_type":"ref","varName":"str","range":[1,42]}},"arg":{"_type":"ref","varName":"pat","range":[1,46]}},"arg":{"_type":"ref","varName":"parenGroups","range":[1,50]}},"arg":{"_type":"ref","varName":"onDef","range":[1,62]}},"arg":{"_type":"ref","varName":"onExpr","range":[1,68]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseLine","range":[1,0]}},"arg":{"_type":"lit","value":5,"range":[1,0]}},"arg":{"_type":"lit","value":"parseLine str pat names onDef onExpr = parseLineG str pat names parenGroups onDef onExpr","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"lambda","varName":"pat","body":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"onDef","body":{"_type":"lambda","varName":"onExpr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseLineG","range":[1,39]},"arg":{"_type":"ref","varName":"str","range":[1,50]}},"arg":{"_type":"ref","varName":"pat","range":[1,54]}},"arg":{"_type":"ref","varName":"names","range":[1,58]}},"arg":{"_type":"ref","varName":"parenGroups","range":[1,64]}},"arg":{"_type":"ref","varName":"onDef","range":[1,76]}},"arg":{"_type":"ref","varName":"onExpr","range":[1,82]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseLineM","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parseLineM str = bind (getValue 'tokenPat')\n  \\tokPat . bind (getValue 'tokenGroups')\n    \\groups . parseLineG str tokPat nil groups id id","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,17]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,23]},"arg":{"_type":"lit","value":"tokenPat","range":[1,32]}}},"arg":{"_type":"lambda","varName":"tokPat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,56]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,62]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,71]}}},"arg":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseLineG","range":[1,100]},"arg":{"_type":"ref","varName":"str","range":[1,111]}},"arg":{"_type":"ref","varName":"tokPat","range":[1,115]}},"arg":{"_type":"ref","varName":"nil","range":[1,122]}},"arg":{"_type":"ref","varName":"groups","range":[1,126]}},"arg":{"_type":"ref","varName":"id","range":[1,133]}},"arg":{"_type":"ref","varName":"id","range":[1,136]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"macroSubM","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"macroSubM expr =\n  bind (getValue 'macroDefs')\n    \\macs . macroSub macs expr","range":[1,0]}},"arg":{"_type":"lambda","varName":"expr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,25]},"arg":{"_type":"lit","value":"macroDefs","range":[1,34]}}},"arg":{"_type":"lambda","varName":"macs","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"macroSub","range":[1,59]},"arg":{"_type":"ref","varName":"macs","range":[1,68]}},"arg":{"_type":"ref","varName":"expr","range":[1,73]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"macroParse","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"macroParse str =\n  bind (parseM str)\n    \\ex . macroSubM ex","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,19]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parseM","range":[1,25]},"arg":{"_type":"ref","varName":"str","range":[1,32]}}},"arg":{"_type":"lambda","varName":"ex","body":{"_type":"apply","func":{"_type":"ref","varName":"macroSubM","range":[1,47]},"arg":{"_type":"ref","varName":"ex","range":[1,57]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"tokensM","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"tokensM str =\n  bind (getValue 'tokenPat')\n    \\delimiterPat . tokens str delimiterPat","range":[1,0]}},"arg":{"_type":"lambda","varName":"str","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,22]},"arg":{"_type":"lit","value":"tokenPat","range":[1,31]}}},"arg":{"_type":"lambda","varName":"delimiterPat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"tokens","range":[1,63]},"arg":{"_type":"ref","varName":"str","range":[1,70]}},"arg":{"_type":"ref","varName":"delimiterPat","range":[1,74]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseLines","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"parseLines lines result = lines\n  \\h t D . bind (parseLineM h)\n    \\ast . parseLines t (cons ast result)\n  reverse result","range":[1,0]}},"arg":{"_type":"lambda","varName":"lines","body":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lines","range":[1,26]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,43]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parseLineM","range":[1,49]},"arg":{"_type":"ref","varName":"h","range":[1,60]}}},"arg":{"_type":"lambda","varName":"ast","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseLines","range":[1,74]},"arg":{"_type":"ref","varName":"t","range":[1,85]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,88]},"arg":{"_type":"ref","varName":"ast","range":[1,93]}},"arg":{"_type":"ref","varName":"result","range":[1,97]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"reverse","range":[1,107]},"arg":{"_type":"ref","varName":"result","range":[1,115]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"parseFile","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"parseFile text = parseLines (linesForFile text) nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"text","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseLines","range":[1,17]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"linesForFile","range":[1,29]},"arg":{"_type":"ref","varName":"text","range":[1,42]}}},"arg":{"_type":"ref","varName":"nil","range":[1,48]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"simpleScanLine","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"simpleScanLine line = bind (getValue 'tokenPat')\n  \\tokenPat . bind (getValue 'tokenGroups')\n    \\groups . scanLineG line tokenPat groups id id","range":[1,0]}},"arg":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,22]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,28]},"arg":{"_type":"lit","value":"tokenPat","range":[1,37]}}},"arg":{"_type":"lambda","varName":"tokenPat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,63]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,69]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,78]}}},"arg":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"scanLineG","range":[1,107]},"arg":{"_type":"ref","varName":"line","range":[1,117]}},"arg":{"_type":"ref","varName":"tokenPat","range":[1,122]}},"arg":{"_type":"ref","varName":"groups","range":[1,131]}},"arg":{"_type":"ref","varName":"id","range":[1,138]}},"arg":{"_type":"ref","varName":"id","range":[1,141]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"scanLineM","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"scanLineM line = countedScanLineM emptyLineStarts line","range":[1,0]}},"arg":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedScanLineM","range":[1,17]},"arg":{"_type":"ref","varName":"emptyLineStarts","range":[1,34]}},"arg":{"_type":"ref","varName":"line","range":[1,50]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedScanLineM","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"countedScanLineM lineStarts line = bind (getValue 'tokenPat')\n  \\tokenPat . bind (getValue 'tokenGroups')\n    \\groups . bind (getValue 'parseFilters')\n      \\filters . bind (getValue 'macroDefs')\n        \\macros . bind (runParseFilters filters (countedScanLineG lineStarts line tokenPat groups id id))\n          \\scanned . macroSub macros scanned","range":[1,0]}},"arg":{"_type":"lambda","varName":"lineStarts","body":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,35]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,41]},"arg":{"_type":"lit","value":"tokenPat","range":[1,50]}}},"arg":{"_type":"lambda","varName":"tokenPat","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,76]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,82]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,91]}}},"arg":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,120]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,126]},"arg":{"_type":"lit","value":"parseFilters","range":[1,135]}}},"arg":{"_type":"lambda","varName":"filters","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,168]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,174]},"arg":{"_type":"lit","value":"macroDefs","range":[1,183]}}},"arg":{"_type":"lambda","varName":"macros","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,214]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"runParseFilters","range":[1,220]},"arg":{"_type":"ref","varName":"filters","range":[1,236]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedScanLineG","range":[1,245]},"arg":{"_type":"ref","varName":"lineStarts","range":[1,262]}},"arg":{"_type":"ref","varName":"line","range":[1,273]}},"arg":{"_type":"ref","varName":"tokenPat","range":[1,278]}},"arg":{"_type":"ref","varName":"groups","range":[1,287]}},"arg":{"_type":"ref","varName":"id","range":[1,294]}},"arg":{"_type":"ref","varName":"id","range":[1,297]}}}},"arg":{"_type":"lambda","varName":"scanned","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"macroSub","range":[1,323]},"arg":{"_type":"ref","varName":"macros","range":[1,332]}},"arg":{"_type":"ref","varName":"scanned","range":[1,339]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"newline","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"newline = regexp '\\\\r?\\\\n'","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"regexp","range":[1,10]},"arg":{"_type":"lit","value":"\\r?\\n","range":[1,17]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"findLines","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"findLines offset line = \\\\\n  m = strMatch line newline\n  idx = + 1 (head (tail (tail m)))\n  .\n  eq m nil\n    cons offset nil\n    cons offset (findLines (+ offset idx) (strSubstring line idx 0))","range":[1,0]}},"arg":{"_type":"lambda","varName":"offset","body":{"_type":"lambda","varName":"line","body":{"_type":"let","varName":"m","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strMatch","range":[1,33]},"arg":{"_type":"ref","varName":"line","range":[1,42]}},"arg":{"_type":"ref","varName":"newline","range":[1,47]}},"body":{"_type":"let","varName":"idx","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,63]},"arg":{"_type":"lit","value":1,"range":[1,65]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,68]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,74]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,80]},"arg":{"_type":"ref","varName":"m","range":[1,85]}}}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"eq","range":[1,96]},"arg":{"_type":"ref","varName":"m","range":[1,99]}},"arg":{"_type":"ref","varName":"nil","range":[1,101]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,109]},"arg":{"_type":"ref","varName":"offset","range":[1,114]}},"arg":{"_type":"ref","varName":"nil","range":[1,121]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,129]},"arg":{"_type":"ref","varName":"offset","range":[1,134]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"findLines","range":[1,142]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"+","range":[1,153]},"arg":{"_type":"ref","varName":"offset","range":[1,155]}},"arg":{"_type":"ref","varName":"idx","range":[1,162]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"strSubstring","range":[1,168]},"arg":{"_type":"ref","varName":"line","range":[1,181]}},"arg":{"_type":"ref","varName":"idx","range":[1,186]}},"arg":{"_type":"lit","value":0,"range":[1,190]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"newParseLine","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"newParseLine offset names line = bind (scanLineM line)\n  \\scanned . ifNotErr (createAst (cons \"NEWPARSE.lsr\" (findLines offset line)) scanned names) \\ast . ast","range":[1,0]}},"arg":{"_type":"lambda","varName":"offset","body":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,33]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"scanLineM","range":[1,39]},"arg":{"_type":"ref","varName":"line","range":[1,49]}}},"arg":{"_type":"lambda","varName":"scanned","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,68]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,78]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,89]},"arg":{"_type":"lit","value":"NEWPARSE.lsr","range":[1,94]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"findLines","range":[1,110]},"arg":{"_type":"ref","varName":"offset","range":[1,120]}},"arg":{"_type":"ref","varName":"line","range":[1,127]}}}},"arg":{"_type":"ref","varName":"scanned","range":[1,134]}},"arg":{"_type":"ref","varName":"names","range":[1,142]}}},"arg":{"_type":"lambda","varName":"ast","body":{"_type":"ref","varName":"ast","range":[1,156]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedParseLine","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"countedParseLine names countedLine = bind (scanLineM (tail countedLine))\n  \\scanned . ifNotErr (createAst (head countedLine) scanned names) \\ast . ast","range":[1,0]}},"arg":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"countedLine","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,37]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"scanLineM","range":[1,43]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,54]},"arg":{"_type":"ref","varName":"countedLine","range":[1,59]}}}},"arg":{"_type":"lambda","varName":"scanned","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"ifNotErr","range":[1,86]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"createAst","range":[1,96]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,107]},"arg":{"_type":"ref","varName":"countedLine","range":[1,112]}}},"arg":{"_type":"ref","varName":"scanned","range":[1,125]}},"arg":{"_type":"ref","varName":"names","range":[1,133]}}},"arg":{"_type":"lambda","varName":"ast","body":{"_type":"ref","varName":"ast","range":[1,147]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"runLine","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"runLine offset names line = bind (newParseLine offset names line)\n  \\ast . bind (runAst ast)\n    \\result . cons\n      ast\n      isParseErr result\n        left (parseErrMsg result)\n        right result","range":[1,0]}},"arg":{"_type":"lambda","varName":"offset","body":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,28]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"newParseLine","range":[1,34]},"arg":{"_type":"ref","varName":"offset","range":[1,47]}},"arg":{"_type":"ref","varName":"names","range":[1,54]}},"arg":{"_type":"ref","varName":"line","range":[1,60]}}},"arg":{"_type":"lambda","varName":"ast","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,75]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"runAst","range":[1,81]},"arg":{"_type":"ref","varName":"ast","range":[1,88]}}},"arg":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,107]},"arg":{"_type":"ref","varName":"ast","range":[1,118]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParseErr","range":[1,128]},"arg":{"_type":"ref","varName":"result","range":[1,139]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"left","range":[1,154]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parseErrMsg","range":[1,160]},"arg":{"_type":"ref","varName":"result","range":[1,172]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"right","range":[1,188]},"arg":{"_type":"ref","varName":"result","range":[1,194]}}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedRunLine","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"countedRunLine file names countedLine = \\\\\n  parsed = countedParseLine names countedLine\n  .\n  bind parsed\n  \\ast . \\\\\n    wrapped = astFileWrap file ast\n    .\n    bind (runAst wrapped)\n      \\result . cons\n        wrapped\n        isParseErr result\n          left (parseErrMsg result)\n          right result","range":[1,0]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"countedLine","body":{"_type":"let","varName":"parsed","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedParseLine","range":[1,54]},"arg":{"_type":"ref","varName":"names","range":[1,71]}},"arg":{"_type":"ref","varName":"countedLine","range":[1,77]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,95]},"arg":{"_type":"ref","varName":"parsed","range":[1,100]}},"arg":{"_type":"lambda","varName":"ast","body":{"_type":"let","varName":"wrapped","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"astFileWrap","range":[1,133]},"arg":{"_type":"ref","varName":"file","range":[1,145]}},"arg":{"_type":"ref","varName":"ast","range":[1,150]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,164]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"runAst","range":[1,170]},"arg":{"_type":"ref","varName":"wrapped","range":[1,177]}}},"arg":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,202]},"arg":{"_type":"ref","varName":"wrapped","range":[1,215]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParseErr","range":[1,231]},"arg":{"_type":"ref","varName":"result","range":[1,242]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"left","range":[1,259]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"parseErrMsg","range":[1,265]},"arg":{"_type":"ref","varName":"result","range":[1,277]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"right","range":[1,295]},"arg":{"_type":"ref","varName":"result","range":[1,301]}}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"astFileWrap","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"astFileWrap file ast = anno 'filename' file ast","range":[1,0]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"ast","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"anno","range":[1,23]},"arg":{"_type":"lit","value":"filename","range":[1,28]}},"arg":{"_type":"ref","varName":"file","range":[1,39]}},"arg":{"_type":"ref","varName":"ast","range":[1,44]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"runLines","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"runLines names lines = lines\n  \\h t D . bind (runLine 0 names h)\n    \\line . bind (runLines names t)\n      \\rest . cons line rest\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"lines","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"lines","range":[1,23]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,40]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"runLine","range":[1,46]},"arg":{"_type":"lit","value":0,"range":[1,54]}},"arg":{"_type":"ref","varName":"names","range":[1,56]}},"arg":{"_type":"ref","varName":"h","range":[1,62]}}},"arg":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,77]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"runLines","range":[1,83]},"arg":{"_type":"ref","varName":"names","range":[1,92]}},"arg":{"_type":"ref","varName":"t","range":[1,98]}}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,115]},"arg":{"_type":"ref","varName":"line","range":[1,120]}},"arg":{"_type":"ref","varName":"rest","range":[1,125]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,132]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"countedRunLines","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"countedRunLines file names countedLines = countedLines\n  \\h t D . bind (countedRunLine file names h)\n    \\line . bind (countedRunLines file names t)\n      \\rest . cons line rest\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"lambda","varName":"names","body":{"_type":"lambda","varName":"countedLines","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedLines","range":[1,42]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,66]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedRunLine","range":[1,72]},"arg":{"_type":"ref","varName":"file","range":[1,87]}},"arg":{"_type":"ref","varName":"names","range":[1,92]}},"arg":{"_type":"ref","varName":"h","range":[1,98]}}},"arg":{"_type":"lambda","varName":"line","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,113]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedRunLines","range":[1,119]},"arg":{"_type":"ref","varName":"file","range":[1,135]}},"arg":{"_type":"ref","varName":"names","range":[1,140]}},"arg":{"_type":"ref","varName":"t","range":[1,146]}}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,163]},"arg":{"_type":"ref","varName":"line","range":[1,168]}},"arg":{"_type":"ref","varName":"rest","range":[1,173]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,180]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"runFile","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"runFile text = runNamedFile \"RUNFILE.lsr\" text","range":[1,0]}},"arg":{"_type":"lambda","varName":"text","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"runNamedFile","range":[1,15]},"arg":{"_type":"lit","value":"RUNFILE.lsr","range":[1,28]}},"arg":{"_type":"ref","varName":"text","range":[1,42]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"runNamedFile","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"runNamedFile name text = \\\\\n  counted = countedLinesForFile name text\n  lines = map tail counted\n  names = namesForLines lines\n  .\n  d 'Running file: ' name countedRunLines name names counted","range":[1,0]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"text","body":{"_type":"let","varName":"counted","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"countedLinesForFile","range":[1,40]},"arg":{"_type":"ref","varName":"name","range":[1,60]}},"arg":{"_type":"ref","varName":"text","range":[1,65]}},"body":{"_type":"let","varName":"lines","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,80]},"arg":{"_type":"ref","varName":"tail","range":[1,84]}},"arg":{"_type":"ref","varName":"counted","range":[1,89]}},"body":{"_type":"let","varName":"names","value":{"_type":"apply","func":{"_type":"ref","varName":"namesForLines","range":[1,107]},"arg":{"_type":"ref","varName":"lines","range":[1,121]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"d","range":[1,133]},"arg":{"_type":"lit","value":"Running file: ","range":[1,135]}},"arg":{"_type":"ref","varName":"name","range":[1,152]}},"arg":{"_type":"ref","varName":"countedRunLines","range":[1,157]}},"arg":{"_type":"ref","varName":"name","range":[1,173]}},"arg":{"_type":"ref","varName":"names","range":[1,178]}},"arg":{"_type":"ref","varName":"counted","range":[1,184]}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"baseLoad","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"baseLoad file = bind (readFile file)\n  \\result . result\n    \\err . err\n    \\contents . bind (getValue 'activeTokenPacks')\n      \\activePacks . bind resetStdTokenPacks\n        \\_ . bind (runNamedFile file contents)\n          \\result . isNil activePacks\n            bind resetStdTokenPacks\n              \\_ . result\n            bind (resetTokenPacks activePacks)\n                \\_ . result","range":[1,0]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,16]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"readFile","range":[1,22]},"arg":{"_type":"ref","varName":"file","range":[1,31]}}},"arg":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"result","range":[1,49]},"arg":{"_type":"lambda","varName":"err","body":{"_type":"ref","varName":"err","range":[1,67]},"range":[1,0]}},"arg":{"_type":"lambda","varName":"contents","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,87]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,93]},"arg":{"_type":"lit","value":"activeTokenPacks","range":[1,102]}}},"arg":{"_type":"lambda","varName":"activePacks","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,143]},"arg":{"_type":"ref","varName":"resetStdTokenPacks","range":[1,148]}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,180]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"runNamedFile","range":[1,186]},"arg":{"_type":"ref","varName":"file","range":[1,199]}},"arg":{"_type":"ref","varName":"contents","range":[1,204]}}},"arg":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,234]},"arg":{"_type":"ref","varName":"activePacks","range":[1,240]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,264]},"arg":{"_type":"ref","varName":"resetStdTokenPacks","range":[1,269]}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"ref","varName":"result","range":[1,307]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,326]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"resetTokenPacks","range":[1,332]},"arg":{"_type":"ref","varName":"activePacks","range":[1,348]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"ref","varName":"result","range":[1,382]},"range":[1,0]}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"load","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"load file = bind (baseLoad file)\n  \\result . \\\\\n    errs = foldr (\\line results . tail line (\\er . cons er results) (\\x . results)) nil result\n    .\n    isNil errs\n      right true\n      left errs","range":[1,0]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,12]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"baseLoad","range":[1,18]},"arg":{"_type":"ref","varName":"file","range":[1,27]}}},"arg":{"_type":"lambda","varName":"result","body":{"_type":"let","varName":"errs","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldr","range":[1,59]},"arg":{"_type":"lambda","varName":"line","body":{"_type":"lambda","varName":"results","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,82]},"arg":{"_type":"ref","varName":"line","range":[1,87]}},"arg":{"_type":"lambda","varName":"er","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,99]},"arg":{"_type":"ref","varName":"er","range":[1,104]}},"arg":{"_type":"ref","varName":"results","range":[1,107]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"x","body":{"_type":"ref","varName":"results","range":[1,122]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,132]}},"arg":{"_type":"ref","varName":"result","range":[1,136]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,153]},"arg":{"_type":"ref","varName":"errs","range":[1,159]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"right","range":[1,170]},"arg":{"_type":"ref","varName":"true","range":[1,176]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"left","range":[1,187]},"arg":{"_type":"ref","varName":"errs","range":[1,192]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"require","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"require file = bind (getValue 'requiredFiles')\n  \\files . contains files file\n    right false\n    bind (setValue 'requiredFiles' (cons file files))\n      \\_. bind (load file)\n        \\result . result\n          \\x . left x\n          \\_ . right true","range":[1,0]}},"arg":{"_type":"lambda","varName":"file","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,15]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,21]},"arg":{"_type":"lit","value":"requiredFiles","range":[1,30]}}},"arg":{"_type":"lambda","varName":"files","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,58]},"arg":{"_type":"ref","varName":"files","range":[1,67]}},"arg":{"_type":"ref","varName":"file","range":[1,73]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"right","range":[1,82]},"arg":{"_type":"ref","varName":"false","range":[1,88]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,98]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,104]},"arg":{"_type":"lit","value":"requiredFiles","range":[1,113]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,130]},"arg":{"_type":"ref","varName":"file","range":[1,135]}},"arg":{"_type":"ref","varName":"files","range":[1,140]}}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,158]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"load","range":[1,164]},"arg":{"_type":"ref","varName":"file","range":[1,169]}}},"arg":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"result","range":[1,193]},"arg":{"_type":"lambda","varName":"x","body":{"_type":"apply","func":{"_type":"ref","varName":"left","range":[1,215]},"arg":{"_type":"ref","varName":"x","range":[1,220]}},"range":[1,0]}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"ref","varName":"right","range":[1,237]},"arg":{"_type":"ref","varName":"true","range":[1,243]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"defTokenPack","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"defTokenPack name pack = bind (getValue 'tokenPacks')\n  \\packs . setValue 'tokenPacks' (acons name pack packs)","range":[1,0]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"lambda","varName":"pack","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,25]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,31]},"arg":{"_type":"lit","value":"tokenPacks","range":[1,40]}}},"arg":{"_type":"lambda","varName":"packs","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,65]},"arg":{"_type":"lit","value":"tokenPacks","range":[1,74]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"acons","range":[1,88]},"arg":{"_type":"ref","varName":"name","range":[1,94]}},"arg":{"_type":"ref","varName":"pack","range":[1,99]}},"arg":{"_type":"ref","varName":"packs","range":[1,104]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"useTokenPack","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"useTokenPack name = bind (getValue 'tokenPacks')\n  \\packs . bind (getValue 'tokenGroups')\n    \\groups . bind (getValue 'tokenList')\n      \\tokens . bind (getValue 'activeTokenPacks')\n        \\activePacks . bind (getValue 'parseFilters')\n          \\filters . assoc name packs\n            \\pack . \\\\\n              groupToks = foldl (\\value el . el \\h t . cons h (cons t value)) nil (head (tail pack))\n              newToks = quicksort (\\a b . > (strLen a) (strLen b)) (append (head pack) (append groupToks tokens))\n              .\n              bind (setValue 'tokenList' newToks)\n                \\_ . bind (setValue 'tokenGroups' (appendAlist (head (tail pack)) groups))\n                  \\_ . bind (setValue 'parseFilters' (append filters (head (tail (tail pack)))))\n                    \\_ . bind (computeTokenPat newToks)\n                      \\_ . setValue 'activeTokenPacks' (cons name activePacks)\n            nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"name","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,20]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,26]},"arg":{"_type":"lit","value":"tokenPacks","range":[1,35]}}},"arg":{"_type":"lambda","varName":"packs","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,60]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,66]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,75]}}},"arg":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,104]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,110]},"arg":{"_type":"lit","value":"tokenList","range":[1,119]}}},"arg":{"_type":"lambda","varName":"tokens","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,148]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,154]},"arg":{"_type":"lit","value":"activeTokenPacks","range":[1,163]}}},"arg":{"_type":"lambda","varName":"activePacks","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,206]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,212]},"arg":{"_type":"lit","value":"parseFilters","range":[1,221]}}},"arg":{"_type":"lambda","varName":"filters","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"assoc","range":[1,258]},"arg":{"_type":"ref","varName":"name","range":[1,264]}},"arg":{"_type":"ref","varName":"packs","range":[1,269]}},"arg":{"_type":"lambda","varName":"pack","body":{"_type":"let","varName":"groupToks","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldl","range":[1,324]},"arg":{"_type":"lambda","varName":"value","body":{"_type":"lambda","varName":"el","body":{"_type":"apply","func":{"_type":"ref","varName":"el","range":[1,343]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,353]},"arg":{"_type":"ref","varName":"h","range":[1,358]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,361]},"arg":{"_type":"ref","varName":"t","range":[1,366]}},"arg":{"_type":"ref","varName":"value","range":[1,368]}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,376]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,381]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,387]},"arg":{"_type":"ref","varName":"pack","range":[1,392]}}}},"body":{"_type":"let","varName":"newToks","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"quicksort","range":[1,423]},"arg":{"_type":"lambda","varName":"a","body":{"_type":"lambda","varName":"b","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,441]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,444]},"arg":{"_type":"ref","varName":"a","range":[1,451]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strLen","range":[1,455]},"arg":{"_type":"ref","varName":"b","range":[1,462]}}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,467]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,475]},"arg":{"_type":"ref","varName":"pack","range":[1,480]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,487]},"arg":{"_type":"ref","varName":"groupToks","range":[1,494]}},"arg":{"_type":"ref","varName":"tokens","range":[1,504]}}}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,543]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,549]},"arg":{"_type":"lit","value":"tokenList","range":[1,558]}},"arg":{"_type":"ref","varName":"newToks","range":[1,570]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,600]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,606]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,615]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"appendAlist","range":[1,630]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,643]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,649]},"arg":{"_type":"ref","varName":"pack","range":[1,654]}}}},"arg":{"_type":"ref","varName":"groups","range":[1,661]}}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,693]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,699]},"arg":{"_type":"lit","value":"parseFilters","range":[1,708]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,724]},"arg":{"_type":"ref","varName":"filters","range":[1,731]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,740]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,746]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,752]},"arg":{"_type":"ref","varName":"pack","range":[1,757]}}}}}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,792]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"computeTokenPat","range":[1,798]},"arg":{"_type":"ref","varName":"newToks","range":[1,814]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,850]},"arg":{"_type":"lit","value":"activeTokenPacks","range":[1,859]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,879]},"arg":{"_type":"ref","varName":"name","range":[1,884]}},"arg":{"_type":"ref","varName":"activePacks","range":[1,889]}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,914]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"resetTokenPacks","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"resetTokenPacks packs = bind (setValue 'tokenGroups' nil)\n  \\_ . bind (setValue 'tokenList' nil)\n    \\_ . bind (setValue 'activeTokenPacks' nil)\n      \\_ . bind (setValue 'parseFilters' nil)\n        \\_ . foldr1\n          \\packCmd result . bind packCmd \\_ . result\n          map useTokenPack packs","range":[1,0]}},"arg":{"_type":"lambda","varName":"packs","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,30]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,39]}},"arg":{"_type":"ref","varName":"nil","range":[1,53]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,65]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,71]},"arg":{"_type":"lit","value":"tokenList","range":[1,80]}},"arg":{"_type":"ref","varName":"nil","range":[1,92]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,106]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,112]},"arg":{"_type":"lit","value":"activeTokenPacks","range":[1,121]}},"arg":{"_type":"ref","varName":"nil","range":[1,140]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,156]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,162]},"arg":{"_type":"lit","value":"parseFilters","range":[1,171]}},"arg":{"_type":"ref","varName":"nil","range":[1,186]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldr1","range":[1,204]},"arg":{"_type":"lambda","varName":"packCmd","body":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,239]},"arg":{"_type":"ref","varName":"packCmd","range":[1,244]}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"ref","varName":"result","range":[1,257]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,274]},"arg":{"_type":"ref","varName":"useTokenPack","range":[1,278]}},"arg":{"_type":"ref","varName":"packs","range":[1,291]}}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"resetStdTokenPacks","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"resetStdTokenPacks = bind (getValue 'stdTokenPacks')\n  \\stds . bind (resetTokenPacks stds)\n    \\_ . setValue 'activeTokenPacks' nil","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,27]},"arg":{"_type":"lit","value":"stdTokenPacks","range":[1,36]}}},"arg":{"_type":"lambda","varName":"stds","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,63]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"resetTokenPacks","range":[1,69]},"arg":{"_type":"ref","varName":"stds","range":[1,85]}}},"arg":{"_type":"lambda","varName":"_","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,100]},"arg":{"_type":"lit","value":"activeTokenPacks","range":[1,109]}},"arg":{"_type":"ref","varName":"nil","range":[1,128]}},"range":[1,0]}},"range":[1,0]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"addStdTokenPacks","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"addStdTokenPacks morePacks = bind (getValue 'stdTokenPacks')\n  \\stds . setValue 'stdTokenPacks' (append stds morePacks)","range":[1,0]}},"arg":{"_type":"lambda","varName":"morePacks","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,29]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,35]},"arg":{"_type":"lit","value":"stdTokenPacks","range":[1,44]}}},"arg":{"_type":"lambda","varName":"stds","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,71]},"arg":{"_type":"lit","value":"stdTokenPacks","range":[1,80]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,97]},"arg":{"_type":"ref","varName":"stds","range":[1,104]}},"arg":{"_type":"ref","varName":"morePacks","range":[1,109]}}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"addParseFilter","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"addParseFilter filt = bind (getValue 'parseFilters')\n  \\filters . setValue 'parseFilters' (append filters (cons filt nil))","range":[1,0]}},"arg":{"_type":"lambda","varName":"filt","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,22]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,28]},"arg":{"_type":"lit","value":"parseFilters","range":[1,37]}}},"arg":{"_type":"lambda","varName":"filters","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,66]},"arg":{"_type":"lit","value":"parseFilters","range":[1,75]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"append","range":[1,91]},"arg":{"_type":"ref","varName":"filters","range":[1,98]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,107]},"arg":{"_type":"ref","varName":"filt","range":[1,112]}},"arg":{"_type":"ref","varName":"nil","range":[1,117]}}}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"d","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"d label value expr = log (strCat (cons label (cons value nil))) expr","range":[1,0]}},"arg":{"_type":"lambda","varName":"label","body":{"_type":"lambda","varName":"value","body":{"_type":"lambda","varName":"expr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"log","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strCat","range":[1,26]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,34]},"arg":{"_type":"ref","varName":"label","range":[1,39]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,46]},"arg":{"_type":"ref","varName":"value","range":[1,51]}},"arg":{"_type":"ref","varName":"nil","range":[1,57]}}}}},"arg":{"_type":"ref","varName":"expr","range":[1,64]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"dd","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"dd label arg = d label arg arg","range":[1,0]}},"arg":{"_type":"lambda","varName":"label","body":{"_type":"lambda","varName":"arg","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"d","range":[1,15]},"arg":{"_type":"ref","varName":"label","range":[1,17]}},"arg":{"_type":"ref","varName":"arg","range":[1,23]}},"arg":{"_type":"ref","varName":"arg","range":[1,27]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"macroDefs","range":[1,9]}},"arg":{"_type":"ref","varName":"nil","range":[1,21]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"requiredFiles","range":[1,9]}},"arg":{"_type":"ref","varName":"nil","range":[1,25]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"tokenPacks","range":[1,9]}},"arg":{"_type":"ref","varName":"nil","range":[1,22]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"activeTokenPacks","range":[1,9]}},"arg":{"_type":"ref","varName":"nil","range":[1,28]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"stdTokenPacks","range":[1,9]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,26]},"arg":{"_type":"lit","value":"std","range":[1,31]}},"arg":{"_type":"ref","varName":"nil","range":[1,37]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defTokenPack","range":[1,0]},"arg":{"_type":"lit","value":"std","range":[1,13]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,20]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,26]},"arg":{"_type":"lit","value":".","range":[1,31]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,36]},"arg":{"_type":"lit","value":"\\","range":[1,41]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,47]},"arg":{"_type":"lit","value":"\\\\","range":[1,52]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,60]},"arg":{"_type":"lit","value":"\\@","range":[1,65]}},"arg":{"_type":"ref","varName":"nil","range":[1,71]}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,80]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"acons","range":[1,86]},"arg":{"_type":"lit","value":"(","range":[1,92]}},"arg":{"_type":"lit","value":")","range":[1,96]}},"arg":{"_type":"ref","varName":"nil","range":[1,100]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,106]},"arg":{"_type":"ref","varName":"nil","range":[1,111]}},"arg":{"_type":"ref","varName":"nil","range":[1,115]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"ref","varName":"resetStdTokenPacks","range":[1,0]}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"ref","varName":"newGen","range":[1,0]}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"[","range":[1,14]}},"arg":{"_type":"lit","value":"]","range":[1,18]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"ref","varName":"addToken","range":[1,0]},"arg":{"_type":"lit","value":"|","range":[1,9]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"listifyOp","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"listifyOp op list = list\r\n  \\h t D . isTokenString h '|'\r\n    cons t nil\r\n    cons (cons op (cons h (listifyOp op t))) nil\r\n  cons 'nil' nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"op","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,20]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,37]},"arg":{"_type":"ref","varName":"h","range":[1,51]}},"arg":{"_type":"lit","value":"|","range":[1,53]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,62]},"arg":{"_type":"ref","varName":"t","range":[1,67]}},"arg":{"_type":"ref","varName":"nil","range":[1,69]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,78]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,84]},"arg":{"_type":"ref","varName":"op","range":[1,89]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,93]},"arg":{"_type":"ref","varName":"h","range":[1,98]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"listifyOp","range":[1,101]},"arg":{"_type":"ref","varName":"op","range":[1,111]}},"arg":{"_type":"ref","varName":"t","range":[1,114]}}}}},"arg":{"_type":"ref","varName":"nil","range":[1,119]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,126]},"arg":{"_type":"lit","value":"nil","range":[1,131]}},"arg":{"_type":"ref","varName":"nil","range":[1,137]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"listify","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"listify list = listifyOp 'cons' list","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"listifyOp","range":[1,15]},"arg":{"_type":"lit","value":"cons","range":[1,25]}},"arg":{"_type":"ref","varName":"list","range":[1,32]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"[","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,21]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"ref","varName":"listify","range":[1,33]},"arg":{"_type":"ref","varName":"h","range":[1,41]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"listFilter","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"listFilter code = bind (getValue 'listMacros')\r\n  \\listMacros . filterApplies code \\list . list \\h t .\r\n    and (isToken h) (contains listMacros (tokenString h))\r\n      listFilterTail list\r\n      list","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,18]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,24]},"arg":{"_type":"lit","value":"listMacros","range":[1,33]}}},"arg":{"_type":"lambda","varName":"listMacros","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,64]},"arg":{"_type":"ref","varName":"code","range":[1,78]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,91]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,108]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,113]},"arg":{"_type":"ref","varName":"h","range":[1,121]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,125]},"arg":{"_type":"ref","varName":"listMacros","range":[1,134]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,146]},"arg":{"_type":"ref","varName":"h","range":[1,158]}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"listFilterTail","range":[1,169]},"arg":{"_type":"ref","varName":"list","range":[1,184]}}},"arg":{"_type":"ref","varName":"list","range":[1,196]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"listFilterTail","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"listFilterTail list = list\r\n  \\h t D . isTokenString h '|'\r\n    > (length t) 2\r\n      cons h (cons (removeLast t) (cons (last t) nil))\r\n      list\r\n    cons h (listFilterTail t)\r\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,22]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,39]},"arg":{"_type":"ref","varName":"h","range":[1,53]}},"arg":{"_type":"lit","value":"|","range":[1,55]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,64]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"length","range":[1,67]},"arg":{"_type":"ref","varName":"t","range":[1,74]}}},"arg":{"_type":"lit","value":2,"range":[1,77]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,86]},"arg":{"_type":"ref","varName":"h","range":[1,91]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,94]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"removeLast","range":[1,100]},"arg":{"_type":"ref","varName":"t","range":[1,111]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,115]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"last","range":[1,121]},"arg":{"_type":"ref","varName":"t","range":[1,126]}}},"arg":{"_type":"ref","varName":"nil","range":[1,129]}}}}},"arg":{"_type":"ref","varName":"list","range":[1,142]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,152]},"arg":{"_type":"ref","varName":"h","range":[1,157]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"listFilterTail","range":[1,160]},"arg":{"_type":"ref","varName":"t","range":[1,175]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,181]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filterApplies","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filterApplies code func = isParens code\r\n  code \\start end contents . parens start end (filterApplies contents func)\r\n  isCons code\r\n    \\\\\r\n      filtered = filterApplyElements code func\r\n      .\r\n      and (isCons filtered) (isBlockStart (head filtered))\r\n        filtered\r\n        func filtered\r\n    code","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,26]},"arg":{"_type":"ref","varName":"code","range":[1,35]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"code","range":[1,43]},"arg":{"_type":"lambda","varName":"start","body":{"_type":"lambda","varName":"end","body":{"_type":"lambda","varName":"contents","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parens","range":[1,70]},"arg":{"_type":"ref","varName":"start","range":[1,77]}},"arg":{"_type":"ref","varName":"end","range":[1,83]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,88]},"arg":{"_type":"ref","varName":"contents","range":[1,102]}},"arg":{"_type":"ref","varName":"func","range":[1,111]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,120]},"arg":{"_type":"ref","varName":"code","range":[1,127]}},"arg":{"_type":"let","varName":"filtered","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplyElements","range":[1,158]},"arg":{"_type":"ref","varName":"code","range":[1,178]}},"arg":{"_type":"ref","varName":"func","range":[1,183]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,204]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,209]},"arg":{"_type":"ref","varName":"filtered","range":[1,216]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isBlockStart","range":[1,227]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,241]},"arg":{"_type":"ref","varName":"filtered","range":[1,246]}}}},"arg":{"_type":"ref","varName":"filtered","range":[1,266]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"func","range":[1,284]},"arg":{"_type":"ref","varName":"filtered","range":[1,289]}}},"range":[1,0]}},"arg":{"_type":"ref","varName":"code","range":[1,303]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filterApplyElements","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filterApplyElements code func = code\r\n  \\h t D . isBlockStart h\r\n    cons h (filterBlock h t func)\r\n    cons (filterApplies h func)\r\n      and (isCons t) (isBlockStart (head t))\r\n        cons (filterApplyElements t func) nil\r\n        filterApplyElements t func\r\n  nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"code","range":[1,32]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isBlockStart","range":[1,49]},"arg":{"_type":"ref","varName":"h","range":[1,62]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,69]},"arg":{"_type":"ref","varName":"h","range":[1,74]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterBlock","range":[1,77]},"arg":{"_type":"ref","varName":"h","range":[1,89]}},"arg":{"_type":"ref","varName":"t","range":[1,91]}},"arg":{"_type":"ref","varName":"func","range":[1,93]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,104]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,110]},"arg":{"_type":"ref","varName":"h","range":[1,124]}},"arg":{"_type":"ref","varName":"func","range":[1,126]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,139]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,144]},"arg":{"_type":"ref","varName":"t","range":[1,151]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isBlockStart","range":[1,155]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,169]},"arg":{"_type":"ref","varName":"t","range":[1,174]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,187]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplyElements","range":[1,193]},"arg":{"_type":"ref","varName":"t","range":[1,213]}},"arg":{"_type":"ref","varName":"func","range":[1,215]}}},"arg":{"_type":"ref","varName":"nil","range":[1,221]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplyElements","range":[1,234]},"arg":{"_type":"ref","varName":"t","range":[1,254]}},"arg":{"_type":"ref","varName":"func","range":[1,256]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"nil","range":[1,264]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filterBlock","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"filterBlock type code func = isTokenString type '\\\\'\r\n  filterLambda code func\r\n  filterLet code func","range":[1,0]}},"arg":{"_type":"lambda","varName":"type","body":{"_type":"lambda","varName":"code","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,29]},"arg":{"_type":"ref","varName":"type","range":[1,43]}},"arg":{"_type":"lit","value":"\\","range":[1,48]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLambda","range":[1,56]},"arg":{"_type":"ref","varName":"code","range":[1,69]}},"arg":{"_type":"ref","varName":"func","range":[1,74]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLet","range":[1,82]},"arg":{"_type":"ref","varName":"code","range":[1,92]}},"arg":{"_type":"ref","varName":"func","range":[1,97]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filterLet","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filterLet code func = code \\h t . isTokenString h '.'\r\n  cons h (filterApplies t func)\r\n  cons (filterLetBinding h func)\r\n    filterLet t func","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"ref","varName":"code","range":[1,22]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,34]},"arg":{"_type":"ref","varName":"h","range":[1,48]}},"arg":{"_type":"lit","value":".","range":[1,50]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,57]},"arg":{"_type":"ref","varName":"h","range":[1,62]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,65]},"arg":{"_type":"ref","varName":"t","range":[1,79]}},"arg":{"_type":"ref","varName":"func","range":[1,81]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,90]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLetBinding","range":[1,96]},"arg":{"_type":"ref","varName":"h","range":[1,113]}},"arg":{"_type":"ref","varName":"func","range":[1,115]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLet","range":[1,126]},"arg":{"_type":"ref","varName":"t","range":[1,136]}},"arg":{"_type":"ref","varName":"func","range":[1,138]}}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filterLetBinding","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filterLetBinding code func = isParens code\r\n  setParens code \\contents . filterLetBinding contents func\r\n  isCons code\r\n    code \\h t . cons h\r\n      isTokenString h '='\r\n        filterApplies t func\r\n        filterLetBinding t func\r\n    code","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,29]},"arg":{"_type":"ref","varName":"code","range":[1,38]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setParens","range":[1,46]},"arg":{"_type":"ref","varName":"code","range":[1,56]}},"arg":{"_type":"lambda","varName":"contents","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLetBinding","range":[1,73]},"arg":{"_type":"ref","varName":"contents","range":[1,90]}},"arg":{"_type":"ref","varName":"func","range":[1,99]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,107]},"arg":{"_type":"ref","varName":"code","range":[1,114]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"code","range":[1,124]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,136]},"arg":{"_type":"ref","varName":"h","range":[1,141]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,150]},"arg":{"_type":"ref","varName":"h","range":[1,164]}},"arg":{"_type":"lit","value":"=","range":[1,166]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,179]},"arg":{"_type":"ref","varName":"t","range":[1,193]}},"arg":{"_type":"ref","varName":"func","range":[1,195]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLetBinding","range":[1,209]},"arg":{"_type":"ref","varName":"t","range":[1,226]}},"arg":{"_type":"ref","varName":"func","range":[1,228]}}}},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"ref","varName":"code","range":[1,238]}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"filterLambda","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"filterLambda code func = code \\h t . cons h\r\n  isTokenString h '.'\r\n    filterApplies t func\r\n    filterLambda t func","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"lambda","varName":"func","body":{"_type":"apply","func":{"_type":"ref","varName":"code","range":[1,25]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,37]},"arg":{"_type":"ref","varName":"h","range":[1,42]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,47]},"arg":{"_type":"ref","varName":"h","range":[1,61]}},"arg":{"_type":"lit","value":".","range":[1,63]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,72]},"arg":{"_type":"ref","varName":"t","range":[1,86]}},"arg":{"_type":"ref","varName":"func","range":[1,88]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterLambda","range":[1,98]},"arg":{"_type":"ref","varName":"t","range":[1,111]}},"arg":{"_type":"ref","varName":"func","range":[1,113]}}}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"listMacros","range":[1,9]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,23]},"arg":{"_type":"lit","value":"[","range":[1,23]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,27]},"arg":{"_type":"lit","value":"{","range":[1,27]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,31]},"arg":{"_type":"lit","value":"hamt{","range":[1,31]}},"arg":{"_type":"ref","varName":"nil","range":[1,39]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"ref","varName":"addParseFilter","range":[1,0]},"arg":{"_type":"ref","varName":"listFilter","range":[1,15]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"{","range":[1,14]}},"arg":{"_type":"lit","value":"}","range":[1,18]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"{","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,21]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"listifyOp","range":[1,33]},"arg":{"_type":"lit","value":"aconsPair","range":[1,43]}},"arg":{"_type":"ref","varName":"h","range":[1,55]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"hamt{","range":[1,14]}},"arg":{"_type":"lit","value":"}","range":[1,22]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"hamt{","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,25]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"ref","varName":"hamtify","range":[1,37]},"arg":{"_type":"ref","varName":"h","range":[1,45]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"hamtWithPair","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"hamtWithPair pair t = hamtWith (head pair) (tail pair) t","range":[1,0]}},"arg":{"_type":"lambda","varName":"pair","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"hamtWith","range":[1,22]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,32]},"arg":{"_type":"ref","varName":"pair","range":[1,37]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,44]},"arg":{"_type":"ref","varName":"pair","range":[1,49]}}},"arg":{"_type":"ref","varName":"t","range":[1,55]}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"hamtify","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"hamtify list = list\r\n  \\h t D . isTokenString h '|'\r\n    cons t nil\r\n    and (isCons h) (or (isTokenString (head h) 'cons') (isTokenString (head h) ':'))\r\n      [['hamtWith' (head (tail h)) (head (tail (tail h))) | hamtify t]]\r\n      [['hamtWithPair' h | hamtify t]]\r\n  ['hamt']","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,15]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,32]},"arg":{"_type":"ref","varName":"h","range":[1,46]}},"arg":{"_type":"lit","value":"|","range":[1,48]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,57]},"arg":{"_type":"ref","varName":"t","range":[1,62]}},"arg":{"_type":"ref","varName":"nil","range":[1,64]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,73]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,78]},"arg":{"_type":"ref","varName":"h","range":[1,85]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,89]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,93]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,108]},"arg":{"_type":"ref","varName":"h","range":[1,113]}}},"arg":{"_type":"lit","value":"cons","range":[1,116]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,125]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,140]},"arg":{"_type":"ref","varName":"h","range":[1,145]}}},"arg":{"_type":"lit","value":":","range":[1,148]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,163]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,163]},"arg":{"_type":"lit","value":"hamtWith","range":[1,163]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,174]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,175]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,181]},"arg":{"_type":"ref","varName":"h","range":[1,186]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,190]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,191]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,197]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,203]},"arg":{"_type":"ref","varName":"h","range":[1,208]}}}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"hamtify","range":[1,215]},"arg":{"_type":"ref","varName":"t","range":[1,223]}}}}}},"arg":{"_type":"ref","varName":"nil","range":[1,225]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,236]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,236]},"arg":{"_type":"lit","value":"hamtWithPair","range":[1,236]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,251]},"arg":{"_type":"ref","varName":"h","range":[1,251]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"hamtify","range":[1,255]},"arg":{"_type":"ref","varName":"t","range":[1,263]}}}}},"arg":{"_type":"ref","varName":"nil","range":[1,265]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,271]},"arg":{"_type":"lit","value":"hamt","range":[1,271]}},"arg":{"_type":"ref","varName":"nil","range":[1,278]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defTokenPack","range":[1,0]},"arg":{"_type":"lit","value":"list","range":[1,13]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,21]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,26]},"arg":{"_type":"lit","value":"|","range":[1,26]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,30]},"arg":{"_type":"lit","value":"=","range":[1,30]}},"arg":{"_type":"ref","varName":"nil","range":[1,34]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,100]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,106]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,106]},"arg":{"_type":"lit","value":"{","range":[1,106]}},"arg":{"_type":"lit","value":"}","range":[1,112]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,118]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,118]},"arg":{"_type":"lit","value":"hamt{","range":[1,118]}},"arg":{"_type":"lit","value":"}","range":[1,128]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,134]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,134]},"arg":{"_type":"lit","value":"[","range":[1,134]}},"arg":{"_type":"lit","value":"]","range":[1,140]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,146]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,146]},"arg":{"_type":"lit","value":"or[","range":[1,146]}},"arg":{"_type":"lit","value":"]","range":[1,154]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,160]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,160]},"arg":{"_type":"lit","value":"and[","range":[1,160]}},"arg":{"_type":"lit","value":"]","range":[1,169]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,175]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,175]},"arg":{"_type":"lit","value":"concat[","range":[1,175]}},"arg":{"_type":"lit","value":"]","range":[1,187]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"aconsPair","range":[1,193]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,193]},"arg":{"_type":"lit","value":"concatFlat[","range":[1,193]}},"arg":{"_type":"lit","value":"]","range":[1,209]}}},"arg":{"_type":"ref","varName":"nil","range":[1,213]}}}}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,214]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,219]},"arg":{"_type":"ref","varName":"listFilter","range":[1,219]}},"arg":{"_type":"ref","varName":"nil","range":[1,230]}}},"arg":{"_type":"ref","varName":"nil","range":[1,231]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"or[","range":[1,14]}},"arg":{"_type":"lit","value":"]","range":[1,20]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"and[","range":[1,14]}},"arg":{"_type":"lit","value":"]","range":[1,21]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"concat[","range":[1,14]}},"arg":{"_type":"lit","value":"]","range":[1,24]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"addTokenGroup","range":[1,0]},"arg":{"_type":"lit","value":"concatFlat[","range":[1,14]}},"arg":{"_type":"lit","value":"]","range":[1,28]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"listMacroFoldOp","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"listMacroFoldOp op emptyCase list = list \\h t . foldr\r\n    \\case result . [op case result]\r\n    emptyCase\r\n    h","range":[1,0]}},"arg":{"_type":"lambda","varName":"op","body":{"_type":"lambda","varName":"emptyCase","body":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,36]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"foldr","range":[1,48]},"arg":{"_type":"lambda","varName":"case","body":{"_type":"lambda","varName":"result","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,75]},"arg":{"_type":"ref","varName":"op","range":[1,75]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,78]},"arg":{"_type":"ref","varName":"case","range":[1,78]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,83]},"arg":{"_type":"ref","varName":"result","range":[1,83]}},"arg":{"_type":"ref","varName":"nil","range":[1,90]}}}},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"ref","varName":"emptyCase","range":[1,96]}},"arg":{"_type":"ref","varName":"h","range":[1,111]}},"range":[1,0]},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"or[","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"listMacroFoldOp","range":[1,23]},"arg":{"_type":"lit","value":"or","range":[1,39]}},"arg":{"_type":"lit","value":"false","range":[1,44]}},"arg":{"_type":"ref","varName":"list","range":[1,52]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"and[","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"listMacroFoldOp","range":[1,24]},"arg":{"_type":"lit","value":"and","range":[1,40]}},"arg":{"_type":"lit","value":"true","range":[1,46]}},"arg":{"_type":"ref","varName":"list","range":[1,53]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"concat[","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,28]},"arg":{"_type":"lit","value":"strCat","range":[1,28]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,38]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,38]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"listify","range":[1,39]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,48]},"arg":{"_type":"ref","varName":"list","range":[1,53]}}}},"arg":{"_type":"ref","varName":"nil","range":[1,60]}}},"arg":{"_type":"ref","varName":"nil","range":[1,64]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"concatFlat[","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,32]},"arg":{"_type":"lit","value":"strCat","range":[1,32]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,42]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,42]},"arg":{"_type":"lit","value":"flatten","range":[1,42]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,53]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,53]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"listify","range":[1,54]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,63]},"arg":{"_type":"ref","varName":"list","range":[1,68]}}}},"arg":{"_type":"ref","varName":"nil","range":[1,75]}}},"arg":{"_type":"ref","varName":"nil","range":[1,79]}}}},"arg":{"_type":"ref","varName":"nil","range":[1,83]}}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,0]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,6]},"arg":{"_type":"lit","value":"listMacros","range":[1,15]}}},"arg":{"_type":"lambda","varName":"lm","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,39]},"arg":{"_type":"lit","value":"concat[","range":[1,39]}},"arg":{"_type":"ref","varName":"lm","range":[1,51]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"infix","range":[1,0]}},"arg":{"_type":"lit","value":1,"range":[1,0]}},"arg":{"_type":"lit","value":"infix code = bind (getValue 'infixPrecedence')\r\n  \\prec . bind (getValue 'infixRightAssociative')\r\n    \\right . bind (getValue 'tokenGroups')\r\n      \\groups . filterApplies\r\n        code\r\n        \\expr . infixRearrange prec right (map (\\cell . tail cell) groups) expr","range":[1,0]}},"arg":{"_type":"lambda","varName":"code","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,13]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,19]},"arg":{"_type":"lit","value":"infixPrecedence","range":[1,28]}}},"arg":{"_type":"lambda","varName":"prec","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,58]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,64]},"arg":{"_type":"lit","value":"infixRightAssociative","range":[1,73]}}},"arg":{"_type":"lambda","varName":"right","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"bind","range":[1,112]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"getValue","range":[1,118]},"arg":{"_type":"lit","value":"tokenGroups","range":[1,127]}}},"arg":{"_type":"lambda","varName":"groups","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"filterApplies","range":[1,159]},"arg":{"_type":"ref","varName":"code","range":[1,182]}},"arg":{"_type":"lambda","varName":"expr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"infixRearrange","range":[1,204]},"arg":{"_type":"ref","varName":"prec","range":[1,219]}},"arg":{"_type":"ref","varName":"right","range":[1,224]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"map","range":[1,231]},"arg":{"_type":"lambda","varName":"cell","body":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,244]},"arg":{"_type":"ref","varName":"cell","range":[1,249]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"groups","range":[1,255]}}},"arg":{"_type":"ref","varName":"expr","range":[1,263]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"infixRearrange","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"infixRearrange prec right closes list = \\\\\r\n  len = length list\r\n  head1 = head list\r\n  tail1 = tail list\r\n  head2 = head tail1\r\n  tail2 = tail tail1\r\n  head3 = head tail2\r\n  opPrec = getPrec prec head2\r\n  .\r\n  < len 2\r\n    list\r\n    isInfix opPrec head1 head2 len\r\n      or (== len 2) (not (isInfixArg closes head3))\r\n        [[head2 head1] | tail2]\r\n        infixRearrange prec right closes (absorbArgument opPrec prec right closes head1 head2 tail2 head3 (- len 2))\r\n      [head1 | infixRearrange prec right closes tail1]","range":[1,0]}},"arg":{"_type":"lambda","varName":"prec","body":{"_type":"lambda","varName":"right","body":{"_type":"lambda","varName":"closes","body":{"_type":"lambda","varName":"list","body":{"_type":"let","varName":"len","value":{"_type":"apply","func":{"_type":"ref","varName":"length","range":[1,52]},"arg":{"_type":"ref","varName":"list","range":[1,59]}},"body":{"_type":"let","varName":"head1","value":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,75]},"arg":{"_type":"ref","varName":"list","range":[1,80]}},"body":{"_type":"let","varName":"tail1","value":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,96]},"arg":{"_type":"ref","varName":"list","range":[1,101]}},"body":{"_type":"let","varName":"head2","value":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,117]},"arg":{"_type":"ref","varName":"tail1","range":[1,122]}},"body":{"_type":"let","varName":"tail2","value":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,139]},"arg":{"_type":"ref","varName":"tail1","range":[1,144]}},"body":{"_type":"let","varName":"head3","value":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,161]},"arg":{"_type":"ref","varName":"tail2","range":[1,166]}},"body":{"_type":"let","varName":"opPrec","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getPrec","range":[1,184]},"arg":{"_type":"ref","varName":"prec","range":[1,192]}},"arg":{"_type":"ref","varName":"head2","range":[1,197]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"<","range":[1,211]},"arg":{"_type":"ref","varName":"len","range":[1,213]}},"arg":{"_type":"lit","value":2,"range":[1,217]}},"arg":{"_type":"ref","varName":"list","range":[1,224]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isInfix","range":[1,234]},"arg":{"_type":"ref","varName":"opPrec","range":[1,242]}},"arg":{"_type":"ref","varName":"head1","range":[1,249]}},"arg":{"_type":"ref","varName":"head2","range":[1,255]}},"arg":{"_type":"ref","varName":"len","range":[1,261]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,272]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,276]},"arg":{"_type":"ref","varName":"len","range":[1,279]}},"arg":{"_type":"lit","value":2,"range":[1,283]}}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"not","range":[1,287]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isInfixArg","range":[1,292]},"arg":{"_type":"ref","varName":"closes","range":[1,303]}},"arg":{"_type":"ref","varName":"head3","range":[1,310]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,329]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,329]},"arg":{"_type":"ref","varName":"head2","range":[1,329]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,335]},"arg":{"_type":"ref","varName":"head1","range":[1,335]}},"arg":{"_type":"ref","varName":"nil","range":[1,341]}}}},"arg":{"_type":"ref","varName":"tail2","range":[1,344]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"infixRearrange","range":[1,360]},"arg":{"_type":"ref","varName":"prec","range":[1,375]}},"arg":{"_type":"ref","varName":"right","range":[1,380]}},"arg":{"_type":"ref","varName":"closes","range":[1,386]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"absorbArgument","range":[1,394]},"arg":{"_type":"ref","varName":"opPrec","range":[1,409]}},"arg":{"_type":"ref","varName":"prec","range":[1,416]}},"arg":{"_type":"ref","varName":"right","range":[1,421]}},"arg":{"_type":"ref","varName":"closes","range":[1,427]}},"arg":{"_type":"ref","varName":"head1","range":[1,434]}},"arg":{"_type":"ref","varName":"head2","range":[1,440]}},"arg":{"_type":"ref","varName":"tail2","range":[1,446]}},"arg":{"_type":"ref","varName":"head3","range":[1,452]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"-","range":[1,459]},"arg":{"_type":"ref","varName":"len","range":[1,461]}},"arg":{"_type":"lit","value":2,"range":[1,465]}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,477]},"arg":{"_type":"ref","varName":"head1","range":[1,477]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"infixRearrange","range":[1,485]},"arg":{"_type":"ref","varName":"prec","range":[1,500]}},"arg":{"_type":"ref","varName":"right","range":[1,505]}},"arg":{"_type":"ref","varName":"closes","range":[1,511]}},"arg":{"_type":"ref","varName":"tail1","range":[1,518]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"absorbArgument","range":[1,0]}},"arg":{"_type":"lit","value":9,"range":[1,0]}},"arg":{"_type":"lit","value":"absorbArgument opPrec prec right closes head1 head2 tail2 head3 len = \\\\\r\n  tail3 = tail tail2\r\n  head4 = head tail3\r\n  tail4 = tail tail3\r\n  head5 = head tail4\r\n  .\r\n  infixShouldEatNext opPrec prec (contains right (strTokenString head2)) head3 head4 head5 closes len\r\n    [head1 head2 | absorbArgument (getPrec prec head4) prec right closes head3 head4 tail4 head5 (- len 2)]\r\n    [[head2 head1 head3] | tail3]","range":[1,0]}},"arg":{"_type":"lambda","varName":"opPrec","body":{"_type":"lambda","varName":"prec","body":{"_type":"lambda","varName":"right","body":{"_type":"lambda","varName":"closes","body":{"_type":"lambda","varName":"head1","body":{"_type":"lambda","varName":"head2","body":{"_type":"lambda","varName":"tail2","body":{"_type":"lambda","varName":"head3","body":{"_type":"lambda","varName":"len","body":{"_type":"let","varName":"tail3","value":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,84]},"arg":{"_type":"ref","varName":"tail2","range":[1,89]}},"body":{"_type":"let","varName":"head4","value":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,106]},"arg":{"_type":"ref","varName":"tail3","range":[1,111]}},"body":{"_type":"let","varName":"tail4","value":{"_type":"apply","func":{"_type":"ref","varName":"tail","range":[1,128]},"arg":{"_type":"ref","varName":"tail3","range":[1,133]}},"body":{"_type":"let","varName":"head5","value":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,150]},"arg":{"_type":"ref","varName":"tail4","range":[1,155]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"infixShouldEatNext","range":[1,169]},"arg":{"_type":"ref","varName":"opPrec","range":[1,188]}},"arg":{"_type":"ref","varName":"prec","range":[1,195]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,201]},"arg":{"_type":"ref","varName":"right","range":[1,210]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"strTokenString","range":[1,217]},"arg":{"_type":"ref","varName":"head2","range":[1,232]}}}},"arg":{"_type":"ref","varName":"head3","range":[1,240]}},"arg":{"_type":"ref","varName":"head4","range":[1,246]}},"arg":{"_type":"ref","varName":"head5","range":[1,252]}},"arg":{"_type":"ref","varName":"closes","range":[1,258]}},"arg":{"_type":"ref","varName":"len","range":[1,265]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,275]},"arg":{"_type":"ref","varName":"head1","range":[1,275]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,281]},"arg":{"_type":"ref","varName":"head2","range":[1,281]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"absorbArgument","range":[1,289]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getPrec","range":[1,305]},"arg":{"_type":"ref","varName":"prec","range":[1,313]}},"arg":{"_type":"ref","varName":"head4","range":[1,318]}}},"arg":{"_type":"ref","varName":"prec","range":[1,325]}},"arg":{"_type":"ref","varName":"right","range":[1,330]}},"arg":{"_type":"ref","varName":"closes","range":[1,336]}},"arg":{"_type":"ref","varName":"head3","range":[1,343]}},"arg":{"_type":"ref","varName":"head4","range":[1,349]}},"arg":{"_type":"ref","varName":"tail4","range":[1,355]}},"arg":{"_type":"ref","varName":"head5","range":[1,361]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"-","range":[1,368]},"arg":{"_type":"ref","varName":"len","range":[1,370]}},"arg":{"_type":"lit","value":2,"range":[1,374]}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,385]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,385]},"arg":{"_type":"ref","varName":"head2","range":[1,385]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,391]},"arg":{"_type":"ref","varName":"head1","range":[1,391]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,397]},"arg":{"_type":"ref","varName":"head3","range":[1,397]}},"arg":{"_type":"ref","varName":"nil","range":[1,403]}}}}},"arg":{"_type":"ref","varName":"tail3","range":[1,406]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isInfixArg","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"isInfixArg closes item = or[\r\n  isParens item\r\n  isCons item\r\n  and[\r\n    isToken item\r\n    not (contains closes (tokenString item))\r\n    not (isBlockStart item)]]","range":[1,0]}},"arg":{"_type":"lambda","varName":"closes","body":{"_type":"lambda","varName":"item","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,28]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isParens","range":[1,32]},"arg":{"_type":"ref","varName":"item","range":[1,41]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,45]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,49]},"arg":{"_type":"ref","varName":"item","range":[1,56]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,60]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,68]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,74]},"arg":{"_type":"ref","varName":"item","range":[1,82]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,86]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"not","range":[1,92]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,97]},"arg":{"_type":"ref","varName":"closes","range":[1,106]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,114]},"arg":{"_type":"ref","varName":"item","range":[1,126]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,132]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"not","range":[1,138]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"isBlockStart","range":[1,143]},"arg":{"_type":"ref","varName":"item","range":[1,156]}}}},"arg":{"_type":"ref","varName":"true","range":[1,162]}}}}},"arg":{"_type":"ref","varName":"false","range":[1,163]}}}},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"isInfix","range":[1,0]}},"arg":{"_type":"lit","value":4,"range":[1,0]}},"arg":{"_type":"lit","value":"isInfix opPrec head1 head2 len = and[\r\n  > len 1\r\n  > opPrec -1\r\n  isInfixArg nil head1]","range":[1,0]}},"arg":{"_type":"lambda","varName":"opPrec","body":{"_type":"lambda","varName":"head1","body":{"_type":"lambda","varName":"head2","body":{"_type":"lambda","varName":"len","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,37]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,41]},"arg":{"_type":"ref","varName":"len","range":[1,43]}},"arg":{"_type":"lit","value":1,"range":[1,47]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,48]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,52]},"arg":{"_type":"ref","varName":"opPrec","range":[1,54]}},"arg":{"_type":"lit","value":-1,"range":[1,61]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,63]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isInfixArg","range":[1,67]},"arg":{"_type":"ref","varName":"nil","range":[1,78]}},"arg":{"_type":"ref","varName":"head1","range":[1,82]}}},"arg":{"_type":"ref","varName":"true","range":[1,88]}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"getPrec","range":[1,0]}},"arg":{"_type":"lit","value":2,"range":[1,0]}},"arg":{"_type":"lit","value":"getPrec prec token = \\\\\r\n  str = tokenString token\r\n  .\r\n  isToken token\r\n    findIndex (\\level . contains level str) prec\r\n    -1","range":[1,0]}},"arg":{"_type":"lambda","varName":"prec","body":{"_type":"lambda","varName":"token","body":{"_type":"let","varName":"str","value":{"_type":"apply","func":{"_type":"ref","varName":"tokenString","range":[1,33]},"arg":{"_type":"ref","varName":"token","range":[1,45]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isToken","range":[1,59]},"arg":{"_type":"ref","varName":"token","range":[1,67]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"findIndex","range":[1,78]},"arg":{"_type":"lambda","varName":"level","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"contains","range":[1,98]},"arg":{"_type":"ref","varName":"level","range":[1,107]}},"arg":{"_type":"ref","varName":"str","range":[1,113]}},"range":[1,0]}},"arg":{"_type":"ref","varName":"prec","range":[1,118]}}},"arg":{"_type":"lit","value":-1,"range":[1,128]}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"infixShouldEatNext","range":[1,0]}},"arg":{"_type":"lit","value":8,"range":[1,0]}},"arg":{"_type":"lit","value":"infixShouldEatNext opPrec prec isRight curArg nextOp nextArg closes len = \\\\\r\n  nextPrec = getPrec prec nextOp\r\n  .\r\n  and[\r\n    > len 2\r\n    isInfix nextPrec curArg nextOp len\r\n    or (> opPrec nextPrec) (and (== opPrec nextPrec) isRight)\r\n    isInfixArg closes nextArg]","range":[1,0]}},"arg":{"_type":"lambda","varName":"opPrec","body":{"_type":"lambda","varName":"prec","body":{"_type":"lambda","varName":"isRight","body":{"_type":"lambda","varName":"curArg","body":{"_type":"lambda","varName":"nextOp","body":{"_type":"lambda","varName":"nextArg","body":{"_type":"lambda","varName":"closes","body":{"_type":"lambda","varName":"len","body":{"_type":"let","varName":"nextPrec","value":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"getPrec","range":[1,91]},"arg":{"_type":"ref","varName":"prec","range":[1,99]}},"arg":{"_type":"ref","varName":"nextOp","range":[1,104]}},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,123]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,129]},"arg":{"_type":"ref","varName":"len","range":[1,131]}},"arg":{"_type":"lit","value":2,"range":[1,135]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,136]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isInfix","range":[1,142]},"arg":{"_type":"ref","varName":"nextPrec","range":[1,150]}},"arg":{"_type":"ref","varName":"curArg","range":[1,159]}},"arg":{"_type":"ref","varName":"nextOp","range":[1,166]}},"arg":{"_type":"ref","varName":"len","range":[1,173]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,176]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"or","range":[1,182]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":">","range":[1,186]},"arg":{"_type":"ref","varName":"opPrec","range":[1,188]}},"arg":{"_type":"ref","varName":"nextPrec","range":[1,195]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,206]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"==","range":[1,211]},"arg":{"_type":"ref","varName":"opPrec","range":[1,214]}},"arg":{"_type":"ref","varName":"nextPrec","range":[1,221]}}},"arg":{"_type":"ref","varName":"isRight","range":[1,231]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"and","range":[1,239]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isInfixArg","range":[1,245]},"arg":{"_type":"ref","varName":"closes","range":[1,256]}},"arg":{"_type":"ref","varName":"nextArg","range":[1,263]}}},"arg":{"_type":"ref","varName":"true","range":[1,271]}}}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":":","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,22]},"arg":{"_type":"lit","value":"cons","range":[1,22]}},"arg":{"_type":"ref","varName":"list","range":[1,31]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"iprec","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"iprec = [['*' '/' '%'] ['+' '-'] [':'] ['<' '>' '<=' '>='] ['==' '!=']]","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,10]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,10]},"arg":{"_type":"lit","value":"*","range":[1,10]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,14]},"arg":{"_type":"lit","value":"/","range":[1,14]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,18]},"arg":{"_type":"lit","value":"%","range":[1,18]}},"arg":{"_type":"ref","varName":"nil","range":[1,22]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,24]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,24]},"arg":{"_type":"lit","value":"+","range":[1,24]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,28]},"arg":{"_type":"lit","value":"-","range":[1,28]}},"arg":{"_type":"ref","varName":"nil","range":[1,32]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,34]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,34]},"arg":{"_type":"lit","value":":","range":[1,34]}},"arg":{"_type":"ref","varName":"nil","range":[1,38]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,40]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,40]},"arg":{"_type":"lit","value":"<","range":[1,40]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,44]},"arg":{"_type":"lit","value":">","range":[1,44]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,48]},"arg":{"_type":"lit","value":"<=","range":[1,48]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,53]},"arg":{"_type":"lit","value":">=","range":[1,53]}},"arg":{"_type":"ref","varName":"nil","range":[1,58]}}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,60]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,60]},"arg":{"_type":"lit","value":"==","range":[1,60]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,65]},"arg":{"_type":"lit","value":"!=","range":[1,65]}},"arg":{"_type":"ref","varName":"nil","range":[1,70]}}}},"arg":{"_type":"ref","varName":"nil","range":[1,74]}}}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"rightAssoc","range":[1,0]}},"arg":{"_type":"lit","value":0,"range":[1,0]}},"arg":{"_type":"lit","value":"rightAssoc = [':']","range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,14]},"arg":{"_type":"lit","value":":","range":[1,14]}},"arg":{"_type":"ref","varName":"nil","range":[1,18]}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"infixPrecedence","range":[1,9]}},"arg":{"_type":"ref","varName":"iprec","range":[1,27]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"setValue","range":[1,0]},"arg":{"_type":"lit","value":"infixRightAssociative","range":[1,9]}},"arg":{"_type":"ref","varName":"rightAssoc","range":[1,33]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defTokenPack","range":[1,0]},"arg":{"_type":"lit","value":"infix","range":[1,13]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,22]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"flatten","range":[1,23]},"arg":{"_type":"ref","varName":"iprec","range":[1,31]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,42]},"arg":{"_type":"ref","varName":"nil","range":[0,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,42]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,42]},"arg":{"_type":"ref","varName":"infix","range":[1,42]}},"arg":{"_type":"ref","varName":"nil","range":[1,48]}}},"arg":{"_type":"ref","varName":"nil","range":[1,52]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"ref","varName":"useTokenPack","range":[1,0]},"arg":{"_type":"lit","value":"infix","range":[1,13]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defMacro","range":[1,0]},"arg":{"_type":"lit","value":"do","range":[1,9]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"handleDo","range":[1,22]},"arg":{"_type":"ref","varName":"list","range":[1,31]}},"arg":{"_type":"ref","varName":"false","range":[1,36]}},"arg":{"_type":"ref","varName":"id","range":[1,42]}},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"handleDo","range":[1,0]}},"arg":{"_type":"lit","value":3,"range":[1,0]}},"arg":{"_type":"lit","value":"handleDo list inLet cont = list\r\n  \\h t D . isNil t\r\n    cont (inLet ['.' h] [h])\r\n    doClause (stripParens h) h nil inLet \\newInLet chain .\r\n      handleDo t newInLet \\rest . cont (chain rest)\r\n  cont nil","range":[1,0]}},"arg":{"_type":"lambda","varName":"list","body":{"_type":"lambda","varName":"inLet","body":{"_type":"lambda","varName":"cont","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"list","range":[1,27]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,44]},"arg":{"_type":"ref","varName":"t","range":[1,50]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,57]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"inLet","range":[1,63]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,70]},"arg":{"_type":"lit","value":".","range":[1,70]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,74]},"arg":{"_type":"ref","varName":"h","range":[1,74]}},"arg":{"_type":"ref","varName":"nil","range":[1,76]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,78]},"arg":{"_type":"ref","varName":"h","range":[1,78]}},"arg":{"_type":"ref","varName":"nil","range":[1,80]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"doClause","range":[1,87]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"stripParens","range":[1,97]},"arg":{"_type":"ref","varName":"h","range":[1,109]}}},"arg":{"_type":"ref","varName":"h","range":[1,112]}},"arg":{"_type":"ref","varName":"nil","range":[1,114]}},"arg":{"_type":"ref","varName":"inLet","range":[1,118]}},"arg":{"_type":"lambda","varName":"newInLet","body":{"_type":"lambda","varName":"chain","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"handleDo","range":[1,149]},"arg":{"_type":"ref","varName":"t","range":[1,158]}},"arg":{"_type":"ref","varName":"newInLet","range":[1,160]}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,177]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"chain","range":[1,183]},"arg":{"_type":"ref","varName":"rest","range":[1,189]}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,198]},"arg":{"_type":"ref","varName":"nil","range":[1,203]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"define","range":[1,0]},"arg":{"_type":"lit","value":"doClause","range":[1,0]}},"arg":{"_type":"lit","value":5,"range":[1,0]}},"arg":{"_type":"lit","value":"doClause steppingClause clause prefix inLet cont = \\\\\r\n  makeBind var monad = cont false \\rest . inLet (cons '.') id\r\n    ['bind' monad ['\\\\' var '.' | rest]]\r\n  .\r\n  isCons steppingClause\r\n    steppingClause \\h t . isTokenString h '='\r\n      inLet\r\n        cont true \\rest . [clause | rest]\r\n        cont true \\rest . ['\\\\\\\\' clause | rest]\r\n      isTokenString h '<-'\r\n        isNil t\r\n          parseErr \"No monad in do-clause: \" clause\r\n          prefix\r\n            \\ph pt D . isNil pt\r\n              makeBind (isNil prefix '_' (head prefix)) t\r\n              parseErr \"More than one variable in do-clause: \" clause\r\n            makeBind '_' t\r\n        doClause t clause [h | prefix] inLet cont\r\n    makeBind '_' clause","range":[1,0]}},"arg":{"_type":"lambda","varName":"steppingClause","body":{"_type":"lambda","varName":"clause","body":{"_type":"lambda","varName":"prefix","body":{"_type":"lambda","varName":"inLet","body":{"_type":"lambda","varName":"cont","body":{"_type":"let","varName":"makeBind","value":{"_type":"lambda","varName":"var","body":{"_type":"lambda","varName":"monad","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,78]},"arg":{"_type":"ref","varName":"false","range":[1,83]}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"inLet","range":[1,97]},"arg":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,104]},"arg":{"_type":"lit","value":".","range":[1,109]}}},"arg":{"_type":"ref","varName":"id","range":[1,114]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,123]},"arg":{"_type":"lit","value":"bind","range":[1,123]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,130]},"arg":{"_type":"ref","varName":"monad","range":[1,130]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,137]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,137]},"arg":{"_type":"lit","value":"\\","range":[1,137]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,142]},"arg":{"_type":"ref","varName":"var","range":[1,142]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,146]},"arg":{"_type":"lit","value":".","range":[1,146]}},"arg":{"_type":"ref","varName":"rest","range":[1,152]}}}}},"arg":{"_type":"ref","varName":"nil","range":[1,157]}}}}},"range":[1,0]}},"range":[1,0]},"range":[1,0]},"body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isCons","range":[1,167]},"arg":{"_type":"ref","varName":"steppingClause","range":[1,174]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"steppingClause","range":[1,194]},"arg":{"_type":"lambda","varName":"h","body":{"_type":"lambda","varName":"t","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,216]},"arg":{"_type":"ref","varName":"h","range":[1,230]}},"arg":{"_type":"lit","value":"=","range":[1,232]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"inLet","range":[1,243]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,258]},"arg":{"_type":"ref","varName":"true","range":[1,263]}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,277]},"arg":{"_type":"ref","varName":"clause","range":[1,277]}},"arg":{"_type":"ref","varName":"rest","range":[1,286]}},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cont","range":[1,301]},"arg":{"_type":"ref","varName":"true","range":[1,306]}},"arg":{"_type":"lambda","varName":"rest","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,320]},"arg":{"_type":"lit","value":"\\\\","range":[1,320]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,327]},"arg":{"_type":"ref","varName":"clause","range":[1,327]}},"arg":{"_type":"ref","varName":"rest","range":[1,336]}}},"range":[1,0]}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isTokenString","range":[1,349]},"arg":{"_type":"ref","varName":"h","range":[1,363]}},"arg":{"_type":"lit","value":"<-","range":[1,365]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,379]},"arg":{"_type":"ref","varName":"t","range":[1,385]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,398]},"arg":{"_type":"lit","value":"No monad in do-clause: ","range":[1,407]}},"arg":{"_type":"ref","varName":"clause","range":[1,433]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"prefix","range":[1,451]},"arg":{"_type":"lambda","varName":"ph","body":{"_type":"lambda","varName":"pt","body":{"_type":"lambda","varName":"D","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,482]},"arg":{"_type":"ref","varName":"pt","range":[1,488]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeBind","range":[1,506]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"isNil","range":[1,516]},"arg":{"_type":"ref","varName":"prefix","range":[1,522]}},"arg":{"_type":"lit","value":"_","range":[1,529]}},"arg":{"_type":"apply","func":{"_type":"ref","varName":"head","range":[1,534]},"arg":{"_type":"ref","varName":"prefix","range":[1,539]}}}},"arg":{"_type":"ref","varName":"t","range":[1,548]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"parseErr","range":[1,565]},"arg":{"_type":"lit","value":"More than one variable in do-clause: ","range":[1,574]}},"arg":{"_type":"ref","varName":"clause","range":[1,614]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeBind","range":[1,634]},"arg":{"_type":"lit","value":"_","range":[1,643]}},"arg":{"_type":"ref","varName":"t","range":[1,647]}}}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"doClause","range":[1,658]},"arg":{"_type":"ref","varName":"t","range":[1,667]}},"arg":{"_type":"ref","varName":"clause","range":[1,669]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,677]},"arg":{"_type":"ref","varName":"h","range":[1,677]}},"arg":{"_type":"ref","varName":"prefix","range":[1,681]}}},"arg":{"_type":"ref","varName":"inLet","range":[1,689]}},"arg":{"_type":"ref","varName":"cont","range":[1,695]}}}},"range":[1,0]},"range":[1,0]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"makeBind","range":[1,705]},"arg":{"_type":"lit","value":"_","range":[1,714]}},"arg":{"_type":"ref","varName":"clause","range":[1,718]}}},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]},"range":[1,0]}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"defTokenPack","range":[1,0]},"arg":{"_type":"lit","value":"do","range":[1,13]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,20]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,20]},"arg":{"_type":"lit","value":"<-","range":[1,20]}},"arg":{"_type":"ref","varName":"nil","range":[1,25]}}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,29]},"arg":{"_type":"ref","varName":"nil","range":[0,0]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[0,0]},"arg":{"_type":"ref","varName":"nil","range":[0,0]}},"arg":{"_type":"ref","varName":"nil","range":[0,0]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"apply","func":{"_type":"ref","varName":"addStdTokenPacks","range":[1,0]},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,18]},"arg":{"_type":"lit","value":"list","range":[1,18]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,25]},"arg":{"_type":"lit","value":"infix","range":[1,25]}},"arg":{"_type":"apply","func":{"_type":"apply","func":{"_type":"ref","varName":"cons","range":[1,33]},"arg":{"_type":"lit","value":"do","range":[1,33]}},"arg":{"_type":"ref","varName":"nil","range":[1,38]}}}}}},
  {"_type":"anno","name":"filename","data":"core/generatedPrelude.lsr","body":{"_type":"ref","varName":"resetStdTokenPacks","range":[1,0]}}
]