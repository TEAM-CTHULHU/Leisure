runMonad(L_require()(function(){return "../../newCode/std.lsr"}));
runMonad(L_define()(function(){return "peek"})(function(){return 2})(function(){return "peek name idx = do\n  global <- getValue name\n  > (length global) idx\n    at global idx\n    print \"ERROR: PEEK OUT OF BOUNDS\""})((function(){var $m; return function(){return $m || ($m = function(L_name){return function(L_idx){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(L_name))}})())((function(){var $m; return function(){return $m || ($m = function(L_global){return L_$z()((function(){var $m; return function(){return $m || ($m = L_length()(L_global))}})())(L_idx)((function(){var $m; return function(){return $m || ($m = L_at()(L_global)(L_idx))}})())((function(){var $m; return function(){return $m || ($m = L_print()(function(){return "ERROR: PEEK OUT OF BOUNDS"}))}})())})}})())}})}})()));
runMonad(L_define()(function(){return "poke"})(function(){return 3})(function(){return "poke name idx value = do\n  global <- getValue name\n  > (length global) idx\n    do \n      new_global = append (take idx global) (append [ value ] (drop (++ idx) global) )\n      setValue name new_global\n      value\n    print \"ERROR: POKE OUT OF BOUNDS\""})((function(){var $m; return function(){return $m || ($m = function(L_name){return function(L_idx){return function(L_value){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(L_name))}})())((function(){var $m; return function(){return $m || ($m = function(L_global){return L_$z()((function(){var $m; return function(){return $m || ($m = L_length()(L_global))}})())(L_idx)(function(){
var L_new_global;

L_new_global = (function(){var $m; return function(){return $m || ($m = L_append()((function(){var $m; return function(){return $m || ($m = L_take()(L_idx)(L_global))}})())((function(){var $m; return function(){return $m || ($m = L_append()((function(){var $m; return function(){return $m || ($m = L_cons()(L_value)(L_nil))}})())((function(){var $m; return function(){return $m || ($m = L_drop()((function(){var $m; return function(){return $m || ($m = L_$o$o()(L_idx))}})())(L_global))}})()))}})()))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(L_name)(L_new_global))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_value()})}})())})((function(){var $m; return function(){return $m || ($m = L_print()(function(){return "ERROR: POKE OUT OF BOUNDS"}))}})())})}})())}}})}})()));
runMonad(L_define()(function(){return "LIGHT_SOURCE"})(function(){return 0})(function(){return "LIGHT_SOURCE = 9  # light is always at index 9"})(function(){return 9}));
runMonad(L_define()(function(){return "DESTROYED"})(function(){return 0})(function(){return "DESTROYED = 0     # room location for 'destroyed' items"})(function(){return 0}));
runMonad(L_define()(function(){return "CARRIED"})(function(){return 0})(function(){return "CARRIED = 255     # room location for carried items"})(function(){return 255}));
runMonad(L_define()(function(){return "DARKBIT"})(function(){return 0})(function(){return "DARKBIT = 15"})(function(){return 15}));
runMonad(L_define()(function(){return "LIGHTOUTBIT"})(function(){return 0})(function(){return "LIGHTOUTBIT = 16"})(function(){return 16}));
runMonad(L_define()(function(){return "GH_MAGIC"})(function(){return 0})(function(){return "GH_MAGIC = 0"})(function(){return 0}));
runMonad(L_define()(function(){return "GH_NUM_ITEMS"})(function(){return 0})(function(){return "GH_NUM_ITEMS = 1"})(function(){return 1}));
runMonad(L_define()(function(){return "GM_NUM_ACTIONS"})(function(){return 0})(function(){return "GM_NUM_ACTIONS = 2"})(function(){return 2}));
runMonad(L_define()(function(){return "GH_NUM_WORDS"})(function(){return 0})(function(){return "GH_NUM_WORDS = 3   # shorter list of nouns and verbs is padded"})(function(){return 3}));
runMonad(L_define()(function(){return "GH_NUM_ROOMS"})(function(){return 0})(function(){return "GH_NUM_ROOMS = 4"})(function(){return 4}));
runMonad(L_define()(function(){return "GH_MAX_CARRY"})(function(){return 0})(function(){return "GH_MAX_CARRY = 5"})(function(){return 5}));
runMonad(L_define()(function(){return "GH_PLAYER_ROOM"})(function(){return 0})(function(){return "GH_PLAYER_ROOM = 6"})(function(){return 6}));
runMonad(L_define()(function(){return "GH_NUM_TREASURES"})(function(){return 0})(function(){return "GH_NUM_TREASURES = 7"})(function(){return 7}));
runMonad(L_define()(function(){return "GH_WORD_LENGTH"})(function(){return 0})(function(){return "GH_WORD_LENGTH = 8"})(function(){return 8}));
runMonad(L_define()(function(){return "GH_LIGHT_TIME"})(function(){return 0})(function(){return "GH_LIGHT_TIME = 9"})(function(){return 9}));
runMonad(L_define()(function(){return "GH_NUM_MESSAGES"})(function(){return 0})(function(){return "GH_NUM_MESSAGES = 10"})(function(){return 10}));
runMonad(L_define()(function(){return "GH_TREASURE_ROOM"})(function(){return 0})(function(){return "GH_TREASURE_ROOM = 11"})(function(){return 11}));
runMonad(L_define()(function(){return "GH_SIZEOF"})(function(){return 0})(function(){return "GH_SIZEOF = 12"})(function(){return 12}));
runMonad(L_define()(function(){return "LIGHT_REFILL"})(function(){return 0})(function(){return "LIGHT_REFILL = 0"})(function(){return 0}));
runMonad(L_define()(function(){return "REDRAW"})(function(){return 0})(function(){return "REDRAW = 1"})(function(){return 1}));
runMonad(L_define()(function(){return "conditions"})(function(){return 0})(function(){return "conditions = [ '' 'HAS' 'IS_in_AR' 'IS_AVAIL' 'PLAYER_IN' 'IS_NOT_in_AR' 'HAS_NOT' 'PLAYER_NOT_IN' 'SET_BIT' 'CLEARED_BIT' 'HAS_SOMETHING' 'HAS_NOTHING' 'IS_NOT_AVAIL' 'IS_NOT_in_ROOM0' 'IS_in_ROOM0' 'COUNTER <=' 'COUNTER >' 'IS_in_OrigROOM' 'IS_NOT_in_OrigROOM' 'COUNTER ==' ]"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return ""})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "HAS"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_in_AR"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_AVAIL"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "PLAYER_IN"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_NOT_in_AR"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "HAS_NOT"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "PLAYER_NOT_IN"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SET_BIT"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "CLEARED_BIT"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "HAS_SOMETHING"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "HAS_NOTHING"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_NOT_AVAIL"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_NOT_in_ROOM0"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_in_ROOM0"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER <="})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER >"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_in_OrigROOM"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "IS_NOT_in_OrigROOM"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER =="})(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()));
runMonad(L_define()(function(){return "NONE"})(function(){return 0})(function(){return "NONE = 1"})(function(){return 1}));
runMonad(L_define()(function(){return "ACTION"})(function(){return 0})(function(){return "ACTION = 2"})(function(){return 2}));
runMonad(L_define()(function(){return "ITEM"})(function(){return 0})(function(){return "ITEM = 3"})(function(){return 3}));
runMonad(L_define()(function(){return "ROOM"})(function(){return 0})(function(){return "ROOM = 4"})(function(){return 4}));
runMonad(L_define()(function(){return "NUMBER"})(function(){return 0})(function(){return "NUMBER = 5"})(function(){return 5}));
runMonad(L_define()(function(){return "BITFLAG"})(function(){return 0})(function(){return "BITFLAG = 6"})(function(){return 6}));
runMonad(L_define()(function(){return "conddata"})(function(){return 0})(function(){return "conddata = [  ACTION ITEM ITEM ITEM ROOM ITEM ITEM ROOM BITFLAG BITFLAG NONE NONE ITEM ITEM ITEM NUMBER NUMBER ITEM ITEM NUMBER ]"})((function(){var $m; return function(){return $m || ($m = L_cons()(L_ACTION)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ROOM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ROOM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_BITFLAG)((function(){var $m; return function(){return $m || ($m = L_cons()(L_BITFLAG)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NONE)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NONE)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NUMBER)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NUMBER)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_ITEM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NUMBER)(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()));
runMonad(L_define()(function(){return "acts"})(function(){return 0})(function(){return "acts = flatten [\n  ['GET' 'MOVE_INTO_AR' 'GOTO' 'REMOVE' 'SET_NIGHT']\n  ['SET_DAY' 'SET_BIT' 'REMOVE' 'CLEAR_BIT' 'KILL_PLAYER']\n  ['MOVE_X_INTO_Y' 'QUIT' 'LOOK' 'SCORE' 'INVENTORY']\n  ['SET_BIT (0)' 'CLEAR_BIT (0)' 'FILL_LAMP' 'CLS' 'SAVE']\n  ['SWAP_ITEMS' 'CONTINUE:' 'GET_ALWAYS' 'PUT_X_WITH_Y' 'LOOK']\n  ['COUNTER -= 1' 'PRINT_COUNTER' 'COUNTER =' 'SWAP_LOC_RV' 'SWAP_COUNTER']\n  ['COUNTER +=' 'COUNTER -=' 'ECHO_NOUN' 'ECHO_NOUN_CR' 'CR']\n  ['SELECT_RV' 'DELAY' 'SHOW_PIC' 'COMM90' 'COMM91']\n  ['COMM92' 'COMM93' 'COMM94' 'COMM95' 'COMM96']\n  ['COMM97' 'COMM98' 'COMM99' 'COMM100' 'COMM101'] ]"})((function(){var $m; return function(){return $m || ($m = L_flatten()((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "GET"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "MOVE_INTO_AR"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "GOTO"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "REMOVE"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SET_NIGHT"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SET_DAY"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SET_BIT"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "REMOVE"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "CLEAR_BIT"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "KILL_PLAYER"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "MOVE_X_INTO_Y"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "QUIT"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "LOOK"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SCORE"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "INVENTORY"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SET_BIT (0)"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "CLEAR_BIT (0)"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "FILL_LAMP"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "CLS"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SAVE"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SWAP_ITEMS"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "CONTINUE:"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "GET_ALWAYS"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "PUT_X_WITH_Y"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "LOOK"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER -= 1"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "PRINT_COUNTER"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER ="})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SWAP_LOC_RV"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SWAP_COUNTER"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER +="})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COUNTER -="})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "ECHO_NOUN"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "ECHO_NOUN_CR"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "CR"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SELECT_RV"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "DELAY"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "SHOW_PIC"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM90"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM91"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM92"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM93"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM94"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM95"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM96"})(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM97"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM98"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM99"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM100"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "COMM101"})(L_nil))}})()))}})()))}})()))}})()))}})())(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()));
runMonad(L_define()(function(){return "NOT"})(function(){return 0})(function(){return "NOT = 0"})(function(){return 0}));
runMonad(L_define()(function(){return "IT"})(function(){return 0})(function(){return "IT = 1"})(function(){return 1}));
runMonad(L_define()(function(){return "RO"})(function(){return 0})(function(){return "RO = 2"})(function(){return 2}));
runMonad(L_define()(function(){return "FL"})(function(){return 0})(function(){return "FL = 3"})(function(){return 3}));
runMonad(L_define()(function(){return "IT_RO"})(function(){return 0})(function(){return "IT_RO = 4"})(function(){return 4}));
runMonad(L_define()(function(){return "IT_IT"})(function(){return 0})(function(){return "IT_IT = 5"})(function(){return 5}));
runMonad(L_define()(function(){return "NUM"})(function(){return 0})(function(){return "NUM = 6"})(function(){return 6}));
runMonad(L_define()(function(){return "actdata"})(function(){return 0})(function(){return "actdata = flatten [\n  [IT IT RO IT NOT NOT FL IT FL NOT]\n  [IT_RO NOT NOT NOT NOT NOT NOT NOT NOT NOT]\n  [IT_IT NOT IT IT_IT NOT NOT NOT NUM NOT FL]\n  [NUM NUM NOT NOT NOT FL NOT FL NOT NOT]\n  [NOT NOT NOT NOT NOT NOT NOT NOT NOT NOT] ]"})((function(){var $m; return function(){return $m || ($m = L_flatten()((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_RO)((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_FL)((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_FL)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT_RO)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_IT_IT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NUM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_FL)(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(L_NUM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NUM)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_FL)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_FL)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)((function(){var $m; return function(){return $m || ($m = L_cons()(L_NOT)(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())(L_nil))}})()))}})()))}})()))}})()))}})()))}})()));
runMonad(L_define()(function(){return "Exits"})(function(){return 0})(function(){return "Exits = [ 'North' 'South' 'East' 'West' 'Up' 'Down' ]"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "North"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "South"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "East"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "West"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "Up"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "Down"})(L_nil))}})()))}})()))}})()))}})()))}})()))}})()));
runMonad(L_define()(function(){return "loadGame"})(function(){return 1})(function(){return "loadGame filename = do\n  result <- readFile filename\n  result\n    \\err . print concat[ 'Error: ' err ]\n    \\contents . processFile (everyLinesForFile contents)"})((function(){var $m; return function(){return $m || ($m = function(L_filename){return L_bind()((function(){var $m; return function(){return $m || ($m = L_readFile()(L_filename))}})())((function(){var $m; return function(){return $m || ($m = function(L_result){return L_result()((function(){var $m; return function(){return $m || ($m = function(L_err){return L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "Error: "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_err)(L_nil))}})()))}})()))}})())})}})())((function(){var $m; return function(){return $m || ($m = function(L_contents){return L_processFile()((function(){var $m; return function(){return $m || ($m = L_everyLinesForFile()(L_contents))}})())})}})())})}})())})}})()));
runMonad(L_define()(function(){return "everyLinesForFile"})(function(){return 1})(function(){return "everyLinesForFile text =  collapseStrings (strSplit text '\\\\r?\\\\n')"})((function(){var $m; return function(){return $m || ($m = function(L_text){return L_collapseStrings()((function(){var $m; return function(){return $m || ($m = L_strSplit()(L_text)(function(){return "\\r?\\n"}))}})())})}})()));
runMonad(L_define()(function(){return "collapseStrings"})(function(){return 1})(function(){return "collapseStrings list = isNil list\n   list\n   isPartialString (head list)\n     collapseStrings (cons ((head list) + '{nl}' + (head (tail list))) (tail (tail list)))\n     cons (head list) (collapseStrings (tail list))"})((function(){var $m; return function(){return $m || ($m = function(L_list){return L_isNil()(L_list)(L_list)((function(){var $m; return function(){return $m || ($m = L_isPartialString()((function(){var $m; return function(){return $m || ($m = L_head()(L_list))}})())((function(){var $m; return function(){return $m || ($m = L_collapseStrings()((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_head()(L_list))}})())(function(){return "{nl}"}))}})())((function(){var $m; return function(){return $m || ($m = L_head()((function(){var $m; return function(){return $m || ($m = L_tail()(L_list))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_tail()((function(){var $m; return function(){return $m || ($m = L_tail()(L_list))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_head()(L_list))}})())((function(){var $m; return function(){return $m || ($m = L_collapseStrings()((function(){var $m; return function(){return $m || ($m = L_tail()(L_list))}})()))}})()))}})()))}})())})}})()));
runMonad(L_define()(function(){return "isPartialString"})(function(){return 1})(function(){return "isPartialString string = strMatches string '^\".*\"\\\\s+[0-9]+\\\\s*$'\n  false\n  strMatches string '^\".*[^\"]\\\\s*$'"})((function(){var $m; return function(){return $m || ($m = function(L_string){return L_strMatches()(L_string)(function(){return "^\".*\"\\s+[0-9]+\\s*$"})(L_false)((function(){var $m; return function(){return $m || ($m = L_strMatches()(L_string)(function(){return "^\".*[^\"]\\s*$"}))}})())})}})()));
runMonad(L_define()(function(){return "asInts"})(function(){return 1})(function(){return "asInts list = map (* 1) list"})((function(){var $m; return function(){return $m || ($m = function(L_list){return L_map()((function(){var $m; return function(){return $m || ($m = L_$g()(function(){return 1}))}})())(L_list)})}})()));
runMonad(L_define()(function(){return "extract"})(function(){return 2})(function(){return "extract str pattern = do\n  matches = strMatch str pattern\n  isCons matches\n    isNil (at matches 1)\n      ''\n      head (at matches 1)\n    str"})((function(){var $m; return function(){return $m || ($m = function(L_str){return function(L_pattern){return (function(){

var L_matches;

L_matches = (function(){var $m; return function(){return $m || ($m = L_strMatch()(L_str)(L_pattern))}})();
return L_isCons()(L_matches)((function(){var $m; return function(){return $m || ($m = L_isNil()((function(){var $m; return function(){return $m || ($m = L_at()(L_matches)(function(){return 1}))}})())(function(){return ""})((function(){var $m; return function(){return $m || ($m = L_head()((function(){var $m; return function(){return $m || ($m = L_at()(L_matches)(function(){return 1}))}})()))}})()))}})())(L_str)})()}})}})()));
runMonad(L_define()(function(){return "unquote"})(function(){return 1})(function(){return "unquote str = extract str (regexp '^\"(.*)\"$')\n    "})((function(){var $m; return function(){return $m || ($m = function(L_str){return L_extract()(L_str)((function(){var $m; return function(){return $m || ($m = L_regexp()(function(){return "^\"(.*)\"$"}))}})())})}})()));
runMonad(L_define()(function(){return "asRoom"})(function(){return 1})(function(){return "asRoom list = append (asInts (removeLast list)) [ (unquote (last list)) ]"})((function(){var $m; return function(){return $m || ($m = function(L_list){return L_append()((function(){var $m; return function(){return $m || ($m = L_asInts()((function(){var $m; return function(){return $m || ($m = L_removeLast()(L_list))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_unquote()((function(){var $m; return function(){return $m || ($m = L_last()(L_list))}})()))}})())(L_nil))}})())})}})()));
runMonad(L_define()(function(){return "asRooms"})(function(){return 1})(function(){return "asRooms list = map (asRoom) list"})((function(){var $m; return function(){return $m || ($m = function(L_list){return L_map()(L_asRoom)(L_list)})}})()));
runMonad(L_define()(function(){return "asItem"})(function(){return 1})(function(){return "asItem string = do\n  matches = strMatch string '^(\"?.*\"?)\\\\s+([0-9]+)\\\\s*$'\n  isCons matches\n    do\n      name = unquote (head (at matches 1))\n      room = 1 * (at (at matches 1) 1)\n      agmatch = strMatch name '/(.*)/'\n      isCons agmatch\n        [ (strReplace name (regexp '/.*/') '') room (head (at agmatch 1)) ]\n        [ name room '' ]\n    [ string 0 'BAD REGEXP' ]      "})((function(){var $m; return function(){return $m || ($m = function(L_string){return (function(){

var L_matches;

L_matches = (function(){var $m; return function(){return $m || ($m = L_strMatch()(L_string)(function(){return "^(\"?.*\"?)\\s+([0-9]+)\\s*$"}))}})();
return L_isCons()(L_matches)(function(){
var L_agmatch, L_room, L_name;

L_agmatch = (function(){var $m; return function(){return $m || ($m = L_strMatch()(L_name)(function(){return "/(.*)/"}))}})();

L_room = (function(){var $m; return function(){return $m || ($m = L_$g()(function(){return 1})((function(){var $m; return function(){return $m || ($m = L_at()((function(){var $m; return function(){return $m || ($m = L_at()(L_matches)(function(){return 1}))}})())(function(){return 1}))}})()))}})();

L_name = (function(){var $m; return function(){return $m || ($m = L_unquote()((function(){var $m; return function(){return $m || ($m = L_head()((function(){var $m; return function(){return $m || ($m = L_at()(L_matches)(function(){return 1}))}})()))}})()))}})();
return L_isCons()(L_agmatch)((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_strReplace()(L_name)((function(){var $m; return function(){return $m || ($m = L_regexp()(function(){return "/.*/"}))}})())(function(){return ""}))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(L_room)((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_head()((function(){var $m; return function(){return $m || ($m = L_at()(L_agmatch)(function(){return 1}))}})()))}})())(L_nil))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(L_name)((function(){var $m; return function(){return $m || ($m = L_cons()(L_room)((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return ""})(L_nil))}})()))}})()))}})())})((function(){var $m; return function(){return $m || ($m = L_cons()(L_string)((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "BAD REGEXP"})(L_nil))}})()))}})()))}})())})()})}})()));
runMonad(L_define()(function(){return "asItems"})(function(){return 1})(function(){return "asItems list = map (asItem) list  "})((function(){var $m; return function(){return $m || ($m = function(L_list){return L_map()(L_asItem)(L_list)})}})()));
runMonad(L_define()(function(){return "processFile"})(function(){return 1})(function(){return "processFile contents = do\n  #print contents\n  #print (at contents 0)\n  setValue 'BitFlags' [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ]  # up to 32 bits of flags supported\n  GameHeader = asInts (take GH_SIZEOF contents)\n  setValue 'GameHeader' GameHeader\n  GlobalVars = [ (at GameHeader GH_LIGHT_TIME) 0 ]  # store light time in refill time for later use\n  setValue 'GlobalVars' GlobalVars\n  after_header = (drop GH_SIZEOF contents)\n  num_actions = (at GameHeader GM_NUM_ACTIONS)\n  max_actions = (num_actions * 1 + 1) * 8\n  #print concat[ 'num actions: ' num_actions ' max actions: ' max_actions]\n  Actions = asInts (box 8 (take max_actions after_header))\n  setValue 'Actions' Actions\n  after_actions = drop max_actions after_header\n  num_words = at GameHeader GH_NUM_WORDS\n  max_words = (num_words * 1 + 1) * 2\n  Words = take max_words after_actions\n  setValue 'Nouns' (evens Words)\n  setValue 'Verbs' (odds Words)\n  after_words = drop max_words after_actions\n  processFile2 after_words\n  "})((function(){var $m; return function(){return $m || ($m = function(L_contents){return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "BitFlags"})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return (function(){

var L_GameHeader;

L_GameHeader = (function(){var $m; return function(){return $m || ($m = L_asInts()((function(){var $m; return function(){return $m || ($m = L_take()(L_GH_SIZEOF)(L_contents))}})()))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "GameHeader"})(L_GameHeader))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return (function(){

var L_GlobalVars;

L_GlobalVars = (function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GH_LIGHT_TIME))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})(L_nil))}})()))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "GlobalVars"})(L_GlobalVars))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return (function(){

var L_Actions, L_max_actions, L_num_actions, L_after_header;

L_Actions = (function(){var $m; return function(){return $m || ($m = L_asInts()((function(){var $m; return function(){return $m || ($m = L_box()(function(){return 8})((function(){var $m; return function(){return $m || ($m = L_take()(L_max_actions)(L_after_header))}})()))}})()))}})();

L_max_actions = (function(){var $m; return function(){return $m || ($m = L_$g()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_actions)(function(){return 1}))}})())(function(){return 1}))}})())(function(){return 8}))}})();

L_num_actions = (function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GM_NUM_ACTIONS))}})();

L_after_header = (function(){var $m; return function(){return $m || ($m = L_drop()(L_GH_SIZEOF)(L_contents))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Actions"})(L_Actions))}})())((function(){var $m; return function(){return $m || ($m = function(L___2){return (function(){

var L_Words, L_max_words, L_num_words, L_after_actions;

L_Words = (function(){var $m; return function(){return $m || ($m = L_take()(L_max_words)(L_after_actions))}})();

L_max_words = (function(){var $m; return function(){return $m || ($m = L_$g()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_words)(function(){return 1}))}})())(function(){return 1}))}})())(function(){return 2}))}})();

L_num_words = (function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GH_NUM_WORDS))}})();

L_after_actions = (function(){var $m; return function(){return $m || ($m = L_drop()(L_max_actions)(L_after_header))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Nouns"})((function(){var $m; return function(){return $m || ($m = L_evens()(L_Words))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___3){return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Verbs"})((function(){var $m; return function(){return $m || ($m = L_odds()(L_Words))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___4){return (function(){

var L_after_words;

L_after_words = (function(){var $m; return function(){return $m || ($m = L_drop()(L_max_words)(L_after_actions))}})();
return L_processFile2()(L_after_words)})()})}})())})}})())})()})}})())})()})}})())})()})}})())})()})}})())})}})()));
runMonad(L_define()(function(){return "processFile2"})(function(){return 1})(function(){return "processFile2 after_words = do \n  GameHeader <- getValue 'GameHeader'\n  num_actions = (at GameHeader GM_NUM_ACTIONS)  \n  num_rooms = at GameHeader GH_NUM_ROOMS\n  max_rooms = (num_rooms * 1 + 1) * 7\n  Rooms = asRooms (box 7 (take max_rooms after_words))\n  setValue 'Rooms' Rooms\n  after_rooms = drop max_rooms after_words\n  num_msgs = (at GameHeader GH_NUM_MESSAGES)\n  max_msgs = num_msgs * 1 + 1\n  Messages = take max_msgs after_rooms\n  setValue 'Messages' Messages\n  after_msgs = drop max_msgs after_rooms\n  num_items = at GameHeader GH_NUM_ITEMS\n  max_items = num_items * 1 + 1\n  Items = asItems (take max_items after_msgs)\n  setValue 'Items' Items\n  after_items = drop max_items after_msgs\n  Comments = take (num_actions * 1 + 1) after_items\n  setValue 'Comments' Comments\n  after_comments = drop (num_actions * 1 + 1) after_items\n  GameFooter = asInts (take 3 after_comments)\n  setValue 'GameFooter' GameFooter\n  \"Data File Loaded.\""})((function(){var $m; return function(){return $m || ($m = function(L_after_words){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "GameHeader"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_GameHeader){return (function(){

var L_Rooms, L_max_rooms, L_num_rooms, L_num_actions;

L_Rooms = (function(){var $m; return function(){return $m || ($m = L_asRooms()((function(){var $m; return function(){return $m || ($m = L_box()(function(){return 7})((function(){var $m; return function(){return $m || ($m = L_take()(L_max_rooms)(L_after_words))}})()))}})()))}})();

L_max_rooms = (function(){var $m; return function(){return $m || ($m = L_$g()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_rooms)(function(){return 1}))}})())(function(){return 1}))}})())(function(){return 7}))}})();

L_num_rooms = (function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GH_NUM_ROOMS))}})();

L_num_actions = (function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GM_NUM_ACTIONS))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Rooms"})(L_Rooms))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return (function(){

var L_Messages, L_max_msgs, L_num_msgs, L_after_rooms;

L_Messages = (function(){var $m; return function(){return $m || ($m = L_take()(L_max_msgs)(L_after_rooms))}})();

L_max_msgs = (function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_msgs)(function(){return 1}))}})())(function(){return 1}))}})();

L_num_msgs = (function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GH_NUM_MESSAGES))}})();

L_after_rooms = (function(){var $m; return function(){return $m || ($m = L_drop()(L_max_rooms)(L_after_words))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Messages"})(L_Messages))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return (function(){

var L_Items, L_max_items, L_num_items, L_after_msgs;

L_Items = (function(){var $m; return function(){return $m || ($m = L_asItems()((function(){var $m; return function(){return $m || ($m = L_take()(L_max_items)(L_after_msgs))}})()))}})();

L_max_items = (function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_items)(function(){return 1}))}})())(function(){return 1}))}})();

L_num_items = (function(){var $m; return function(){return $m || ($m = L_at()(L_GameHeader)(L_GH_NUM_ITEMS))}})();

L_after_msgs = (function(){var $m; return function(){return $m || ($m = L_drop()(L_max_msgs)(L_after_rooms))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Items"})(L_Items))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return (function(){

var L_Comments, L_after_items;

L_Comments = (function(){var $m; return function(){return $m || ($m = L_take()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_actions)(function(){return 1}))}})())(function(){return 1}))}})())(L_after_items))}})();

L_after_items = (function(){var $m; return function(){return $m || ($m = L_drop()(L_max_items)(L_after_msgs))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "Comments"})(L_Comments))}})())((function(){var $m; return function(){return $m || ($m = function(L___2){return (function(){

var L_GameFooter, L_after_comments;

L_GameFooter = (function(){var $m; return function(){return $m || ($m = L_asInts()((function(){var $m; return function(){return $m || ($m = L_take()(function(){return 3})(L_after_comments))}})()))}})();

L_after_comments = (function(){var $m; return function(){return $m || ($m = L_drop()((function(){var $m; return function(){return $m || ($m = L_$o()((function(){var $m; return function(){return $m || ($m = L_$g()(L_num_actions)(function(){return 1}))}})())(function(){return 1}))}})())(L_after_items))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_setValue()(function(){return "GameFooter"})(L_GameFooter))}})())((function(){var $m; return function(){return $m || ($m = function(L___3){return "Data File Loaded."})}})())})()})}})())})()})}})())})()})}})())})()})}})())})()})}})())})}})()));
runMonad(L_define()(function(){return "merge"})(function(){return 2})(function(){return "merge list1 list2 = isNil list1\n  nil\n  isNil list2\n    nil\n    append [ (head list1) (head list2) ] (merge (tail list1) (tail list2))"})((function(){var $m; return function(){return $m || ($m = function(L_list1){return function(L_list2){return L_isNil()(L_list1)(L_nil)((function(){var $m; return function(){return $m || ($m = L_isNil()(L_list2)(L_nil)((function(){var $m; return function(){return $m || ($m = L_append()((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_head()(L_list1))}})())((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_head()(L_list2))}})())(L_nil))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_merge()((function(){var $m; return function(){return $m || ($m = L_tail()(L_list1))}})())((function(){var $m; return function(){return $m || ($m = L_tail()(L_list2))}})()))}})()))}})()))}})())}})}})()));
runMonad(L_define()(function(){return "debugGame"})(function(){return 0})(function(){return "debugGame = do\n  GameHeader <- getValue 'GameHeader'\n  print (merge [ '\\nmagic: ' '\\nnum items: ' '\\nnum actions: ' '\\nnum words: ' '\\nnum rooms: ' '\\nmax carry: ' '\\nplayer room: ' '\\ntreasures: ' '\\nword len: ' '\\nlight time: ' '\\nnum msgs: ' '\\ntreasure room: ' ] GameHeader)\n  GlobalVars <- getValue 'GlobalVars'\n  print (merge [ '\\nlight refill: ' '\\nredraw: ' ] GlobalVars)\n  Actions <- getValue 'Actions'\n  print concat[ \"\\nNum Actions: \" (length Actions) \"\\nFirst Action: \" (at Actions 0) \"\\nLast Action: \" (last Actions) ]\n  Nouns <- getValue 'Nouns'\n  print concat[ \"\\nNum Nouns: \" (length Nouns) \" Nouns: \" Nouns]\n  Verbs <- getValue 'Verbs'\n  print concat[ \"\\nNum Verbs: \" (length Verbs) \" Verbs: \" Verbs]\n  debugGame2\n  "})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "GameHeader"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_GameHeader){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_merge()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nmagic: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nnum items: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nnum actions: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nnum words: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nnum rooms: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nmax carry: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nplayer room: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\ntreasures: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nword len: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nlight time: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nnum msgs: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\ntreasure room: "})(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())(L_GameHeader))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "GlobalVars"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_GlobalVars){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_merge()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nlight refill: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nredraw: "})(L_nil))}})()))}})())(L_GlobalVars))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Actions"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_Actions){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nNum Actions: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_length()(L_Actions))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nFirst Action: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_at()(L_Actions)(function(){return 0}))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nLast Action: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_last()(L_Actions))}})())(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Nouns"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_Nouns){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nNum Nouns: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_length()(L_Nouns))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return " Nouns: "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_Nouns)(L_nil))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___2){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Verbs"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_Verbs){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nNum Verbs: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_length()(L_Verbs))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return " Verbs: "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_Verbs)(L_nil))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___3){return L_debugGame2()})}})())})}})())})}})())})}})())})}})())})}})())})}})())})}})())})}})())})}})()))}})()));
runMonad(L_define()(function(){return "debugGame2"})(function(){return 0})(function(){return "debugGame2 = do    \n  Rooms <- getValue 'Rooms'\n  print concat[ \"\\nNum Rooms: \" (length Rooms) '\\nFirst Room: ' (at Rooms 0) '\\nLast Room: ' (last Rooms)]\n  print concat[ \"\\nAll Rooms: \" Rooms ]\n  Messages <- getValue 'Messages'\n  print concat[ \"\\nNum Messsages: \" (length Messages) \" All Messages: \" Messages ]\n  Items <- getValue 'Items'\n  print concat[ \"\\nNum Items: \" (length Items) \" All Items: \" Items ]\n  GameFooter <- getValue 'GameFooter'\n  print (merge [ '\\nversion: ' '\\nnadv number: ' '\\nunknown: '] GameFooter)\n  \"Debug finished.\""})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Rooms"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_Rooms){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nNum Rooms: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_length()(L_Rooms))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nFirst Room: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_at()(L_Rooms)(function(){return 0}))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nLast Room: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_last()(L_Rooms))}})())(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nAll Rooms: "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_Rooms)(L_nil))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Messages"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_Messages){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nNum Messsages: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_length()(L_Messages))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return " All Messages: "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_Messages)(L_nil))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Items"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_Items){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nNum Items: "})((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_length()(L_Items))}})())((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return " All Items: "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_Items)(L_nil))}})()))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___2){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "GameFooter"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_GameFooter){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_merge()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nversion: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nnadv number: "})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nunknown: "})(L_nil))}})()))}})()))}})())(L_GameFooter))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___3){return "Debug finished."})}})())})}})())})}})())})}})())})}})())})}})())})}})())})}})())})}})()))}})()));
runMonad(L_define()(function(){return "playGame"})(function(){return 0})(function(){return "playGame = do\n  look 0\n  performActions 0 0\n  print concat[ \"\\nTell me what to do ? \" ]\n  input = getInput\n  result = performActions (at input 0) (at input 1)\n  eq result -1\n    print concat[ \"I don't understand your command.\\n\" ]\n    eq result -2\n      print concat[ \"You can't do that yet.\\n\" ]\n      nil\n  processLight\n  #playGame"})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_look()(function(){return 0}))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_bind()((function(){var $m; return function(){return $m || ($m = L_performActions()(function(){return 0})(function(){return 0}))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "\nTell me what to do ? "})(L_nil))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return (function(){

var L_result, L_input;

L_result = (function(){var $m; return function(){return $m || ($m = L_performActions()((function(){var $m; return function(){return $m || ($m = L_at()(L_input)(function(){return 0}))}})())((function(){var $m; return function(){return $m || ($m = L_at()(L_input)(function(){return 1}))}})()))}})();

L_input = L_getInput;
return L_bind()((function(){var $m; return function(){return $m || ($m = L_eq()((function(){var $m; return function(){return $m || ($m = L_$_()(L_result)(function(){return 1}))}})())((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "I don't understand your command.\n"})(L_nil))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_eq()((function(){var $m; return function(){return $m || ($m = L_$_()(L_result)(function(){return 2}))}})())((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "You can't do that yet.\n"})(L_nil))}})()))}})()))}})())(L_nil))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___2){return L_processLight()})}})())})()})}})())})}})())})}})()))}})()));
runMonad(L_define()(function(){return "processLight"})(function(){return 0})(function(){return "processLight = do\n  timeleft <- peek 'GameHeader' GH_LIGHT_TIME\n  light <- peek 'Items' LIGHT_SOURCE\n  where = at light 1\n  or (eq where DESTROYED) (eq timeleft -1) # -1 means lasts forever, nothing to do\n    nil         \n    lightTick\n  nil\n  "})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "GameHeader"})(L_GH_LIGHT_TIME))}})())((function(){var $m; return function(){return $m || ($m = function(L_timeleft){return L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "Items"})(L_LIGHT_SOURCE))}})())((function(){var $m; return function(){return $m || ($m = function(L_light){return (function(){

var L_where;

L_where = (function(){var $m; return function(){return $m || ($m = L_at()(L_light)(function(){return 1}))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_or()((function(){var $m; return function(){return $m || ($m = L_eq()(L_where)(L_DESTROYED))}})())((function(){var $m; return function(){return $m || ($m = L_eq()((function(){var $m; return function(){return $m || ($m = L_$_()(L_timeleft)(function(){return 1}))}})()))}})())(L_nil)(L_lightTick))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_nil()})}})())})()})}})())})}})()))}})()));
runMonad(L_define()(function(){return "lightTick"})(function(){return 0})(function(){return "lightTick = do\n  timeleft <- (peek 'GameHeader' GH_LIGHT_TIME) - 1\n  myloc <- peek 'GameHeader' GH_PLAYER_ROOM\n  >= timeleft 0  # save it back if not negative\n    poke 'GameHeader' GH_LIGHT_TIME timeleft\n    nil\n  eq timeleft 0\n    do\n      poke 'BitFlags' LIGHTOUTBIT 1\n      isLightPresent myloc\n        print \"Your light has run out.\\n\"\n        nil\n    and (< timeleft 25) (isLightPresent myloc)\n      print concat[ \"You light runs out in \" timeleft \" turns.\\n\"]\n      nil\n      "})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_$_()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "GameHeader"})(L_GH_LIGHT_TIME))}})())(function(){return 1}))}})())((function(){var $m; return function(){return $m || ($m = function(L_timeleft){return L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "GameHeader"})(L_GH_PLAYER_ROOM))}})())((function(){var $m; return function(){return $m || ($m = function(L_myloc){return L_bind()((function(){var $m; return function(){return $m || ($m = L_$z$p()(L_timeleft)(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_poke()(function(){return "GameHeader"})(L_GH_LIGHT_TIME)(L_timeleft))}})())(L_nil))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_eq()(L_timeleft)(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_poke()(function(){return "BitFlags"})(L_LIGHTOUTBIT)(function(){return 1}))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return L_isLightPresent()(L_myloc)((function(){var $m; return function(){return $m || ($m = L_print()(function(){return "Your light has run out.\n"}))}})())(L_nil)})}})()))}})())((function(){var $m; return function(){return $m || ($m = L_and()((function(){var $m; return function(){return $m || ($m = L_$y()(L_timeleft)(function(){return 25}))}})())((function(){var $m; return function(){return $m || ($m = L_isLightPresent()(L_myloc))}})())((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "You light runs out in "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_timeleft)((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return " turns.\n"})(L_nil))}})()))}})()))}})()))}})()))}})())(L_nil))}})())})}})())})}})())})}})()))}})()));
runMonad(L_define()(function(){return "look"})(function(){return 1})(function(){return "look ignore = do\n  myloc <- peek 'GameHeader' GH_PLAYER_ROOM\n  darkbit <- peek 'BitFlags' DARKBIT\n  and (eq darkbit 1) (not (isLightPresent myloc))\n    print \"You can't see. It is too dark!\\n\"\n    basicLook myloc"})((function(){var $m; return function(){return $m || ($m = function(L_ignore){return L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "GameHeader"})(L_GH_PLAYER_ROOM))}})())((function(){var $m; return function(){return $m || ($m = function(L_myloc){return L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "BitFlags"})(L_DARKBIT))}})())((function(){var $m; return function(){return $m || ($m = function(L_darkbit){return L_and()((function(){var $m; return function(){return $m || ($m = L_eq()(L_darkbit)(function(){return 1}))}})())((function(){var $m; return function(){return $m || ($m = L_not()((function(){var $m; return function(){return $m || ($m = L_isLightPresent()(L_myloc))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_print()(function(){return "You can't see. It is too dark!\n"}))}})())((function(){var $m; return function(){return $m || ($m = L_basicLook()(L_myloc))}})())})}})())})}})())})}})()));
runMonad(L_define()(function(){return "basicLook"})(function(){return 1})(function(){return "basicLook myloc = do\n  room <- peek 'Rooms' myloc\n  name = strReplace (at room 6) (regexp '\\\\{nl\\\\}') '\\n'  # swap out any {nl} for real newlines\n  strMatches name '^\\\\*'\n    print name\n    print concat[ \"You are in a \" name ]\n  printExits room\n  printItems myloc\n  print \"\\n\""})((function(){var $m; return function(){return $m || ($m = function(L_myloc){return L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "Rooms"})(L_myloc))}})())((function(){var $m; return function(){return $m || ($m = function(L_room){return (function(){

var L_name;

L_name = (function(){var $m; return function(){return $m || ($m = L_strReplace()((function(){var $m; return function(){return $m || ($m = L_at()(L_room)(function(){return 6}))}})())((function(){var $m; return function(){return $m || ($m = L_regexp()(function(){return "\\{nl\\}"}))}})())(function(){return "\n"}))}})();
return L_bind()((function(){var $m; return function(){return $m || ($m = L_strMatches()(L_name)(function(){return "^\\*"})((function(){var $m; return function(){return $m || ($m = L_print()(L_name))}})())((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "You are in a "})((function(){var $m; return function(){return $m || ($m = L_cons()(L_name)(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_bind()((function(){var $m; return function(){return $m || ($m = L_printExits()(L_room))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return L_bind()((function(){var $m; return function(){return $m || ($m = L_printItems()(L_myloc))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return L_print()(function(){return "\n"})})}})())})}})())})}})())})()})}})())})}})()));
runMonad(L_define()(function(){return "isNumber"})(function(){return 1})(function(){return "isNumber i = == (getType i) '*number'"})((function(){var $m; return function(){return $m || ($m = function(L_i){return L_$p$p()((function(){var $m; return function(){return $m || ($m = L_getType()(L_i))}})())(function(){return "*number"})})}})()));
runMonad(L_define()(function(){return "safeat"})(function(){return 2})(function(){return "safeat list idx = isCons list\n  isNumber idx\n    > (length list) idx\n      at list idx\n      'OOB LIST'\n    'IDX NOT NUM'  \n  'LIST NOT LIST'"})((function(){var $m; return function(){return $m || ($m = function(L_list){return function(L_idx){return L_isCons()(L_list)((function(){var $m; return function(){return $m || ($m = L_isNumber()(L_idx)((function(){var $m; return function(){return $m || ($m = L_$z()((function(){var $m; return function(){return $m || ($m = L_length()(L_list))}})())(L_idx)((function(){var $m; return function(){return $m || ($m = L_at()(L_list)(L_idx))}})())(function(){return "OOB LIST"}))}})())(function(){return "IDX NOT NUM"}))}})())(function(){return "LIST NOT LIST"})}})}})()));
runMonad(L_define()(function(){return "mapIndex"})(function(){return 2})(function(){return "mapIndex func l = _mapIndex 0 func l"})((function(){var $m; return function(){return $m || ($m = function(L_func){return function(L_l){return L__mapIndex()(function(){return 0})(L_func)(L_l)}})}})()));
runMonad(L_define()(function(){return "_mapIndex"})(function(){return 3})(function(){return "_mapIndex idx func l = l (\\h t D . cons (func h idx) (_mapIndex (+ 1 idx) func t)) nil"})((function(){var $m; return function(){return $m || ($m = function(L_idx){return function(L_func){return function(L_l){return L_l()((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return L_cons()((function(){var $m; return function(){return $m || ($m = L_func()(L_h)(L_idx))}})())((function(){var $m; return function(){return $m || ($m = L__mapIndex()((function(){var $m; return function(){return $m || ($m = L_$o()(function(){return 1})(L_idx))}})())(L_func)(L_t))}})())}}})}})())(L_nil)}}})}})()));
runMonad(L_define()(function(){return "hasExit"})(function(){return 2})(function(){return "hasExit exit idx = eq exit 0\n  ''\n  safeat Exits idx"})((function(){var $m; return function(){return $m || ($m = function(L_exit){return function(L_idx){return L_eq()(L_exit)(function(){return 0})(function(){return ""})((function(){var $m; return function(){return $m || ($m = L_safeat()(L_Exits)(L_idx))}})())}})}})()));
runMonad(L_define()(function(){return "printExits"})(function(){return 1})(function(){return "printExits room = do\n  exits = removeIf (eq '') (mapIndex (hasExit) (removeLast room))\n  isNil exits\n    print \"Obvious exits: none.\"\n    print concat[ \"Obvious exits: \"  | (intersperse exits \", \") ]"})((function(){var $m; return function(){return $m || ($m = function(L_room){return (function(){

var L_exits;

L_exits = (function(){var $m; return function(){return $m || ($m = L_removeIf()((function(){var $m; return function(){return $m || ($m = L_eq()(function(){return ""}))}})())((function(){var $m; return function(){return $m || ($m = L_mapIndex()(L_hasExit)((function(){var $m; return function(){return $m || ($m = L_removeLast()(L_room))}})()))}})()))}})();
return L_isNil()(L_exits)((function(){var $m; return function(){return $m || ($m = L_print()(function(){return "Obvious exits: none."}))}})())((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "Obvious exits: "})((function(){var $m; return function(){return $m || ($m = L_intersperse()(L_exits)(function(){return ", "}))}})()))}})()))}})()))}})())})()})}})()));
runMonad(L_define()(function(){return "printItems"})(function(){return 1})(function(){return "printItems myloc = do\n  allitems <- getValue 'Items'\n  items <- findItemsInLocation myloc allitems\n  isNil items\n    items\n    print concat[ \"You can also see: \" | (intersperse (map (\\x . (at x 0)) items) ',') ]  #have to extract the name from each item"})((function(){var $m; return function(){return $m || ($m = function(L_myloc){return L_bind()((function(){var $m; return function(){return $m || ($m = L_getValue()(function(){return "Items"}))}})())((function(){var $m; return function(){return $m || ($m = function(L_allitems){return L_bind()((function(){var $m; return function(){return $m || ($m = L_findItemsInLocation()(L_myloc)(L_allitems))}})())((function(){var $m; return function(){return $m || ($m = function(L_items){return L_isNil()(L_items)(L_items)((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_strCat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "You can also see: "})((function(){var $m; return function(){return $m || ($m = L_intersperse()((function(){var $m; return function(){return $m || ($m = L_map()((function(){var $m; return function(){return $m || ($m = function(L_x){return L_at()(L_x)(function(){return 0})})}})())(L_items))}})())(function(){return ","}))}})()))}})()))}})()))}})())})}})())})}})())})}})()));
runMonad(L_define()(function(){return "findItemsInLocation"})(function(){return 2})(function(){return "findItemsInLocation myloc items = isNil items\n  items\n  eq (safeat (head items) 1) myloc\n    cons (head items) findItemsInLocation myloc (tail items)\n    do\n      print myloc\n      print (head items)\n      print (safeat (head (tail items)) 1)\n      findItemsInLocation myloc (tail items)"})((function(){var $m; return function(){return $m || ($m = function(L_myloc){return function(L_items){return L_isNil()(L_items)(L_items)((function(){var $m; return function(){return $m || ($m = L_eq()((function(){var $m; return function(){return $m || ($m = L_safeat()((function(){var $m; return function(){return $m || ($m = L_head()(L_items))}})())(function(){return 1}))}})())(L_myloc)((function(){var $m; return function(){return $m || ($m = L_cons()((function(){var $m; return function(){return $m || ($m = L_head()(L_items))}})())(L_findItemsInLocation)(L_myloc)((function(){var $m; return function(){return $m || ($m = L_tail()(L_items))}})()))}})())((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_print()(L_myloc))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_head()(L_items))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return L_bind()((function(){var $m; return function(){return $m || ($m = L_print()((function(){var $m; return function(){return $m || ($m = L_safeat()((function(){var $m; return function(){return $m || ($m = L_head()((function(){var $m; return function(){return $m || ($m = L_tail()(L_items))}})()))}})())(function(){return 1}))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___1){return L_findItemsInLocation()(L_myloc)((function(){var $m; return function(){return $m || ($m = L_tail()(L_items))}})())})}})())})}})())})}})()))}})()))}})())}})}})()));
runMonad(L_define()(function(){return "tp"})(function(){return 1})(function(){return "tp room = do\n  poke 'GameHeader' GH_PLAYER_ROOM room\n  look 0\n  "})((function(){var $m; return function(){return $m || ($m = function(L_room){return L_bind()((function(){var $m; return function(){return $m || ($m = L_poke()(function(){return "GameHeader"})(L_GH_PLAYER_ROOM)(L_room))}})())((function(){var $m; return function(){return $m || ($m = function(L__){return L_look()(function(){return 0})})}})())})}})()));
runMonad(L_define()(function(){return "isLightPresent"})(function(){return 1})(function(){return "isLightPresent myloc = do\n  light <- peek 'Items' LIGHT_SOURCE\n  where = at light 1\n  or (eq where myloc) (eq where CARRIED)"})((function(){var $m; return function(){return $m || ($m = function(L_myloc){return L_bind()((function(){var $m; return function(){return $m || ($m = L_peek()(function(){return "Items"})(L_LIGHT_SOURCE))}})())((function(){var $m; return function(){return $m || ($m = function(L_light){return (function(){

var L_where;

L_where = (function(){var $m; return function(){return $m || ($m = L_at()(L_light)(function(){return 1}))}})();
return L_or()((function(){var $m; return function(){return $m || ($m = L_eq()(L_where)(L_myloc))}})())((function(){var $m; return function(){return $m || ($m = L_eq()(L_where)(L_CARRIED))}})())})()})}})())})}})()));
runMonad(L_define()(function(){return "getInput"})(function(){return 0})(function(){return "getInput = do\n  move <- prompt (concat [\"Tell me what to do?\" ])\n  [ 0 0 ]"})((function(){var $m; return function(){return $m || ($m = L_bind()((function(){var $m; return function(){return $m || ($m = L_prompt()((function(){var $m; return function(){return $m || ($m = L_concat()((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return "Tell me what to do?"})(L_nil))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L_move){return L_cons()(function(){return 0})((function(){var $m; return function(){return $m || ($m = L_cons()(function(){return 0})(L_nil))}})())})}})()))}})()));
runMonad(L_define()(function(){return "performActions"})(function(){return 2})(function(){return "performActions verb noun = do\n  -1"})((function(){var $m; return function(){return $m || ($m = function(L_verb){return function(L_noun){return L_$_()(function(){return 1})}})}})()));
