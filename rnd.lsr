

derp =
  do
    r <- randInt 0 15
#  r <- rand
    r

make_list e c = if (eq c 0) nil (cons e (make_list e (-- c) ) )
count_down c = if (eq c -1) nil (cons c (count_down (-- c)))
count_up c = reverse (count_down c)


removeAt i list = append (take i list) (drop (++ i) list)


#randInt a b = do
#  r <- rand 0
#  floor (+ a (* r (+ (- b a) 1) ) )

shuffle list = if (eq list nil) (log "at end of list!" nil)
  do
    index <- randInt 0 (-- (length list))
    len = length list
    rest = removeAt index list
    ret <- if (eq len 1) list (cons (at list index) (shuffle rest))
    print ret

#      print index
#      print len
#      print "hello"
#      print (concat rest)


#        len = length list
#        rest = removeAt index list
#        log (append [ "index: " index " len: " len " list: " ] list)
#          log (append [ "rest => "] rest)
#            if (eq len 1) list
#              cons (at list index) (shuffle rest)


test = shuffle (count_up 3)

