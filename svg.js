var svg = (function(){
var root;

if ((typeof window !== 'undefined' && window !== null) && (!(typeof global !== 'undefined' && global !== null) || global === window)) {
  svg = root = {};
  global = window;
  module = {};
} else {
  root = typeof exports !== 'undefined' && exports !== null ? exports : this;
  Parse = require('./parse');
  Leisure = require('./leisure');
  Prim = require('./prim');
  //Prim.runRequire('./prelude');
  Prim.runRequire('./std')
;
  Prim.runRequire('./std')
;
  ReplCore = require('./replCore');
  Repl = require('./repl');
}

Prim.loading('svg.lsr')


var Nil = Parse.Nil;
var cons = Parse.cons;
var primCons = Parse.primCons;
var setType = Parse.setType;
var setDataType = Parse.setDataType;
var define = Parse.define;
var processResult = Repl.processResult;
var setContext = Leisure.setContext;
var funcContext = Leisure.funcContext;
var define = Parse.define;
var wrapContext = Leisure.wrapContext;
var markLeisureErrors = Leisure.markLeisureErrors;

module.exports =   (_require()((function(){return "maps"})))
.andThen(function(){
  _insertFields = Parse.define('insertFields', (function() {var f; return function _insertFields(){return f || (f = (function(_map){return _if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())((function(){return ""}))((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_field()((function(){var $m; return (function(){return $m || ($m = (_firstPair()(_map)))})})())))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_insertFields()((function(){var $m; return (function(){return $m || ($m = (_restPairs()(_map)))})})())))})})())(_nil)))})})())))})})())))})})());}));}})(), 1, "\\map . if (null? map) ''\n  concat [ (field (firstPair map)), (insertFields (restPairs map)) ]");;
  _svgTemplate = Parse.define('svgTemplate', (function() {var f; return function _svgTemplate(){return f || (f = (function(_attrs){return function(_contents){return _html()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" "}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_attrs)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return ">"}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_contents)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "</svg>"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})());};}));}})(), 2, "\\attrs contents . html (concat [ '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" ', attrs, '>', contents, '</svg>'])");;
  _svg = Parse.define('svg', (function() {var f; return function _svg(){return f || (f = (function(_o){return function(_map){return _svgTemplate()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "style=\"width: "}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_assocGetWithDefault()((function(){return "width"}))((function(){return 100}))(_map)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "; height: "}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_assocGetWithDefault()((function(){return "height"}))((function(){return 100}))(_map)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "\""}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())((function(){var $m; return (function(){return $m || ($m = (_o()(_id)))})})());};}));}})(), 2, "\\o map . svgTemplate (concat ['style=\"width: ', (assocGetWithDefault 'width' 100 map), '; height: ' , (assocGetWithDefault 'height' 100 map), '\"']) (o id)");;
  _svgFile = Parse.define('svgFile', (function() {var f; return function _svgFile(){return f || (f = (function(_map){return _html()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<object xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" "}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_insertFields()(_map)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "</object>"}))(_nil)))})})())))})})())))})})())))})})());}));}})(), 1, "\\map . html (concat [ '<object xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" ', (insertFields map), '</object>' ] )");;
  _field = Parse.define('field', (function() {var f; return function _field(){return f || (f = (function(_cell){return _concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_key()(_cell)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "=\""}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_value()(_cell)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "\" "}))(_nil)))})})())))})})())))})})())))})})());}));}})(), 1, "\\cell . concat [ (key cell), '=\"', (value cell), '\" ' ]");;
  _defaultCircleMap = Parse.define('defaultCircleMap', (function _defaultCircleMap() {return ((_assocFromList()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "cx"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "cy"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "r"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 40}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke-width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 2}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "fill"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "red"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())));}), 0, "assocFromList [ 'cx', 50, 'cy', 50, 'r', 40, 'stroke', 'black', 'stroke-width', 2, 'fill', 'red' ]");;
  _defaultRectMap = Parse.define('defaultRectMap', (function _defaultRectMap() {return ((_assocFromList()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "x"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 1}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "y"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 1}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "height"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke-width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 2}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "fill"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "green"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())));}), 0, "assocFromList [ 'x', 1, 'y', 1, 'width', 50, 'height', 50, 'stroke', 'black', 'stroke-width', 2, 'fill', 'green' ]");;
  _defaultLineMap = Parse.define('defaultLineMap', (function _defaultLineMap() {return ((_assocFromList()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "x1"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 0}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "y1"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 0}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "x2"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "y2"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke-width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 2}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())));}), 0, "assocFromList [ 'x1', 0, 'y1', 0, 'x2', 50, 'y2', 50, 'stroke', 'black', 'stroke-width', 2 ]");;
  _defaultEllipseMap = Parse.define('defaultEllipseMap', (function _defaultEllipseMap() {return ((_assocFromList()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "cx"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "cy"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 50}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "rx"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 40}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "ry"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 40}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke-width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 2}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "fill"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "blue"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())));}), 0, "assocFromList [ 'cx', 50, 'cy', 50, 'rx', 40, 'ry', 40, 'stroke', 'black', 'stroke-width', 2, 'fill', 'blue' ]");;
  _defaultTextMap = Parse.define('defaultTextMap', (function _defaultTextMap() {return ((_assocFromList()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "x"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 0}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "y"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 10}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke-width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 2}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "fill"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())));}), 0, "assocFromList [ 'x', 0, 'y', 10, 'stroke', 'black', 'stroke-width', 2, 'fill', 'black' ]");;
  _defaultPolygonMap = Parse.define('defaultPolygonMap', (function _defaultPolygonMap() {return ((_assocFromList()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "points"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "350,75  379,161 469,161 397,215 423,301 350,250 277,301 303,215 231,161 321,161"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "black"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "stroke-width"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return 2}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "fill"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "yellow"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())));}), 0, "assocFromList [ 'points', '350,75  379,161 469,161 397,215 423,301 350,250 277,301 303,215 231,161 321,161', 'stroke', 'black', 'stroke-width', 2, 'fill', 'yellow' ]");;
  _svgNode = Parse.define('svgNode', (function() {var f; return function _svgNode(){return f || (f = (Parse.setDataType(function(_contents){return Parse.setType(function(_f){return _f()(_contents);}, 'svgNode');}, 'svgNode')));}})(), 1, "\\contents . \\f . f contents");;
  _svgNodes = Parse.define('svgNodes', (function() {var f; return function _svgNodes(){return f || (f = (function(_nodeList){return _nodeList()((function(){var $m; return (function(){return $m || ($m = (function(_h){return function(_t){return function(_D){return _cons()((function(){var $m; return (function(){return $m || ($m = (_h()(_id)))})})())((function(){var $m; return (function(){return $m || ($m = (_svgNodes()(_t)))})})());};};}))})})())(_nil);}));}})(), 1, "\\nodeList . nodeList (\\h t D . cons (h id) (svgNodes t)) nil");;
  _svgConcat = Parse.define('svgConcat', (function() {var f; return function _svgConcat(){return f || (f = (function(_nodeList){return _svgNode()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_svgNodes()(_nodeList)))})})())))})})());}));}})(), 1, "\\nodeList . svgNode (concat (svgNodes nodeList))");;
  _svgElement = Parse.define('svgElement', (function() {var f; return function _svgElement(){return f || (f = (function(_name){return function(_map){return _svgNode()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<"}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_name)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return " "}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_insertFields()(_map)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "/>"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})());};}));}})(), 2, "\\name map . svgNode (concat [ '<', name, ' ', (insertFields map), '/>' ])");;
  _svgMeasure = Parse.define('svgMeasure', (function() {var f; return function _svgMeasure(){return f || (f = (function(_content){return _primSvgMeasure()(_content);}));}})(), 1, "\\content . primSvgMeasure content");;
  _svgPresent = Parse.define('svgPresent', (function() {var f; return function _svgPresent(){return f || (f = (function(_content){return _svgMeasure()(_content)((function(){var $m; return (function(){return $m || ($m = (function(_x){return function(_y){return function(_w){return function(_h){return _svgTemplate()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "width='"}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_w)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "' height='"}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_h)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "' viewbox='"}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_x)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return " "}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_y)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return " "}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_w)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return " "}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_h)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "'"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})())(_content);};};};}))})})());}));}})(), 1, "\\content . svgMeasure content \\x y w h .\n  svgTemplate (concat [\"width='\", w, \"' height='\", h, \"' viewbox='\", x, ' ', y, ' ', w, ' ', h, \"'\"]) content");;
  _circle = Parse.define('circle', (function() {var f; return function _circle(){return f || (f = (function(_map){return _svgElement()((function(){return "circle"}))((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())(_defaultCircleMap)(_map)))})})());}));}})(), 1, "\\map . svgElement 'circle' (if (null? map) defaultCircleMap map)");;
  _rect = Parse.define('rect', (function() {var f; return function _rect(){return f || (f = (function(_map){return _svgElement()((function(){return "rect"}))((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())(_defaultRectMap)(_map)))})})());}));}})(), 1, "\\map . svgElement 'rect' (if (null? map) defaultRectMap map)");;
  _ellipse = Parse.define('ellipse', (function() {var f; return function _ellipse(){return f || (f = (function(_map){return _svgElement()((function(){return "ellipse"}))((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())(_defaultEllipseMap)(_map)))})})());}));}})(), 1, "\\map . svgElement 'ellipse' (if (null? map) defaultEllipseMap map)");;
  _line = Parse.define('line', (function() {var f; return function _line(){return f || (f = (function(_map){return _svgElement()((function(){return "line"}))((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())(_defaultLineMap)(_map)))})})());}));}})(), 1, "\\map . svgElement 'line' (if (null? map) defaultLineMap map)");;
  _text = Parse.define('text', (function() {var f; return function _text(){return f || (f = (function(_t){return function(_map){return _svgNode()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<text "}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_insertFields()((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())(_defaultTextMap)(_map)))})})())))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return ">"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_t)))})})())((function(){return "undefined"}))(_t)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "</text>"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})());};}));}})(), 2, "\\t map . svgNode (concat [ '<text ', (insertFields (if (null? map) defaultTextMap map)), '>', (if (null? t) 'undefined' t), '</text>' ])");;
  _polygon = Parse.define('polygon', (function() {var f; return function _polygon(){return f || (f = (function(_map){return _svgElement()((function(){return "polygon"}))((function(){var $m; return (function(){return $m || ($m = (_if()((function(){var $m; return (function(){return $m || ($m = (_null$e()(_map)))})})())(_defaultPolygonMap)(_map)))})})());}));}})(), 1, "\\map . svgElement 'polygon' (if (null? map) defaultPolygonMap map)");;
  _group = Parse.define('group', (function() {var f; return function _group(){return f || (f = (function(_elem){return _svgNode()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<g>"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_elem()(_id)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "</g>"}))(_nil)))})})())))})})())))})})())))})})());}));}})(), 1, "\\elem . svgNode (concat [ '<g>', (elem id), '</g>' ])");;
  _translate = Parse.define('translate', (function() {var f; return function _translate(){return f || (f = (function(_elem){return function(_x){return function(_y){return _svgNode()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<g transform=\"translate("}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_x)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return ", "}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_y)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return ")\">"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_elem()(_id)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "</g>"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})())))})})())))})})());};};}));}})(), 3, "\\elem x y . svgNode (concat ['<g transform=\"translate(', x, ', ', y, ')\">', (elem id), '</g>' ])");;
  _rotate = Parse.define('rotate', (function() {var f; return function _rotate(){return f || (f = (function(_elem){return function(_r){return _svgNode()((function(){var $m; return (function(){return $m || ($m = (_concat()((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "<g transform=\"rotate("}))((function(){var $m; return (function(){return $m || ($m = (_cons()(_r)((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return ")\">"}))((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){var $m; return (function(){return $m || ($m = (_elem()(_id)))})})())((function(){var $m; return (function(){return $m || ($m = (_cons()((function(){return "</g>"}))(_nil)))})})())))})})())))})})())))})})())))})})())))})})());};}));}})(), 2, "\\elem r . svgNode (concat ['<g transform=\"rotate(', r, ')\">', (elem id), '</g>' ])");;
})
.andThen(function(){ return   (3)})
;
if (typeof window != 'undefined') Prim.runMonad(module.exports, Prim.defaultEnv, function(){});
}).call(this)