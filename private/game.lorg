* Intro
Leisure documents can contain classic games, like Connect Four...

[[http://www.abstractstrategy.com/connect-four.jpg]]








* Game
:properties:
:note: sidebar
:end:
[[org:user1/userName]]
[[org:board1]]
* Data
:properties:
:hidden: true
:end:
This is the board data and the user data...
- w = white
- b = black
- r = red
- other = gray
#+NAME: board1
#+BEGIN_SRC yaml :flowLevel 2
type: board
pieces:
  - [w, w, w, w, w, w, w]
  - [w, w, w, w, w, w, w]
  - [w, w, w, w, w, w, w]
  - [w, w, w, w, w, w, w]
  - [w, w, w, w, w, w, w]
  - [w, w, w, w, w, w, w]
playerCount: 0
colors: rbg
playerNames: []
#+END_SRC
#+NAME: user1
#+BEGIN_SRC yaml :local
type: user
color: r
number: -1
name: Anonymous
#+END_SRC

* Bindings
:properties:
:hidden: true
:end:
#+BEGIN_SRC coffee :results def :observe user
App.updateUser = (user)->
  console.log "updating from change to user data"
  board = getDataNamed 'board1'
  board.playerNames[user.number] = user.name
  setDataNamed 'board1', board

@update = App.updateUser
#+END_SRC

#+BEGIN_SRC html :defview user/userName
Name: <input type='text' data-value='name'></input>
#+END_SRC

#+BEGIN_SRC html :defview board
<style>@import "jquery-ui/css/leisure/jquery-ui-1.9.2.custom.min.css";</style>
<div style='float: left'>
  <div style='background: url(/connect4/board.svg) 0 0 / 100% 100% no-repeat; padding: 10px'>
    <table style='text-align: center'>
      {{#each pieces}}
      <tr>
        {{#each this}}
          <td>
            <img src='/connect4/{{this}}Piece.svg' onerror='this.src="/connect4/gPiece.svg"' style='vertical-align: middle'>
          </td>
        {{/each}}
      </tr>
      {{/each}}
    </table>
  </div>
</div>
<div style='float: left; margin-left: 10px; width: 15ex'>
  <h2 style='margin-top: 0'>Players</h2>
  {{#each playerNames}}
    <div>{{this}}</div>
  {{/each}}
</div>
<script>App.hookupTable()</script>
#+END_SRC
* Support code
:properties:
:hidden: true
:end:
#+BEGIN_SRC coffee :results def
{
  viewBlock,
  setData,
  getDataNamed,
  setDataNamed,
} = Leisure
pieceTypes = "wrb"

App.hookupTable = ->
  $(Templating.currentViewLink)
    .closest("[data-org-headline='1']")
    .attr 'game', ''
  $(Templating.currentView).bind 'click', (e)->
    if block = viewBlock e.target
      data = block.yaml
      td = e.target.parentElement
      col = td.cellIndex
      row = td.parentElement.rowIndex
      if row? && col?
        data.pieces[row][col] = pieceTypes[(1 + pieceTypes.indexOf data.pieces[row][col]) % pieceTypes.length]
      setData block._id, data

$(document.head).prepend $("""
<style>
[game] {
  position: fixed !important;
  top: 50px !important;
  right: 10px !important;
  z-index: 1 !important;
}
.slides [game] { left: auto !important; }
.googie.slides [game] { top: 300px !important; }
.cthulhu.slides [game] { top: 300px !important; }
.steampunk.slides [game] { top: 150px !important; }
.flat.slides [game] { top: 182px !important; }
.console.slides [game] { top: 182px !important; }
.slides [game] [data-org-type='text'] { display: none; }
</style>
""")

user = getDataNamed 'user1'
if user.number == -1
  board = getDataNamed 'board1'
  console.log JSON.stringify board
  user.number = board.playerCount++
  setDataNamed 'board1', board
  setDataNamed 'user1', user
  App.updateUser user

Leisure.toggleLeisureBar()
Leisure.setTheme 'googie'
#+END_SRC
