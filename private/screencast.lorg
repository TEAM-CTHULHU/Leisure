* NOTE: TRY TO GET TEST CASES WORKING

* This is Leisure, a document-based computing environment that runs on the web
* Leisure documents can contain rich, interactive content, code, and data
** They're also persistent -- they remember changes you make
** That makes each Leisure document like its own tiny virtual machine
* Leisure is a computing environment that supports creativity
** You can change a document's theme (steampunk/flat/googie)
** You can use Leisure documents for multiuser web applications, like this game
* Code and data can be accessable to the user
** (Use the Leisure bar to Reveal hidden code and data)
*** (hover over the wrench to show the hidden attribute)
** Small overview of code block types (pin board)
*** board data in YAML format
**** Data is human readable (YAML format)
**** It's easy to see what's going on
**** It's editable and tied dynamically to the content
***** (change w to r)
***** (add w to end of row)
***** (Click a piece on the board)
*** observer code that updates when user data changes
**** plugs the user name into the playerNames list
**** (change name)
*** two views which update when local or board data change
**** View layouts dynamically update, as well
**** (Put "Aweseome" in front of "Name")
**** Bret Victor value sliders
***** (change view padding)
* Leisure documents are automatically collaborative
** There's normally no difference between development and runtime
** So you can collaboratively use and develop Leisure documents
** Here is some local data
*** it's initialized from the document
*** it persists in browser storage
*** changes aren't sent to the server
* Clicking the Leisure button once presents the documents as slides
* Leisure uses Org file format
** Clicking the Leisure button another time shows the org file source of the whole document
** Clicking the Leisure button a third time cycles back to fancy mode
** In fancy mode, you can show source for a single slide
*** (Show Game slide source)
**** This just has a 'note' property and two links
**** The links are how Leisure presents views
*** (Show Data slide source)
**** mention 'hidden' property
*** You can edit the document in either type of view
** You can drop images
*** Show intro slide source in another page
*** Show third page with another picture connect 4
*** Dropping an image into the fancy page updates the source
** documents are actually virtual
*** broken into chunks called "data blocks"
*** stored in a database and shared
*** allow efficient in-place updating
*** data that's not in view doesn't have to be rendered to the user
*** scalable
*** data blocks can contain metedata, like preparsed information
* Besides standard languages like JavaScript and CoffeeScript, Leisure provides its own language
** Dynamically typed, lazy, pure, functional, homoiconic language with metaprogramming
** See results in the document (with JavaScript and CoffeeScript available soon)
** graphical values
** Infinite streams
** Display partial application
** show ASTs
** code can change the Leisure environment (uncomment theme setting)




* development features
- test cases
- repository comments
