*** Prelude Definitions
--
<link href='http://fonts.googleapis.com/css?family=Oxygen:400,700' rel='stylesheet' type='text/css'>
<link href='http://gdurl.com/Whmv' rel='stylesheet' type='text/css'>
<div id="header" style="width: 1300px; margin-left: -25px;"><h3 class="ui-widget-header ui-button-text-only" style="text-align: center; position: relative; width: 1300px; padding: 5px 0;"><div style="position: absolute; left: 1ex;">Leisure: Fun with Implementation</div><div style="position: absolute; right: 1ex;">Lambda Lounge KC</div>
July 24th, 2013</h3></div>
```
toggleHidden=do
  hidden <- getValue 'hiddenPages'
  setHidden (not hidden)

setHidden hide=do
  js [
    hide
      "$(document.body).removeClass('showHidden'); $(document.body).addClass('hideControls')"
      "$(document.body).addClass('showHidden hideControls')"]
  setValue 'hiddenPages' hide 

openUriButton=do
  fname <- js ["$('#saveAsText').val()"]
  open fname

saveButton=do
  setHidden true
  save

saveAsButton=do
  setHidden true
  fname <- js ["$('#saveAsText').val()"]
  saveAs fname
```

*** Leisure Controls
```
#@auto "mode": "notebook"
#@hidden
do
  setValue 'hiddenPages' true
  setHidden true
  uri <- getURI
  link <- getLink
  printValue (html concat[
    "Share: <a href='"
    link
    "'>"
    link
    "</a><br>"
    "<button id='saveButton'>Save</button><br>"
    "<button id='openUriButton'>Open</button>"
    "<input id='openUriText' type='text'><br>"
    "<button id='saveAsButton'>Save as</button>"
    "<input id='saveAsText' type='text'><br>"
    "<button id='toggleHiddenPages' type='checkbox'>Toggle Hidden Pages</button><br>"
    "<button id='openFromGdriveButton'>Open from Google Drive</button>"])
  bindEvent '#openFromGdriveButton' 'click' \e . gdriveOpen
  bindEvent '#saveButton' 'click' \e . saveButton
  bindEvent '#openUriButton' 'click' \e . openUriButton
  bindEvent '#saveAsButton' 'click' \e . saveAsButton
  bindEvent '#toggleHiddenPages' 'click' \e . toggleHidden
  js ["$('#openUriText').val('" uri "')"]
  js ["$('#saveAsText').val('" uri "')"]
  js ["window.setTimeout(function(){$('[leisurenode=code]').addClass('ui-widget-overlay ui-corner-all').attr('style', 'width: auto; opacity: 1')}, 1)"]
  js ["window.initButton = function(btn){window.setTimeout(function(){var p = btn[0].parentElement; if (p.firstChild != p.lastChild && !p.firstChild.initialized){p.firstChild.initialized = true; $(p.firstChild).attr('class', 'kill-button').html('').button({icons: {primary: 'ui-icon-circle-close'}, text: false}); $([p.firstChild.nextSibling.nextSibling, p.lastChild]).css('padding', '1px').css('margin-top', '1px')}}, 1)}"]
  js ["window.setTimeout(function(){$('.controls').each(function(index, c){if (c.firstChild==c.lastChild){$(c.firstChild).attr('class', 'arrow-button').html('').button({icons: {primary: 'ui-icon-arrowthick-1-e'}, text: false}).on('click', function(){initButton($(this))})}})}, 1)"]
  js ["window.setTimeout(function(){$('.ui-state-error').removeClass('.ui-state-error')}, 100)"]
  js ["$('[maindoc]').append($('#header'))"]
```
*** Tests

```
increasing x = [x | increasing x + 1]
naturals = increasing 1

tNth l n = trampolineCall (trampNth l n)
trampNth l n = n == 0
  head l
  trampoline trampNth (tail l) n - 1

tNthTail l n = trampolineCall (trampNthTail l n)
trampNthTail l n = n == 0
  l
  trampoline trampNthTail t n - 1

at [1 2 3 4] 2
tNth [1 2 3 4] 2
at naturals 1000
tNth naturals 1000
at naturals 2000
tNth naturals 2000
at naturals 3000
tNth naturals 3000
at naturals 10000
tNth naturals 10000
```
