*** Leisure control code
-
```


toggleHidden = do
  hidden <- getValue 'hiddenPages'
  setHidden (not hidden)

setHidden hide=do
  js (hide
    "$(document.body).removeClass('showHidden'); $(document.body).addClass('hideControls')"
    "$(document.body).addClass('showHidden hideControls')")
  setValue 'hiddenPages' hide

openUriButton=do
  fname <- js "$('#saveAsText').val()"
  open fname

saveButton=do
  setHidden true
  save

saveAsButton=do
  setHidden true
  fname <- js "$('#saveAsText').val()"
  saveAs fname

presentPage pageName = do
  js["$('.presentPage').removeClass('.presentPage'); $('[leisuresection=\"" pageName  "\"]').addClass('.presentPage'); Notebook.enableEditing(false)"]

hidePage = do
  js["$('.presentPage').removeClass('.presentPage'); Notebook.enableEditing(true)"]

```
*** Leisure Controls
<button style='margin-top: 24px' id='saveButton'>Save</button><br>
<button id='openUriButton'>Open</button>
<input id='openUriText' type='text'><br>
<button id='saveAsButton'>Save as</button>
<input id='saveAsText' type='text'><br>
<button id='toggleHiddenPages' type='checkbox'>Toggle Hidden Pages</button><br>
<button id='openFromGdriveButton'>Open from Google Drive</button>
*** Leisure Control Code
-
```
#@auto "mode": "notebook"
#@hidden
do
  js "console.log('loading std')"
  require 'std.lsr'
  js "console.log('done loading std')"
  setValue 'hiddenPages' true
  bindEvent '#openFromGdriveButton' 'click' \e . gdriveOpen
  bindEvent '#saveButton' 'click' \e . saveButton
  bindEvent '#openUriButton' 'click' \e . openUriButton
  bindEvent '#saveAsButton' 'click' \e . saveAsButton
  bindEvent '#toggleHiddenPages' 'click' \e . toggleHidden
  js["$('#openUriText').val('" uri "')"]
  js["$('#saveAsText').val('" uri "')"]
  js["window.setTimeout(function(){$('[leisurenode=code]').addClass('ui-widget-overlay ui-corner-all').attr('style', 'width: auto; height: auto; opacity: 1')}, 1)"]
  js["window.initButton = function(btn){window.setTimeout(function(){var p = btn[0].parentElement; if (p.firstChild != p.lastChild && !p.firstChild.initialized){p.firstChild.initialized = true; $(p.firstChild).attr('class', 'kill-button').html('').button({icons: {primary: 'ui-icon-circle-close'}, text: false}); $([p.firstChild.nextSibling.nextSibling, p.lastChild]).css('padding', '1px').css('margin-top', '1px')}}, 1)}"]
  js["window.setTimeout(function(){$('.controls').each(function(index, c){if (c.firstChild==c.lastChild){$(c.firstChild).attr('class', 'arrow-button').html('').button({icons: {primary: 'ui-icon-arrowthick-1-e'}, text: false}).on('click', function(){initButton($(this))})}})}, 1)"]
  js["window.setTimeout(function(){$('.ui-state-error').removeClass('.ui-state-error')}, 100)"]
  js["$('[maindoc]').append($('#header'))"]
```
*** Secret stuff
-
Stop double-click grabbing

```
#@auto "mode": "notebook"
js "$('#outputContainer').dblclick(function(evt){evt.stopPropagation()})"
```

*** Tests

```
tNth l n = trampolineCall (trampNth l n)
trampNth l n = n == 0
  head l
  trampoline
    trampNth (tail l) n - 1
increasing x = [x | increasing x + 1]
naturals = increasing 1

at [1 2 3 4] 2
tNth [1 2 3 4] 2
```
