L_runMonads([
  function(){return resolve(L_define)(lazy("if"))(lazy(0))(lazy("if = id"))(L_id)},
  function(){return resolve(L_define)(lazy("afetch"))(lazy(2))(lazy("afetch k alist  = alist (\\h t D . h \\key value . eq key k value (afetch k t)) nil"))((function(){var $m; return function(){return $m || ($m = function(L_k){return function(L_alist){return resolve(L_alist)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_h)((function(){var $m; return function(){return $m || ($m = function(L_key){return function(L_value){return resolve(L_eq)(L_key)(L_k)(L_value)((function(){var $m; return function(){return $m || ($m = resolve(L_afetch)(L_k)(L_t))}})())}})}})())}}})}})())(L_nil)}})}})())},
  function(){return resolve(L_define)(lazy("aconsf"))(lazy(3))(lazy("aconsf key value list = acons key value (aremove key list)"))((function(){var $m; return function(){return $m || ($m = function(L_key){return function(L_value){return function(L_list){return resolve(L_acons)(L_key)(L_value)((function(){var $m; return function(){return $m || ($m = resolve(L_aremove)(L_key)(L_list))}})())}}})}})())},
  function(){return resolve(L_define)(lazy("aremove"))(lazy(2))(lazy("aremove key list = isNil list\n  nil\n  eq (head (head list)) key\n    aremove key (tail list)\n    aconsPair (head list) (aremove key (tail list))"))((function(){var $m; return function(){return $m || ($m = function(L_key){return function(L_list){return resolve(L_isNil)(L_list)(L_nil)((function(){var $m; return function(){return $m || ($m = resolve(L_eq)((function(){var $m; return function(){return $m || ($m = resolve(L_head)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})()))}})())(L_key)((function(){var $m; return function(){return $m || ($m = resolve(L_aremove)(L_key)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_aconsPair)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_aremove)(L_key)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})()))}})()))}})()))}})())}})}})())},
  function(){return resolve(L_defMacro)(lazy("when"))((function(){var $m; return function(){return $m || ($m = function(L_line){return resolve(L_line)((function(){var $m; return function(){return $m || ($m = function(L_cond){return function(L_rest){return resolve(L_cons)(L_cond)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("do"))(L_rest))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("nil"))(L_nil))}})()))}})())}})}})())})}})())},
  function(){return resolve(L_addTokenGroup)(lazy("js["))(lazy("]"))},
  function(){return resolve(L_defMacro)(lazy("js["))((function(){var $m; return function(){return $m || ($m = function(L_list){return resolve(L_cons)(lazy("js"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("strCat"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("flatten"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_listify)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})()))}})())(L_nil))}})())(L_nil))}})()))}})())(L_nil))}})()))}})())(L_nil))}})())})}})())},
  function(){return resolve(L_define)(lazy("html"))(lazy(1))(lazy("html x = \\f . f x"))((function(){var $m; return function(){return $m || ($m = setDataType(function(L_x){return setType(function(L_f){return resolve(L_f)(L_x)}, 'html')}, 'html'))}})())},
  function(){return resolve(L_define)(lazy("iszero"))(lazy(0))(lazy("iszero = eq 0"))((function(){var $m; return function(){return $m || ($m = resolve(L_eq)(lazy(0)))}})())},
  function(){return resolve(L_define)(lazy("positive"))(lazy(0))(lazy("positive = 0 <"))((function(){var $m; return function(){return $m || ($m = resolve(L_$y)(lazy(0)))}})())},
  function(){return resolve(L_addToken)(lazy("--"))},
  function(){return resolve(L_addToken)(lazy("++"))},
  function(){return resolve(L_define)(lazy("--"))(lazy(0))(lazy("-- = (flip (-)) 1"))((function(){var $m; return function(){return $m || ($m = resolve(L_flip)(L_$_)(lazy(1)))}})())},
  function(){return resolve(L_define)(lazy("++"))(lazy(0))(lazy("++ = (1 +)"))((function(){var $m; return function(){return $m || ($m = resolve(L_$o)(lazy(1)))}})())},
  function(){return resolve(L_define)(lazy("intercalate"))(lazy(2))(lazy("intercalate x l = concat (intersperse x l)"))((function(){var $m; return function(){return $m || ($m = function(L_x){return function(L_l){return resolve(L_concat)((function(){var $m; return function(){return $m || ($m = resolve(L_intersperse)(L_x)(L_l))}})())}})}})())},
  function(){return resolve(L_define)(lazy("visit"))(lazy(2))(lazy("visit func l = \\\\\n  result = func func l\n  .\n  isCons result\n    result \\h t . cons (visit func h) (visit func t)\n    result"))((function(){var $m; return function(){return $m || ($m = function(L_func){return function(L_l){return (function(){

var L_result;

L_result = (function(){var $m; return function(){return $m || ($m = resolve(L_func)(L_func)(L_l))}})();
return resolve(L_isCons)(L_result)((function(){var $m; return function(){return $m || ($m = resolve(L_result)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_visit)(L_func)(L_h))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_visit)(L_func)(L_t))}})())}})}})()))}})())(L_result)})()}})}})())},
  function(){return resolve(L_define)(lazy("simplify"))(lazy(1))(lazy("simplify exprString = do\n  list <- scanLineM exprString\n  visit (\\func x . isToken x (tokenString x) ((isParens x) (visit func (parensContent x)) x)) list"))((function(){var $m; return function(){return $m || ($m = function(L_exprString){return resolve(L_bind)((function(){var $m; return function(){return $m || ($m = resolve(L_scanLineM)(L_exprString))}})())((function(){var $m; return function(){return $m || ($m = function(L_list){return resolve(L_visit)((function(){var $m; return function(){return $m || ($m = function(L_func){return function(L_x){return resolve(L_isToken)(L_x)((function(){var $m; return function(){return $m || ($m = resolve(L_tokenString)(L_x))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_isParens)(L_x)((function(){var $m; return function(){return $m || ($m = resolve(L_visit)(L_func)((function(){var $m; return function(){return $m || ($m = resolve(L_parensContent)(L_x))}})()))}})())(L_x))}})())}})}})())(L_list)})}})())})}})())},
  function(){return resolve(L_define)(lazy("doall"))(lazy(0))(lazy("doall = foldr1 (\\el res . bind el \\_ . res)"))((function(){var $m; return function(){return $m || ($m = resolve(L_foldr1)((function(){var $m; return function(){return $m || ($m = function(L_el){return function(L_res){return resolve(L_bind)(L_el)((function(){var $m; return function(){return $m || ($m = function(L__){return resolve(L_res)})}})())}})}})()))}})())},
  function(){return resolve(L_define)(lazy("requireJS"))(lazy(1))(lazy("requireJS file = bind (getValue 'requiredFiles')\n  \\files . contains files file\n    false\n    bind (loadJS file)\n      \\result . result\n        \\x . left x\n        \\_ . bind (setValue 'requiredFiles' (cons file files))\n          \\_ . right true"))((function(){var $m; return function(){return $m || ($m = function(L_file){return resolve(L_bind)((function(){var $m; return function(){return $m || ($m = resolve(L_getValue)(lazy("requiredFiles")))}})())((function(){var $m; return function(){return $m || ($m = function(L_files){return resolve(L_contains)(L_files)(L_file)(L_false)((function(){var $m; return function(){return $m || ($m = resolve(L_bind)((function(){var $m; return function(){return $m || ($m = resolve(L_loadJS)(L_file))}})())((function(){var $m; return function(){return $m || ($m = function(L_result){return resolve(L_result)((function(){var $m; return function(){return $m || ($m = function(L_x){return resolve(L_left)(L_x)})}})())((function(){var $m; return function(){return $m || ($m = function(L__){return resolve(L_bind)((function(){var $m; return function(){return $m || ($m = resolve(L_setValue)(lazy("requiredFiles"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_file)(L_files))}})()))}})())((function(){var $m; return function(){return $m || ($m = function(L___0){return resolve(L_right)(L_true)})}})())})}})())})}})()))}})())})}})())})}})())},
  function(){return resolve(L_define)(lazy("loadJS"))(lazy(1))(lazy("loadJS file = bind (readFile file)\n  \\result . result\n    \\err . err\n    \\contents . js contents"))((function(){var $m; return function(){return $m || ($m = function(L_file){return resolve(L_bind)((function(){var $m; return function(){return $m || ($m = resolve(L_readFile)(L_file))}})())((function(){var $m; return function(){return $m || ($m = function(L_result){return resolve(L_result)((function(){var $m; return function(){return $m || ($m = function(L_err){return resolve(L_err)})}})())((function(){var $m; return function(){return $m || ($m = function(L_contents){return resolve(L_js)(L_contents)})}})())})}})())})}})())},
  function(){return resolve(L_define)(lazy("findOption"))(lazy(2))(lazy("findOption func list = do\n  result = func (head list)\n  isNil list\n    none\n    isNone result\n      findOption func (tail list)\n      result"))((function(){var $m; return function(){return $m || ($m = function(L_func){return function(L_list){return (function(){

var L_result;

L_result = (function(){var $m; return function(){return $m || ($m = resolve(L_func)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})()))}})();
return resolve(L_isNil)(L_list)(L_none)((function(){var $m; return function(){return $m || ($m = resolve(L_isNone)(L_result)((function(){var $m; return function(){return $m || ($m = resolve(L_findOption)(L_func)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})()))}})())(L_result))}})())})()}})}})())},
  function(){return resolve(L_define)(lazy("dlempty"))(lazy(0))(lazy("dlempty = id"))(L_id)},
  function(){return resolve(L_define)(lazy("dl"))(lazy(1))(lazy("dl item = \\rest . item:rest"))((function(){var $m; return function(){return $m || ($m = setDataType(function(L_item){return setType(function(L_rest){return resolve(L_cons)(L_item)(L_rest)}, 'dl')}, 'dl'))}})())},
  function(){return resolve(L_define)(lazy("dlPush"))(lazy(2))(lazy("dlPush list item = dlAppend list (dl item)"))((function(){var $m; return function(){return $m || ($m = function(L_list){return function(L_item){return resolve(L_dlAppend)(L_list)((function(){var $m; return function(){return $m || ($m = resolve(L_dl)(L_item))}})())}})}})())},
  function(){return resolve(L_define)(lazy("dlAppend"))(lazy(2))(lazy("dlAppend a b = \\rest . a (b rest)"))((function(){var $m; return function(){return $m || ($m = setDataType(function(L_a){return function(L_b){return setType(function(L_rest){return resolve(L_a)((function(){var $m; return function(){return $m || ($m = resolve(L_b)(L_rest))}})())}, 'dlAppend')}}, 'dlAppend'))}})())},
  function(){return resolve(L_define)(lazy("remove"))(lazy(2))(lazy("remove x l = removeIf (eq x) l"))((function(){var $m; return function(){return $m || ($m = function(L_x){return function(L_l){return resolve(L_removeIf)((function(){var $m; return function(){return $m || ($m = resolve(L_eq)(L_x))}})())(L_l)}})}})())},
  function(){return resolve(L_define)(lazy("removeIf"))(lazy(2))(lazy("removeIf f l = filter (compose not f) l"))((function(){var $m; return function(){return $m || ($m = function(L_f){return function(L_l){return resolve(L_filter)((function(){var $m; return function(){return $m || ($m = resolve(L_compose)(L_not)(L_f))}})())(L_l)}})}})())},
  function(){return resolve(L_define)(lazy("any"))(lazy(2))(lazy("any f l = find f l (\\el . true) false"))((function(){var $m; return function(){return $m || ($m = function(L_f){return function(L_l){return resolve(L_find)(L_f)(L_l)((function(){var $m; return function(){return $m || ($m = function(L_el){return resolve(L_true)})}})())(L_false)}})}})())},
  function(){return resolve(L_define)(lazy("all"))(lazy(2))(lazy("all f l = not any (compose not f) l"))((function(){var $m; return function(){return $m || ($m = function(L_f){return function(L_l){return resolve(L_not)(L_any)((function(){var $m; return function(){return $m || ($m = resolve(L_compose)(L_not)(L_f))}})())(L_l)}})}})())},
  function(){return resolve(L_define)(lazy("take"))(lazy(2))(lazy("take n list = positive n\n  list\n    \\h t D . cons h (take (-- n) t)\n    nil\n  nil"))((function(){var $m; return function(){return $m || ($m = function(L_n){return function(L_list){return resolve(L_positive)(L_n)((function(){var $m; return function(){return $m || ($m = resolve(L_list)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_cons)(L_h)((function(){var $m; return function(){return $m || ($m = resolve(L_take)((function(){var $m; return function(){return $m || ($m = resolve(L_$_$_)(L_n))}})())(L_t))}})())}}})}})())(L_nil))}})())(L_nil)}})}})())},
  function(){return resolve(L_define)(lazy("takeWhile"))(lazy(2))(lazy("takeWhile predicate list = list\n  \\h t D . predicate (head list)\n    cons h (takeWhile predicate t)\n    nil\n  nil"))((function(){var $m; return function(){return $m || ($m = function(L_predicate){return function(L_list){return resolve(L_list)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_predicate)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_h)((function(){var $m; return function(){return $m || ($m = resolve(L_takeWhile)(L_predicate)(L_t))}})()))}})())(L_nil)}}})}})())(L_nil)}})}})())},
  function(){return resolve(L_define)(lazy("drop"))(lazy(2))(lazy("drop x list = positive x\n  list\n    \\h t D . drop (-- x) t\n    nil\n  list"))((function(){var $m; return function(){return $m || ($m = function(L_x){return function(L_list){return resolve(L_positive)(L_x)((function(){var $m; return function(){return $m || ($m = resolve(L_list)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_drop)((function(){var $m; return function(){return $m || ($m = resolve(L_$_$_)(L_x))}})())(L_t)}}})}})())(L_nil))}})())(L_list)}})}})())},
  function(){return resolve(L_define)(lazy("dropWhile"))(lazy(2))(lazy("dropWhile predicate list = list\n  \\h t D . predicate h\n    dropWhile predicate t\n    list\n  nil"))((function(){var $m; return function(){return $m || ($m = function(L_predicate){return function(L_list){return resolve(L_list)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_predicate)(L_h)((function(){var $m; return function(){return $m || ($m = resolve(L_dropWhile)(L_predicate)(L_t))}})())(L_list)}}})}})())(L_nil)}})}})())},
  function(){return resolve(L_define)(lazy("dropLast"))(lazy(2))(lazy("dropLast n list = reverse (drop n (reverse list))"))((function(){var $m; return function(){return $m || ($m = function(L_n){return function(L_list){return resolve(L_reverse)((function(){var $m; return function(){return $m || ($m = resolve(L_drop)(L_n)((function(){var $m; return function(){return $m || ($m = resolve(L_reverse)(L_list))}})()))}})())}})}})())},
  function(){return resolve(L_define)(lazy("box"))(lazy(2))(lazy("box n list = list == nil\n  nil\n  [(take n list) | box n (drop n list)]"))((function(){var $m; return function(){return $m || ($m = function(L_n){return function(L_list){return resolve(L_$p$p)(L_list)(L_nil)(L_nil)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_take)(L_n)(L_list))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_box)(L_n)((function(){var $m; return function(){return $m || ($m = resolve(L_drop)(L_n)(L_list))}})()))}})()))}})())}})}})())},
  function(){return resolve(L_define)(lazy("at"))(lazy(2))(lazy("at l x = (x == 0) (head l) (at (tail l) (-- (x) ) )"))((function(){var $m; return function(){return $m || ($m = function(L_l){return function(L_x){return resolve(L_$p$p)(L_x)(lazy(0))((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_l))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_at)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_l))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_$_$_)(L_x))}})()))}})())}})}})())},
  function(){return resolve(L_define)(lazy("series"))(lazy(2))(lazy("series func n = n:(series func (func n))"))((function(){var $m; return function(){return $m || ($m = function(L_func){return function(L_n){return resolve(L_cons)(L_n)((function(){var $m; return function(){return $m || ($m = resolve(L_series)(L_func)((function(){var $m; return function(){return $m || ($m = resolve(L_func)(L_n))}})()))}})())}})}})())},
  function(){return resolve(L_define)(lazy("from"))(lazy(1))(lazy("from n = series ++ n"))((function(){var $m; return function(){return $m || ($m = function(L_n){return resolve(L_series)(L_$o$o)(L_n)})}})())},
  function(){return resolve(L_define)(lazy("fromBy"))(lazy(2))(lazy("fromBy n inc = series ((+) inc) n"))((function(){var $m; return function(){return $m || ($m = function(L_n){return function(L_inc){return resolve(L_series)((function(){var $m; return function(){return $m || ($m = resolve(L_$o)(L_inc))}})())(L_n)}})}})())},
  function(){return resolve(L_define)(lazy("fromTo"))(lazy(2))(lazy("fromTo n m = takeWhile ((>) m) (from n)"))((function(){var $m; return function(){return $m || ($m = function(L_n){return function(L_m){return resolve(L_takeWhile)((function(){var $m; return function(){return $m || ($m = resolve(L_$z)(L_m))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_from)(L_n))}})())}})}})())},
  function(){return resolve(L_define)(lazy("fromToBy"))(lazy(3))(lazy("fromToBy n m inc = takeWhile ((>) m) (fromBy n inc)"))((function(){var $m; return function(){return $m || ($m = function(L_n){return function(L_m){return function(L_inc){return resolve(L_takeWhile)((function(){var $m; return function(){return $m || ($m = resolve(L_$z)(L_m))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_fromBy)(L_n)(L_inc))}})())}}})}})())},
  function(){return resolve(L_define)(lazy("count"))(lazy(2))(lazy("count x l = countIf (eq x) l"))((function(){var $m; return function(){return $m || ($m = function(L_x){return function(L_l){return resolve(L_countIf)((function(){var $m; return function(){return $m || ($m = resolve(L_eq)(L_x))}})())(L_l)}})}})())},
  function(){return resolve(L_define)(lazy("countIf"))(lazy(2))(lazy("countIf f l = (eq l nil) 0\n  + (f (head l) 1 0) (countIf f (tail l))"))((function(){var $m; return function(){return $m || ($m = function(L_f){return function(L_l){return resolve(L_eq)(L_l)(L_nil)(lazy(0))((function(){var $m; return function(){return $m || ($m = resolve(L_$o)((function(){var $m; return function(){return $m || ($m = resolve(L_f)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_l))}})())(lazy(1))(lazy(0)))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_countIf)(L_f)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_l))}})()))}})()))}})())}})}})())},
  function(){return resolve(L_define)(lazy("countIfNot"))(lazy(2))(lazy("countIfNot f l = countIf (\\x. not (f x)) l"))((function(){var $m; return function(){return $m || ($m = function(L_f){return function(L_l){return resolve(L_countIf)((function(){var $m; return function(){return $m || ($m = function(L_x){return resolve(L_not)((function(){var $m; return function(){return $m || ($m = resolve(L_f)(L_x))}})())})}})())(L_l)}})}})())},
  function(){return resolve(L_define)(lazy("odds"))(lazy(1))(lazy("odds l = l\n  \\h t D . [h | evens t]\n  nil"))((function(){var $m; return function(){return $m || ($m = function(L_l){return resolve(L_l)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_cons)(L_h)((function(){var $m; return function(){return $m || ($m = resolve(L_evens)(L_t))}})())}}})}})())(L_nil)})}})())},
  function(){return resolve(L_define)(lazy("evens"))(lazy(1))(lazy("evens l = l\n  \\h t D . odds t\n  nil"))((function(){var $m; return function(){return $m || ($m = function(L_l){return resolve(L_l)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_odds)(L_t)}}})}})())(L_nil)})}})())},
  function(){return resolve(L_define)(lazy("cleave"))(lazy(1))(lazy("cleave l = [(evens l) | (odds l)]"))((function(){var $m; return function(){return $m || ($m = function(L_l){return resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_evens)(L_l))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_odds)(L_l))}})())})}})())},
  function(){return resolve(L_define)(lazy("merge"))(lazy(3))(lazy("merge cmp a b = a\n  \\ah at D . b\n    \\bh bt D . cmp ah bh\n      [ah | (merge cmp at b)]\n      [bh | (merge cmp a bt)]\n    a\n  b"))((function(){var $m; return function(){return $m || ($m = function(L_cmp){return function(L_a){return function(L_b){return resolve(L_a)((function(){var $m; return function(){return $m || ($m = function(L_ah){return function(L_at){return function(L_D){return resolve(L_b)((function(){var $m; return function(){return $m || ($m = function(L_bh){return function(L_bt){return function(L_D_0){return resolve(L_cmp)(L_ah)(L_bh)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_ah)((function(){var $m; return function(){return $m || ($m = resolve(L_merge)(L_cmp)(L_at)(L_b))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_bh)((function(){var $m; return function(){return $m || ($m = resolve(L_merge)(L_cmp)(L_a)(L_bt))}})()))}})())}}})}})())(L_a)}}})}})())(L_b)}}})}})())},
  function(){return resolve(L_define)(lazy("mergeSort"))(lazy(2))(lazy("mergeSort cmp l = l\n  \\h t D . eq (tail l) nil\n    l\n    do\n      cl = cleave l\n      e = head cl\n      o = tail cl\n      merge cmp (mergeSort cmp e) (mergeSort cmp o)\n  nil"))((function(){var $m; return function(){return $m || ($m = function(L_cmp){return function(L_l){return resolve(L_l)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_eq)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_l))}})())(L_nil)(L_l)(function(){
var L_o, L_e, L_cl;

L_o = (function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_cl))}})();

L_e = (function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_cl))}})();

L_cl = (function(){var $m; return function(){return $m || ($m = resolve(L_cleave)(L_l))}})();
return resolve(L_merge)(L_cmp)((function(){var $m; return function(){return $m || ($m = resolve(L_mergeSort)(L_cmp)(L_e))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_mergeSort)(L_cmp)(L_o))}})())})}}})}})())(L_nil)}})}})())},
  function(){return resolve(L_define)(lazy("sort"))(lazy(1))(lazy("sort l = sortBy lte l"))((function(){var $m; return function(){return $m || ($m = function(L_l){return resolve(L_sortBy)(L_lte)(L_l)})}})())},
  function(){return resolve(L_define)(lazy("sortBy"))(lazy(2))(lazy("sortBy cmp l = mergeSort cmp l"))((function(){var $m; return function(){return $m || ($m = function(L_cmp){return function(L_l){return resolve(L_mergeSort)(L_cmp)(L_l)}})}})())},
  function(){return resolve(L_addToken)(lazy("->"))},
  function(){return resolve(L_define)(lazy("mkStr"))(lazy(1))(lazy("mkStr tok = concat['\"' (tokenString tok) '\"']"))((function(){var $m; return function(){return $m || ($m = function(L_tok){return resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("\""))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_tokenString)(L_tok))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("\""))(L_nil))}})()))}})()))}})())})}})())},
  function(){return resolve(L_defMacro)(lazy("defCase"))((function(){var $m; return function(){return $m || ($m = function(L_list){return (function(){

var L_t3, L_h3, L_t2, L_h2, L_t1, L_h1;

L_t3 = (function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_t2))}})();

L_h3 = (function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_t2))}})();

L_t2 = (function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_t1))}})();

L_h2 = (function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_t1))}})();

L_t1 = (function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})();

L_h1 = (function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})();
return resolve(L_and)((function(){var $m; return function(){return $m || ($m = resolve(L_isCons)(L_list))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_and)((function(){var $m; return function(){return $m || ($m = resolve(L_isCons)(L_t1))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_and)((function(){var $m; return function(){return $m || ($m = resolve(L_isCons)(L_t2))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_and)((function(){var $m; return function(){return $m || ($m = resolve(L_isTokenString)(L_h2)(lazy(".")))}})())(L_true))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_makeCaseArgs)(L_list)((function(){var $m; return function(){return $m || ($m = resolve(L_mkStr)(L_h1))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_mkStr)(L_h3))}})())(L_t3)(L_id))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_parseErr)(lazy("Error in case definition -- expected func.name args | condition -> action, but got "))(L_list))}})())})()})}})())},
  function(){return resolve(L_define)(lazy("makeCaseArgs"))(lazy(5))(lazy("makeCaseArgs orig funcName altName rest args = rest\n  \\h t D . isTokenString h '|'\n    makeCaseCondition orig funcName altName (args nil) t id\n    makeCaseArgs orig funcName altName t (dlPush args h)\n  parseErr \"Error in case definition -- expected func.name args | condition -> action, but got \" orig"))((function(){var $m; return function(){return $m || ($m = function(L_orig){return function(L_funcName){return function(L_altName){return function(L_rest){return function(L_args){return resolve(L_rest)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_isTokenString)(L_h)(lazy("|"))((function(){var $m; return function(){return $m || ($m = resolve(L_makeCaseCondition)(L_orig)(L_funcName)(L_altName)((function(){var $m; return function(){return $m || ($m = resolve(L_args)(L_nil))}})())(L_t)(L_id))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_makeCaseArgs)(L_orig)(L_funcName)(L_altName)(L_t)((function(){var $m; return function(){return $m || ($m = resolve(L_dlPush)(L_args)(L_h))}})()))}})())}}})}})())((function(){var $m; return function(){return $m || ($m = resolve(L_parseErr)(lazy("Error in case definition -- expected func.name args | condition -> action, but got "))(L_orig))}})())}}}}})}})())},
  function(){return resolve(L_define)(lazy("makeCaseCondition"))(lazy(6))(lazy("makeCaseCondition orig funcName altName args rest cond = rest\n  \\h t D . isTokenString h '->'\n    foldr1 append [['altDef' funcName altName (length args) '\\\\'] args ['.' (cond nil) ['some' t] 'none']]\n    makeCaseCondition orig funcName altName args t (dlPush cond h)\n parseErr \"Error in case definition -- expected func.name args | condition -> action, but got \" orig"))((function(){var $m; return function(){return $m || ($m = function(L_orig){return function(L_funcName){return function(L_altName){return function(L_args){return function(L_rest){return function(L_cond){return resolve(L_rest)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return function(L_D){return resolve(L_isTokenString)(L_h)(lazy("->"))((function(){var $m; return function(){return $m || ($m = resolve(L_foldr1)(L_append)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("altDef"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_funcName)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_altName)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_length)(L_args))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("\\"))(L_nil))}})()))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_args)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("."))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cond)(L_nil))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("some"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_t)(L_nil))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("none"))(L_nil))}})()))}})()))}})()))}})())(L_nil))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_makeCaseCondition)(L_orig)(L_funcName)(L_altName)(L_args)(L_t)((function(){var $m; return function(){return $m || ($m = resolve(L_dlPush)(L_cond)(L_h))}})()))}})())}}})}})())((function(){var $m; return function(){return $m || ($m = resolve(L_parseErr)(lazy("Error in case definition -- expected func.name args | condition -> action, but got "))(L_orig))}})())}}}}}})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("some"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("Some("))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_obj)(L_id)(L_false))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(")"))(L_nil))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("some2"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_some2)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("Some2("))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_obj)((function(){var $m; return function(){return $m || ($m = function(L_a){return function(L_b){return resolve(L_cons)(L_a)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(", "))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_b)(L_nil))}})()))}})())}})}})())(L_false))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(")"))(L_nil))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("none"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_none)((function(){var $m; return function(){return $m || ($m = resolve(L_some)(lazy("None")))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("left"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_left)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("Left("))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_obj)(L_id)(L_id))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(")"))(L_nil))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("right"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_right)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("Right("))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_obj)(L_id)(L_id))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(")"))(L_nil))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("nil"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_nil)((function(){var $m; return function(){return $m || ($m = resolve(L_some)(lazy("nil")))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("assoc"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_isAlist)(L_obj)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_flatten)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("{"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_intersperse)((function(){var $m; return function(){return $m || ($m = resolve(L_map)((function(){var $m; return function(){return $m || ($m = function(L_item){return resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_item))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(":"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_item))}})()))}})())(L_nil))}})()))}})())})}})())(L_obj))}})())(lazy(" ")))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("}"))(L_nil))}})()))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("hamt"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_hamt)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_flatten)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("hamt{"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_intersperse)((function(){var $m; return function(){return $m || ($m = resolve(L_map)((function(){var $m; return function(){return $m || ($m = function(L_item){return resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_item))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(":"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_item))}})()))}})())(L_nil))}})()))}})())})}})())((function(){var $m; return function(){return $m || ($m = resolve(L_hamtPairs)(L_obj))}})()))}})())(lazy(" ")))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("}"))(L_nil))}})()))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_altDef)(lazy("show"))(lazy("cons"))(lazy(1))((function(){var $m; return function(){return $m || ($m = function(L_obj){return resolve(L_hasType)(L_obj)(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_flatten)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("["))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_obj))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_showConsElements)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_obj))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("]"))(L_nil))}})()))}})()))}})()))}})()))}})()))}})()))}})())(L_none)})}})())},
  function(){return resolve(L_define)(lazy("showConsElements"))(lazy(1))(lazy("showConsElements list = isCons list\n  [' ' (show (head list)) (showConsElements (tail list))]\n  isNil list\n    ''\n    [' | ' (show list)]"))((function(){var $m; return function(){return $m || ($m = function(L_list){return resolve(L_isCons)(L_list)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(" "))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_showConsElements)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})()))}})())(L_nil))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_isNil)(L_list)(lazy(""))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy(" | "))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_show)(L_list))}})())(L_nil))}})()))}})()))}})())})}})())},
  function(){return resolve(L_altDef)(lazy("bind"))(lazy("option"))(lazy(2))((function(){var $m; return function(){return $m || ($m = function(L_opt){return function(L_cont){return resolve(L_or)((function(){var $m; return function(){return $m || ($m = resolve(L_hasType)(L_opt)(L_some))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_hasType)(L_opt)(L_none))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_opt)((function(){var $m; return function(){return $m || ($m = function(L_value){return resolve(L_cont)(L_value)})}})())(L_none))}})()))}})())(L_none)}})}})())},
  function(){return resolve(L_altDef)(lazy("bind"))(lazy("either"))(lazy(2))((function(){var $m; return function(){return $m || ($m = function(L_either){return function(L_cont){return resolve(L_or)((function(){var $m; return function(){return $m || ($m = resolve(L_hasType)(L_either)(L_left))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_hasType)(L_either)(L_right))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_some)((function(){var $m; return function(){return $m || ($m = resolve(L_either)((function(){var $m; return function(){return $m || ($m = function(L__){return resolve(L_either)})}})())((function(){var $m; return function(){return $m || ($m = function(L_value){return resolve(L_cont)(L_value)})}})()))}})()))}})())(L_none)}})}})())},
  function(){return resolve(L_defMacro)(lazy("defWrapper"))((function(){var $m; return function(){return $m || ($m = function(L_list){return resolve(L_grabLeftOfArrow)(L_list)(L_nil)((function(){var $m; return function(){return $m || ($m = function(L_left){return function(L_right){return resolve(L_cons)(lazy("override"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_strCat)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("'"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_strTokenString)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_left))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("'"))(L_nil))}})()))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_append)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("\\"))((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_left))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("."))(L_right))}})()))}})())(L_nil))}})()))}})())}})}})())})}})())},
  function(){return resolve(L_define)(lazy("grabLeftOfArrow"))(lazy(3))(lazy("grabLeftOfArrow list left cont = isTokenString (head list) '->'\n  cont (reverse left) (tail list)\n  grabLeftOfArrow (tail list) (head list) : left cont"))((function(){var $m; return function(){return $m || ($m = function(L_list){return function(L_left){return function(L_cont){return resolve(L_isTokenString)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})())(lazy("->"))((function(){var $m; return function(){return $m || ($m = resolve(L_cont)((function(){var $m; return function(){return $m || ($m = resolve(L_reverse)(L_left))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_grabLeftOfArrow)((function(){var $m; return function(){return $m || ($m = resolve(L_tail)(L_list))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_head)(L_list))}})())(L_left))}})())(L_cont))}})())}}})}})())},
  function(){return resolve(L_override)(lazy("head"))((function(){var $m; return function(){return $m || ($m = function(L_oldHead){return function(L_list){return resolve(L_assertType)(lazy("head argument"))(L_cons)(L_list)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return resolve(L_h)}})}})())}})}})())},
  function(){return resolve(L_override)(lazy("tail"))((function(){var $m; return function(){return $m || ($m = function(L_oldTail){return function(L_list){return resolve(L_assertType)(lazy("tail argument"))(L_cons)(L_list)((function(){var $m; return function(){return $m || ($m = function(L_h){return function(L_t){return resolve(L_t)}})}})())}})}})())},
  function(){return resolve(L_override)(lazy("hamtWith"))((function(){var $m; return function(){return $m || ($m = function(L_oldHamtWith){return function(L_key){return function(L_value){return function(L_hamt){return resolve(L_oldHamtWith)((function(){var $m; return function(){return $m || ($m = resolve(L_assertType)(lazy("hamtWith key"))(lazy("*string"))(L_key))}})())(L_value)(L_hamt)}}}})}})())},
  function(){return resolve(L_define)(lazy("html"))(lazy(1))(lazy("html x = \\f . f x"))((function(){var $m; return function(){return $m || ($m = setDataType(function(L_x){return setType(function(L_f){return resolve(L_f)(L_x)}, 'html')}, 'html'))}})())},
  function(){return resolve(L_defTokenPack)(lazy("util"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("->"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("--"))((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("++"))(L_nil))}})()))}})()))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("js["))(lazy("]")))}})())(L_nil))}})())((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(L_nil)(L_nil))}})()))}})()))}})())},
  function(){return resolve(L_addStdTokenPacks)((function(){var $m; return function(){return $m || ($m = resolve(L_cons)(lazy("util"))(L_nil))}})())}]);
